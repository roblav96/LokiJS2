{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ed5c0f5f9c734bd2ae60","webpack:///./packages/adapter-local-storage/src/local_storage_adapter.js","webpack:///./packages/adapter-local-storage/src/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yDAAyD;AAC5F,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;;AC9D4B;;AAI5B","file":"loki.adapter.local-storage.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LocalStorage\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LocalStorage\"] = factory();\n\telse\n\t\troot[\"Loki\"] = root[\"Loki\"] || {}, root[\"Loki\"][\"Adapter\"] = root[\"Loki\"][\"Adapter\"] || {}, root[\"Loki\"][\"Adapter\"][\"LocalStorage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed5c0f5f9c734bd2ae60","function localStorageAvailable() {\n  try {\n    return (window && window.localStorage !== undefined && window.localStorage !== null);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * A loki persistence adapter which persists to web browser's local storage object\n * @constructor LokiLocalStorageAdapter\n */\nexport class LocalStorageAdapter {\n\n\t/**\n\t * loadDatabase() - Load data from localstorage\n\t * @param {string} dbname - the name of the database to load\n\t * @returns {Promise} a Promise that resolves after the database was loaded\n\t * @memberof LokiLocalStorageAdapter\n\t */\n  loadDatabase(dbname) {\n    if (localStorageAvailable()) {\n      return Promise.resolve(localStorage.getItem(dbname));\n    }\n\n    return Promise.reject(new Error('localStorage is not available'));\n  }\n\n\t/**\n\t * saveDatabase() - save data to localstorage, will throw an error if the file can't be saved\n\t * might want to expand this to avoid dataloss on partial save\n\t * @param {string} dbname - the filename of the database to load\n\t * @returns {Promise} a Promise that resolves after the database was saved\n\t * @memberof LokiLocalStorageAdapter\n\t */\n  saveDatabase(dbname, dbstring) {\n    if (localStorageAvailable()) {\n      localStorage.setItem(dbname, dbstring);\n\n      return Promise.resolve();\n    }\n\n    return Promise.reject(new Error('localStorage is not available'));\n  }\n\n\t/**\n\t * deleteDatabase() - delete the database from localstorage, will throw an error if it\n\t * can't be deleted\n\t * @param {string} dbname - the filename of the database to delete\n\t * @returns {Promise} a Promise that resolves after the database was deleted\n\t * @memberof LokiLocalStorageAdapter\n\t */\n  deleteDatabase(dbname) {\n    if (localStorageAvailable()) {\n      localStorage.removeItem(dbname);\n\n      return Promise.resolve();\n    }\n\n    return Promise.reject(new Error('localStorage is not available'));\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/adapter-local-storage/src/local_storage_adapter.js\n// module id = 0\n// module chunks = 0","import {LocalStorageAdapter} from './local_storage_adapter';\n\nexport {\n  LocalStorageAdapter\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./packages/adapter-local-storage/src/index.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}