{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 65d0cac4fd685b578218?3791","webpack:///./src/lokijs.js","webpack:///external \"fs\""],"names":["root","factory","define","exports","module","loki","hasOwnProperty","Object","prototype","Utils","copyProperties","src","dest","prop","resolveTransformObject","subObj","params","depth","pname","indexOf","substring","resolveTransformParams","transform","idx","clonedStep","resolvedTransform","length","JSON","parse","stringify","push","ltHelper","prop1","prop2","equal","cv1","cv2","undefined","toString","gtHelper","sortHelper","desc","compoundeval","properties","obj1","obj2","res","field","i","len","dotSubScan","paths","fun","value","poffset","pathOffset","path","call","valueFound","element","Array","isArray","index","containsCheckFn","a","b","doQueryOp","val","op","p","LokiOps","$eq","$aeq","$ne","$dteq","$gt","$gte","$lt","$lte","$in","$nin","$keyin","$nkeyin","$definedin","$undefinedin","$regex","test","$containsString","$containsNone","$containsAny","checkFn","some","$contains","every","$type","type","Date","$size","$len","$where","$not","$and","$or","indexedOpsList","clone","data","method","cloneMethod","cloned","jQuery","extend","create","keys","map","cloneObjectArray","objarray","result","localStorageAvailable","window","localStorage","e","LokiEventEmitter","events","asyncListeners","on","eventName","listener","event","self","forEach","currentEventName","emit","setTimeout","removeListener","listen","listeners","splice","Loki","filename","options","collections","databaseVersion","engineVersion","autosave","autosaveInterval","autosaveHandle","persistenceMethod","persistenceAdapter","verbose","getENV","global","document","URL","ENV","env","clearChanges","getIndexedAdapter","adapter","require","initializePersistence","defaultPersistence","persistenceMethods","LokiFsAdapter","LokiLocalStorageAdapter","parseInt","autosaveDisable","loaded","autoload","loadDatabase","inflate","Promise","resolve","then","autosaveEnable","anonym","docs","collection","Collection","insert","console","addCollection","name","loadCollection","Error","getCollection","collectionName","listCollections","colls","objType","count","removeCollection","tmpcol","curcol","getName","serializeReplacer","key","serialize","toJson","loadJSON","serializedDb","dbObject","loadJSONObject","coll","copyColl","clen","j","loader","collObj","makeLoader","collOptions","inflater","proto","adaptiveBinaryIndices","transactional","disableChangesApi","cloneObjects","autoupdate","addAutoUpdateObserver","maxId","idIndex","binaryIndices","transforms","ensureId","uniqueNames","ensureUniqueIndex","DynamicViews","colldv","dv","addDynamicView","resultdata","resultsdirty","filterPipeline","sortCriteria","sortFunction","sortDirty","resultset","filteredrows","searchIsChained","filterInitialized","rematerialize","removeWhereFilters","close","saved","autosaveDirty","saveDatabase","generateChangesNotification","arrayOfCollectionNames","getCollName","changes","selectedCollections","concat","getChanges","serializeChanges","collectionNamesArray","flushChanges","fs","dbname","reject","stat","err","stats","isFile","readFile","encoding","readFileCallback","dbstring","writeFile","deleteDatabase","callback","unlink","deleteDatabaseCallback","getItem","setItem","removeItem","loadDatabaseCallback","dbString","TypeError","mode","exportDatabase","autosaveClearFlags","save","dirty","running","Resultset","queryObj","queryFunc","firstOnly","find","where","reset","toJSON","copy","limit","qty","prepareFullDocIndex","rscopy","slice","offset","pos","branch","parameters","step","rs","simplesort","property","compoundsort","sort","eqJoin","joinData","leftJoinKey","rightJoinKey","mapFun","mapReduce","mapFunction","reduceFunction","update","remove","comparefun","wrappedComparer","userComparer","propname","isdesc","props","findOr","expressionArray","fr","fri","frlen","docset","idxset","origCount","ei","elen","findAnd","query","queryObject","queryObjectOp","operator","searchByIndex","chain","RegExp","usingDotNotation","doIndexCheck","ensureIndex","t","split","seg","calculateRange","values","filter","rowIdx","segm","viewFunction","k","forceClones","forceCloneMethod","updateFunction","rcd","leftData","leftDataLength","rightData","rightDataLength","leftKeyisFunction","rightKeyisFunction","joinMap","left","right","DynamicView","rebuildPending","persistent","sortPriority","minRebuildInterval","cachedresultset","fpl","fpi","ofp","applyFind","branchResultset","removeFilters","applySort","queueSortPhase","applySimpleSort","applySortCriteria","criteria","startTransaction","commit","rollback","_indexOfFilterWithId","uid","_addFilter","reapplyFilters","filters","queueRebuildEvent","applyFilter","applyWhere","removeFilter","performSortPhase","suppressRebuildEvent","evaluateDocument","objIndex","isNew","ofr","oldPos","oldlen","evalResultset","newPos","removeDocument","constraints","unique","exact","cachedIndex","cachedBinaryIndex","cachedData","UniqueIndex","ExactIndex","ttl","age","ttlInterval","daemon","setTTL","indices","observerCallback","changedObjects","Set","add","object","change","removeAutoUpdateObserver","createChange","obj","operation","insertMeta","meta","created","getTime","revision","updateMeta","updated","createInsertChange","createUpdateChange","insertMetaWithChange","updateMetaWithChange","insertHandler","updateHandler","setHandlers","setChangesApi","enabled","insertCallback","updateCallback","deleteCallback","warning","warn","log","error","observe","unobserve","addTransform","setTransform","removeTransform","byExample","template","findObject","findOne","findObjects","ttlDaemonFuncGen","ttlDaemon","now","toRemove","daemonFilter","member","timestamp","diff","interval","clearInterval","setInterval","indexes","configureOptions","ensureAllIndexes","force","objAp","objBp","getSequencedIndexValues","idxvals","set","bIndices","flagBinaryIndexesDirty","flagBinaryIndexDirty","$loki","removeDynamicView","getDynamicView","findAndUpdate","filterFunction","results","message","doc","insertOne","bulkInsert","returnObj","clear","arr","get","oldInternal","newInternal","position","adaptiveBinaryIndexUpdate","isNaN","version","constrUnique","addedPos","dvlen","adaptiveBinaryIndexInsert","removeWhere","list","removeDataOnly","adaptiveBinaryIndexRemove","id","returnPosition","retpos","max","min","mid","getBinaryIndexPosition","dataPosition","binaryIndexName","range","idxPos","calculateRangeStart","removedFromIndexOnly","minVal","maxVal","lbound","ubound","lval","uval","by","findOneUnindexed","leftJoinProp","rightJoinProp","stages","getStage","commitLog","stage","stageName","commitStage","no_op","extract","isDotNotation","isDeepProperty","deepProperty","Math","apply","maxRecord","deep","minRecord","extractNumerical","parseBase10","Number","n","avg","average","stdDev","standardDeviation","dict","median","sub","half","floor","num","parseFloat","isNotUndefined","array","reduce","squareDiffs","sqrDiff","avgSquareDiff","sqrt","isDeep","pieces","shift","binarySearch","item","lo","hi","compared","found","BSonSort","KeyValueStore","setSort","bs","uniqueField","keyMap","lokiMap","fieldValue","byId","old","exactField","idxSet","SortedIndex","sortedField","bsr","getLt","getAll","getGt","start","end","getPos","persistenceAdapters"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;;;;;;AAMC,YAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACxB,OAAI,IAAJ,EAAgD;AAC9C;AACAC,KAAA,iCAAO,EAAP,oCAAWD,OAAX;AACD,IAHD,MAGO,IAAI,OAAOE,OAAP,KAAmB,QAAvB,EAAiC;AACtC;AACAC,YAAOD,OAAP,GAAiBF,SAAjB;AACD,IAHM,MAGA;AACL;AACAD,UAAKK,IAAL,GAAYJ,SAAZ;AACD;AACF,EAXA,aAWO,YAAY;;AAElB,UAAQ,YAAY;AAClB;;AAEA,SAAIK,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAtC;;AAEA,SAAIG,QAAQ;AACVC,uBAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACnC,aAAIC,IAAJ;AACA,cAAKA,IAAL,IAAaF,GAAb,EAAkB;AAChBC,gBAAKC,IAAL,IAAaF,IAAIE,IAAJ,CAAb;AACD;AACF,QANS;AAOV;AACAC,+BAAwB,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiC;AACvD,aAAIJ,IAAJ,EACEK,KADF;;AAGA,aAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,mBAAQ,CAAR;AACD;;AAED,aAAI,EAAEA,KAAF,IAAW,EAAf,EAAmB,OAAOF,MAAP;;AAEnB,cAAKF,IAAL,IAAaE,MAAb,EAAqB;AACnB,eAAI,OAAOA,OAAOF,IAAP,CAAP,KAAwB,QAAxB,IAAoCE,OAAOF,IAAP,EAAaM,OAAb,CAAqB,UAArB,MAAqC,CAA7E,EAAgF;AAC9ED,qBAAQH,OAAOF,IAAP,EAAaO,SAAb,CAAuB,CAAvB,CAAR;AACA,iBAAIJ,OAAOV,cAAP,CAAsBY,KAAtB,CAAJ,EAAkC;AAChCH,sBAAOF,IAAP,IAAeG,OAAOE,KAAP,CAAf;AACD;AACF,YALD,MAKO,IAAI,OAAOH,OAAOF,IAAP,CAAP,KAAwB,QAA5B,EAAsC;AAC3CE,oBAAOF,IAAP,IAAeJ,MAAMK,sBAAN,CAA6BC,OAAOF,IAAP,CAA7B,EAA2CG,MAA3C,EAAmDC,KAAnD,CAAf;AACD;AACF;;AAED,gBAAOF,MAAP;AACD,QA9BS;AA+BV;AACAM,+BAAwB,UAAUC,SAAV,EAAqBN,MAArB,EAA6B;AACnD,aAAIO,GAAJ;AAAA,aACEC,UADF;AAAA,aAEEC,oBAAoB,EAFtB;;AAIA,aAAI,OAAOT,MAAP,KAAkB,WAAtB,EAAmC,OAAOM,SAAP;;AAEnC;AACA,cAAKC,MAAM,CAAX,EAAcA,MAAMD,UAAUI,MAA9B,EAAsCH,KAAtC,EAA6C;AAC3C;AACAC,wBAAaG,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeP,UAAUC,GAAV,CAAf,CAAX,CAAb;AACAE,6BAAkBK,IAAlB,CAAuBrB,MAAMK,sBAAN,CAA6BU,UAA7B,EAAyCR,MAAzC,CAAvB;AACD;;AAED,gBAAOS,iBAAP;AACD;AA/CS,MAAZ;;AAkDA;;;;;AAKA,cAASM,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACrC,WAAIC,GAAJ,EAASC,GAAT;;AAEA;AACA,WAAI,CAACJ,KAAD,IAAU,CAACC,KAAX,IAAoBD,UAAU,IAA9B,IAAsCC,UAAU,IAApD,EAA0D;AACxD,aAAI,CAACD,UAAU,IAAV,IAAkBA,UAAU,KAA7B,MAAwCC,UAAU,IAAV,IAAkBA,UAAU,KAApE,CAAJ,EAAgF;AAC9E,eAAIC,KAAJ,EAAW;AACT,oBAAOF,UAAUC,KAAjB;AACD,YAFD,MAEO;AACL,iBAAID,KAAJ,EAAW;AACT,sBAAO,KAAP;AACD,cAFD,MAEO;AACL,sBAAOC,KAAP;AACD;AACF;AACF;;AAED,aAAIA,UAAUI,SAAV,IAAuBJ,UAAU,IAAjC,IAAyCD,UAAU,IAAnD,IAA2DC,UAAU,KAAzE,EAAgF;AAC9E,kBAAOC,KAAP;AACD;AACD,aAAIF,UAAUK,SAAV,IAAuBL,UAAU,IAAjC,IAAyCA,UAAU,KAAnD,IAA4DC,UAAU,IAA1E,EAAgF;AAC9E,kBAAO,IAAP;AACD;AACF;;AAED,WAAID,UAAUC,KAAd,EAAqB;AACnB,gBAAOC,KAAP;AACD;;AAED,WAAIF,QAAQC,KAAZ,EAAmB;AACjB,gBAAO,IAAP;AACD;;AAED,WAAID,QAAQC,KAAZ,EAAmB;AACjB,gBAAO,KAAP;AACD;;AAED;AACAE,aAAMH,MAAMM,QAAN,EAAN;AACAF,aAAMH,MAAMK,QAAN,EAAN;;AAEA,WAAIH,OAAOC,GAAX,EAAgB;AACd,gBAAOF,KAAP;AACD;;AAED,WAAIC,MAAMC,GAAV,EAAe;AACb,gBAAO,IAAP;AACD;;AAED,cAAO,KAAP;AACD;;AAED,cAASG,QAAT,CAAkBP,KAAlB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACrC,WAAIC,GAAJ,EAASC,GAAT;;AAEA;AACA,WAAI,CAACJ,KAAD,IAAU,CAACC,KAAX,IAAoBD,UAAU,IAA9B,IAAsCC,UAAU,IAApD,EAA0D;AACxD,aAAI,CAACD,UAAU,IAAV,IAAkBA,UAAU,KAA7B,MAAwCC,UAAU,IAAV,IAAkBA,UAAU,KAApE,CAAJ,EAAgF;AAC9E,eAAIC,KAAJ,EAAW;AACT,oBAAOF,UAAUC,KAAjB;AACD,YAFD,MAEO;AACL,iBAAID,KAAJ,EAAW;AACT,sBAAO,CAACC,KAAR;AACD,cAFD,MAEO;AACL,sBAAO,KAAP;AACD;AACF;AACF;;AAED,aAAID,UAAUK,SAAV,IAAuBL,UAAU,IAAjC,IAAyCA,UAAU,KAAnD,IAA4DC,UAAU,IAA1E,EAAgF;AAC9E,kBAAOC,KAAP;AACD;AACD,aAAID,UAAUI,SAAV,IAAuBJ,UAAU,IAAjC,IAAyCD,UAAU,IAAnD,IAA2DC,UAAU,KAAzE,EAAgF;AAC9E,kBAAO,IAAP;AACD;AACF;;AAED,WAAID,UAAUC,KAAd,EAAqB;AACnB,gBAAOC,KAAP;AACD;;AAED,WAAIF,QAAQC,KAAZ,EAAmB;AACjB,gBAAO,IAAP;AACD;;AAED,WAAID,QAAQC,KAAZ,EAAmB;AACjB,gBAAO,KAAP;AACD;;AAED;AACAE,aAAMH,MAAMM,QAAN,EAAN;AACAF,aAAMH,MAAMK,QAAN,EAAN;;AAEA,WAAIH,OAAOC,GAAX,EAAgB;AACd,gBAAOF,KAAP;AACD;;AAED,WAAIC,MAAMC,GAAV,EAAe;AACb,gBAAO,IAAP;AACD;;AAED,cAAO,KAAP;AACD;;AAED,cAASI,UAAT,CAAoBR,KAApB,EAA2BC,KAA3B,EAAkCQ,IAAlC,EAAwC;AACtC,WAAIT,UAAUC,KAAd,EAAqB;AACnB,gBAAO,CAAP;AACD;;AAED,WAAIF,SAASC,KAAT,EAAgBC,KAAhB,EAAuB,KAAvB,CAAJ,EAAmC;AACjC,gBAAQQ,IAAD,GAAU,CAAV,GAAgB,CAAC,CAAxB;AACD;;AAED,WAAIF,SAASP,KAAT,EAAgBC,KAAhB,EAAuB,KAAvB,CAAJ,EAAmC;AACjC,gBAAQQ,IAAD,GAAU,CAAC,CAAX,GAAiB,CAAxB;AACD;;AAED;AACA,cAAO,CAAP;AACD;;AAED;;;;;;;;AAQA,cAASC,YAAT,CAAsBC,UAAtB,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8C;AAC5C,WAAIC,MAAM,CAAV;AACA,WAAIjC,IAAJ,EAAUkC,KAAV;AACA,YAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMN,WAAWjB,MAAjC,EAAyCsB,IAAIC,GAA7C,EAAkDD,GAAlD,EAAuD;AACrDnC,gBAAO8B,WAAWK,CAAX,CAAP;AACAD,iBAAQlC,KAAK,CAAL,CAAR;AACAiC,eAAMN,WAAWI,KAAKG,KAAL,CAAX,EAAwBF,KAAKE,KAAL,CAAxB,EAAqClC,KAAK,CAAL,CAArC,CAAN;AACA,aAAIiC,QAAQ,CAAZ,EAAe;AACb,kBAAOA,GAAP;AACD;AACF;AACD,cAAO,CAAP;AACD;;AAED;;;;;;;;;AASA,cAASI,UAAT,CAAoBlD,IAApB,EAA0BmD,KAA1B,EAAiCC,GAAjC,EAAsCC,KAAtC,EAA6CC,OAA7C,EAAsD;AACpD,WAAIC,aAAaD,WAAW,CAA5B;AACA,WAAIE,OAAOL,MAAMI,UAAN,CAAX;AACA,WAAIvD,SAASqC,SAAT,IAAsBrC,SAAS,IAA/B,IAAuC,CAACM,eAAemD,IAAf,CAAoBzD,IAApB,EAA0BwD,IAA1B,CAA5C,EAA6E;AAC3E,gBAAO,KAAP;AACD;;AAED,WAAIE,aAAa,KAAjB;AACA,WAAIC,UAAU3D,KAAKwD,IAAL,CAAd;AACA,WAAID,aAAa,CAAb,IAAkBJ,MAAMzB,MAA5B,EAAoC;AAClC;AACA;AACAgC,sBAAaN,IAAIO,OAAJ,EAAaN,KAAb,CAAb;AACD,QAJD,MAIO,IAAIO,MAAMC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;AACjC,cAAK,IAAIG,QAAQ,CAAZ,EAAeb,MAAMU,QAAQjC,MAAlC,EAA0CoC,QAAQb,GAAlD,EAAuDa,SAAS,CAAhE,EAAmE;AACjEJ,wBAAaR,WAAWS,QAAQG,KAAR,CAAX,EAA2BX,KAA3B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8CE,aAAa,CAA3D,CAAb;AACA,eAAIG,eAAe,IAAnB,EAAyB;AACvB;AACD;AACF;AACF,QAPM,MAOA;AACLA,sBAAaR,WAAWS,OAAX,EAAoBR,KAApB,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCE,aAAa,CAApD,CAAb;AACD;;AAED,cAAOG,UAAP;AACD;;AAED,cAASK,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,WAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBJ,MAAMC,OAAN,CAAcG,CAAd,CAA7B,EAA+C;AAC7C,gBAAO,UAAUC,CAAV,EAAa;AAClB,kBAAOD,EAAE7C,OAAF,CAAU8C,CAAV,MAAiB,CAAC,CAAzB;AACD,UAFD;AAGD,QAJD,MAIO,IAAI,OAAOD,CAAP,KAAa,QAAb,IAAyBA,MAAM,IAAnC,EAAyC;AAC9C,gBAAO,UAAUC,CAAV,EAAa;AAClB,kBAAO3D,eAAemD,IAAf,CAAoBO,CAApB,EAAuBC,CAAvB,CAAP;AACD,UAFD;AAGD;AACD,cAAO,IAAP;AACD;;AAED,cAASC,SAAT,CAAmBC,GAAnB,EAAwBC,EAAxB,EAA4B;AAC1B,YAAK,IAAIC,CAAT,IAAcD,EAAd,EAAkB;AAChB,aAAI9D,eAAemD,IAAf,CAAoBW,EAApB,EAAwBC,CAAxB,CAAJ,EAAgC;AAC9B,kBAAOC,QAAQD,CAAR,EAAWF,GAAX,EAAgBC,GAAGC,CAAH,CAAhB,CAAP;AACD;AACF;AACD,cAAO,KAAP;AACD;;AAED,SAAIC,UAAU;AACZ;AACA;AACA;AACAC,YAAK,UAAUP,CAAV,EAAaC,CAAb,EAAgB;AACnB,gBAAOD,MAAMC,CAAb;AACD,QANW;;AAQZ;AACAO,aAAM,UAAUR,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAOD,KAAKC,CAAZ;AACD,QAXW;;AAaZQ,YAAK,UAAUT,CAAV,EAAaC,CAAb,EAAgB;AACnB;AACA,aAAIA,MAAMA,CAAV,EAAa;AACX;AACA,kBAAQD,MAAMA,CAAd;AACD;;AAED,gBAAOA,MAAMC,CAAb;AACD,QArBW;;AAuBZS,cAAO,UAAUV,CAAV,EAAaC,CAAb,EAAgB;AACrB,aAAIlC,SAASiC,CAAT,EAAYC,CAAZ,EAAe,KAAf,CAAJ,EAA2B;AACzB,kBAAO,KAAP;AACD;AACD,gBAAO,CAAC1B,SAASyB,CAAT,EAAYC,CAAZ,EAAe,KAAf,CAAR;AACD,QA5BW;;AA8BZU,YAAK,UAAUX,CAAV,EAAaC,CAAb,EAAgB;AACnB,gBAAO1B,SAASyB,CAAT,EAAYC,CAAZ,EAAe,KAAf,CAAP;AACD,QAhCW;;AAkCZW,aAAM,UAAUZ,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAO1B,SAASyB,CAAT,EAAYC,CAAZ,EAAe,IAAf,CAAP;AACD,QApCW;;AAsCZY,YAAK,UAAUb,CAAV,EAAaC,CAAb,EAAgB;AACnB,gBAAOlC,SAASiC,CAAT,EAAYC,CAAZ,EAAe,KAAf,CAAP;AACD,QAxCW;;AA0CZa,aAAM,UAAUd,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAOlC,SAASiC,CAAT,EAAYC,CAAZ,EAAe,IAAf,CAAP;AACD,QA5CW;;AA8CZc,YAAK,UAAUf,CAAV,EAAaC,CAAb,EAAgB;AACnB,gBAAOA,EAAE9C,OAAF,CAAU6C,CAAV,MAAiB,CAAC,CAAzB;AACD,QAhDW;;AAkDZgB,aAAM,UAAUhB,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAOA,EAAE9C,OAAF,CAAU6C,CAAV,MAAiB,CAAC,CAAzB;AACD,QApDW;;AAsDZiB,eAAQ,UAAUjB,CAAV,EAAaC,CAAb,EAAgB;AACtB,gBAAOD,KAAKC,CAAZ;AACD,QAxDW;;AA0DZiB,gBAAS,UAAUlB,CAAV,EAAaC,CAAb,EAAgB;AACvB,gBAAO,EAAED,KAAKC,CAAP,CAAP;AACD,QA5DW;;AA8DZkB,mBAAY,UAAUnB,CAAV,EAAaC,CAAb,EAAgB;AAC1B,gBAAOA,EAAED,CAAF,MAAS3B,SAAhB;AACD,QAhEW;;AAkEZ+C,qBAAc,UAAUpB,CAAV,EAAaC,CAAb,EAAgB;AAC5B,gBAAOA,EAAED,CAAF,MAAS3B,SAAhB;AACD,QApEW;;AAsEZgD,eAAQ,UAAUrB,CAAV,EAAaC,CAAb,EAAgB;AACtB,gBAAOA,EAAEqB,IAAF,CAAOtB,CAAP,CAAP;AACD,QAxEW;;AA0EZuB,wBAAiB,UAAUvB,CAAV,EAAaC,CAAb,EAAgB;AAC/B,gBAAQ,OAAOD,CAAP,KAAa,QAAd,IAA4BA,EAAE7C,OAAF,CAAU8C,CAAV,MAAiB,CAAC,CAArD;AACD,QA5EW;;AA8EZuB,sBAAe,UAAUxB,CAAV,EAAaC,CAAb,EAAgB;AAC7B,gBAAO,CAACK,QAAQmB,YAAR,CAAqBzB,CAArB,EAAwBC,CAAxB,CAAR;AACD,QAhFW;;AAkFZwB,qBAAc,UAAUzB,CAAV,EAAaC,CAAb,EAAgB;AAC5B,aAAIyB,UAAU3B,gBAAgBC,CAAhB,CAAd;AACA,aAAI0B,YAAY,IAAhB,EAAsB;AACpB,kBAAQ9B,MAAMC,OAAN,CAAcI,CAAd,CAAD,GAAsBA,EAAE0B,IAAF,CAAOD,OAAP,CAAtB,GAA0CA,QAAQzB,CAAR,CAAjD;AACD;AACD,gBAAO,KAAP;AACD,QAxFW;;AA0FZ2B,kBAAW,UAAU5B,CAAV,EAAaC,CAAb,EAAgB;AACzB,aAAIyB,UAAU3B,gBAAgBC,CAAhB,CAAd;AACA,aAAI0B,YAAY,IAAhB,EAAsB;AACpB,kBAAQ9B,MAAMC,OAAN,CAAcI,CAAd,CAAD,GAAsBA,EAAE4B,KAAF,CAAQH,OAAR,CAAtB,GAA2CA,QAAQzB,CAAR,CAAlD;AACD;AACD,gBAAO,KAAP;AACD,QAhGW;;AAkGZ6B,cAAO,UAAU9B,CAAV,EAAaC,CAAb,EAAgB;AACrB,aAAI8B,OAAO,OAAO/B,CAAlB;AACA,aAAI+B,SAAS,QAAb,EAAuB;AACrB,eAAInC,MAAMC,OAAN,CAAcG,CAAd,CAAJ,EAAsB;AACpB+B,oBAAO,OAAP;AACD,YAFD,MAEO,IAAI/B,aAAagC,IAAjB,EAAuB;AAC5BD,oBAAO,MAAP;AACD;AACF;AACD,gBAAQ,OAAO9B,CAAP,KAAa,QAAd,GAA2B8B,SAAS9B,CAApC,GAAyCC,UAAU6B,IAAV,EAAgB9B,CAAhB,CAAhD;AACD,QA5GW;;AA8GZgC,cAAO,UAAUjC,CAAV,EAAaC,CAAb,EAAgB;AACrB,aAAIL,MAAMC,OAAN,CAAcG,CAAd,CAAJ,EAAsB;AACpB,kBAAQ,OAAOC,CAAP,KAAa,QAAd,GAA2BD,EAAEtC,MAAF,KAAauC,CAAxC,GAA6CC,UAAUF,EAAEtC,MAAZ,EAAoBuC,CAApB,CAApD;AACD;AACD,gBAAO,KAAP;AACD,QAnHW;;AAqHZiC,aAAM,UAAUlC,CAAV,EAAaC,CAAb,EAAgB;AACpB,aAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;AACzB,kBAAQ,OAAOC,CAAP,KAAa,QAAd,GAA2BD,EAAEtC,MAAF,KAAauC,CAAxC,GAA6CC,UAAUF,EAAEtC,MAAZ,EAAoBuC,CAApB,CAApD;AACD;AACD,gBAAO,KAAP;AACD,QA1HW;;AA4HZkC,eAAQ,UAAUnC,CAAV,EAAaC,CAAb,EAAgB;AACtB,gBAAOA,EAAED,CAAF,MAAS,IAAhB;AACD,QA9HW;;AAgIZ;AACA;AACA;AACA;AACAoC,aAAM,UAAUpC,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAO,CAACC,UAAUF,CAAV,EAAaC,CAAb,CAAR;AACD,QAtIW;;AAwIZoC,aAAM,UAAUrC,CAAV,EAAaC,CAAb,EAAgB;AACpB,cAAK,IAAI1C,MAAM,CAAV,EAAa0B,MAAMgB,EAAEvC,MAA1B,EAAkCH,MAAM0B,GAAxC,EAA6C1B,OAAO,CAApD,EAAuD;AACrD,eAAI,CAAC2C,UAAUF,CAAV,EAAaC,EAAE1C,GAAF,CAAb,CAAL,EAA2B;AACzB,oBAAO,KAAP;AACD;AACF;AACD,gBAAO,IAAP;AACD,QA/IW;;AAiJZ+E,YAAK,UAAUtC,CAAV,EAAaC,CAAb,EAAgB;AACnB,cAAK,IAAI1C,MAAM,CAAV,EAAa0B,MAAMgB,EAAEvC,MAA1B,EAAkCH,MAAM0B,GAAxC,EAA6C1B,OAAO,CAApD,EAAuD;AACrD,eAAI2C,UAAUF,CAAV,EAAaC,EAAE1C,GAAF,CAAb,CAAJ,EAA0B;AACxB,oBAAO,IAAP;AACD;AACF;AACD,gBAAO,KAAP;AACD;AAxJW,MAAd;;AA2JA;AACA,SAAIgF,iBAAiB,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC,KAAxC,EAA+C,MAA/C,CAArB;;AAEA,cAASC,KAAT,CAAeC,IAAf,EAAqBC,MAArB,EAA6B;AAC3B,WAAIC,cAAcD,UAAU,iBAA5B;AAAA,WACEE,MADF;;AAGA,eAAQD,WAAR;AACA,cAAK,iBAAL;AACEC,oBAASjF,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAe4E,IAAf,CAAX,CAAT;AACA;AACF,cAAK,oBAAL;AACEG,oBAASC,OAAOC,MAAP,CAAc,IAAd,EAAoB,EAApB,EAAwBL,IAAxB,CAAT;AACA;AACF,cAAK,SAAL;AACEG,oBAASrG,OAAOwG,MAAP,CAAcN,KAAKjG,SAAL,IAAkB,IAAhC,CAAT;AACAD,kBAAOyG,IAAP,CAAYP,IAAZ,EAAkBQ,GAAlB,CAAsB,UAAUjE,CAAV,EAAa;AACjC4D,oBAAO5D,CAAP,IAAYyD,KAAKzD,CAAL,CAAZ;AACD,YAFD;AAGA;AACF;AACE;AAdF;;AAiBA;AACA;AACA;AACA,cAAO4D,MAAP;AACD;;AAED,cAASM,gBAAT,CAA0BC,QAA1B,EAAoCT,MAApC,EAA4C;AAC1C,WAAI1D,CAAJ;AAAA,WACEoE,SAAS,EADX;;AAGA,WAAIV,UAAU,iBAAd,EAAiC;AAC/B,gBAAOF,MAAMW,QAAN,EAAgBT,MAAhB,CAAP;AACD;;AAED1D,WAAImE,SAASzF,MAAT,GAAkB,CAAtB;;AAEA,cAAOsB,KAAK,CAAZ,EAAeA,GAAf,EAAoB;AAClBoE,gBAAOtF,IAAP,CAAY0E,MAAMW,SAASnE,CAAT,CAAN,EAAmB0D,MAAnB,CAAZ;AACD;;AAED,cAAOU,MAAP;AACD;;AAED,cAASC,qBAAT,GAAiC;AAC/B,WAAI;AACF,gBAAQC,UAAUA,OAAOC,YAAP,KAAwBlF,SAAlC,IAA+CiF,OAAOC,YAAP,KAAwB,IAA/E;AACD,QAFD,CAEE,OAAOC,CAAP,EAAU;AACV,gBAAO,KAAP;AACD;AACF;;AAGD;;;;;;;AAOA,cAASC,gBAAT,GAA4B,CAAE;;AAE9B;;;;AAIAA,sBAAiBjH,SAAjB,CAA2BkH,MAA3B,GAAoC,EAApC;;AAEA;;;;;;AAMAD,sBAAiBjH,SAAjB,CAA2BmH,cAA3B,GAA4C,KAA5C;;AAEA;;;;;;;AAOAF,sBAAiBjH,SAAjB,CAA2BoH,EAA3B,GAAgC,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAC7D,WAAIC,KAAJ;AACA,WAAIC,OAAO,IAAX;;AAEA,WAAIpE,MAAMC,OAAN,CAAcgE,SAAd,CAAJ,EAA8B;AAC5BA,mBAAUI,OAAV,CAAkB,UAASC,gBAAT,EAA2B;AAC3CF,gBAAKJ,EAAL,CAAQM,gBAAR,EAA0BJ,QAA1B;AACD,UAFD;AAGA,gBAAOA,QAAP;AACD;;AAEDC,eAAQ,KAAKL,MAAL,CAAYG,SAAZ,CAAR;AACA,WAAI,CAACE,KAAL,EAAY;AACVA,iBAAQ,KAAKL,MAAL,CAAYG,SAAZ,IAAyB,EAAjC;AACD;AACDE,aAAMjG,IAAN,CAAWgG,QAAX;AACA,cAAOA,QAAP;AACD,MAjBD;;AAmBA;;;;;;;;AAQAL,sBAAiBjH,SAAjB,CAA2B2H,IAA3B,GAAkC,UAAUN,SAAV,EAAqBpB,IAArB,EAA2B;AAC3D,WAAIuB,OAAO,IAAX;AACA,WAAIH,aAAa,KAAKH,MAAL,CAAYG,SAAZ,CAAjB,EAAyC;AACvC,cAAKH,MAAL,CAAYG,SAAZ,EAAuBI,OAAvB,CAA+B,UAAUH,QAAV,EAAoB;AACjD,eAAIE,KAAKL,cAAT,EAAyB;AACvBS,wBAAW,YAAY;AACrBN,wBAASrB,IAAT;AACD,cAFD,EAEG,CAFH;AAGD,YAJD,MAIO;AACLqB,sBAASrB,IAAT;AACD;AAEF,UATD;AAUD;AACF,MAdD;;AAgBA;;;;;;AAMAgB,sBAAiBjH,SAAjB,CAA2B6H,cAA3B,GAA4C,UAAUR,SAAV,EAAqBC,QAArB,EAA+B;AACzE,WAAIE,OAAO,IAAX;AACA,WAAIpE,MAAMC,OAAN,CAAcgE,SAAd,CAAJ,EAA8B;AAC5BA,mBAAUI,OAAV,CAAkB,UAASC,gBAAT,EAA2B;AAC3CF,gBAAKK,cAAL,CAAoBH,gBAApB,EAAsCI,MAAtC;AACD,UAFD;AAGD;;AAED,WAAI,KAAKZ,MAAL,CAAYG,SAAZ,CAAJ,EAA4B;AAC1B,aAAIU,YAAY,KAAKb,MAAL,CAAYG,SAAZ,CAAhB;AACAU,mBAAUC,MAAV,CAAiBD,UAAUpH,OAAV,CAAkB2G,QAAlB,CAAjB,EAA8C,CAA9C;AACD;AACF,MAZD;;AAcA;;;;;;;;;AASA,cAASW,IAAT,CAAcC,QAAd,EAAwBC,OAAxB,EAAiC;AAC/B,YAAKD,QAAL,GAAgBA,YAAY,SAA5B;AACA,YAAKE,WAAL,GAAmB,EAAnB;;AAEA;AACA;AACA,YAAKC,eAAL,GAAuB,GAAvB;AACA,YAAKC,aAAL,GAAqB,GAArB;;AAEA;AACA;AACA,YAAKC,QAAL,GAAgB,KAAhB;AACA,YAAKC,gBAAL,GAAwB,IAAxB;AACA,YAAKC,cAAL,GAAsB,IAAtB;;AAEA,YAAKN,OAAL,GAAe,EAAf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAKO,iBAAL,GAAyB,IAAzB;;AAEA;AACA,YAAKC,kBAAL,GAA0B,IAA1B;;AAEA;AACA,YAAKC,OAAL,GAAeT,WAAWA,QAAQrI,cAAR,CAAuB,SAAvB,CAAX,GAA+CqI,QAAQS,OAAvD,GAAiE,KAAhF;;AAEA,YAAK1B,MAAL,GAAc;AACZ,iBAAQ,EADI;AAEZ,mBAAU,EAFE;AAGZ,yBAAgB,EAHJ;AAIZ,kBAAS,EAJG;AAKZ,oBAAW,EALC;AAMZ,oBAAW;AANC,QAAd;;AASA,WAAI2B,SAAS,YAAY;AACvB,aAAI,OAAO/B,MAAP,KAAkB,WAAtB,EAAmC;AACjC,kBAAO,QAAP;AACD;;AAED,aAAI,OAAOgC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOhC,MAA5C,EAAoD;AAClD,kBAAO,QAAP,CADkD,CACjC;AAClB;;AAED,aAAI,OAAOiC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,eAAIA,SAASC,GAAT,CAAarI,OAAb,CAAqB,SAArB,MAAoC,CAAC,CAArC,IAA0CoI,SAASC,GAAT,CAAarI,OAAb,CAAqB,UAArB,MAAqC,CAAC,CAApF,EAAuF;AACrF,oBAAO,SAAP;AACD;AACD,kBAAO,SAAP;AACD;AACD,gBAAO,SAAP;AACD,QAhBD;;AAkBA;AACA;AACA;AACA;AACA,WAAIwH,WAAWA,QAAQrI,cAAR,CAAuB,KAAvB,CAAf,EAA8C;AAC5C,cAAKmJ,GAAL,GAAWd,QAAQe,GAAnB;AACD,QAFD,MAEO;AACL,cAAKD,GAAL,GAAWJ,QAAX;AACD;;AAED,YAAKzB,EAAL,CAAQ,MAAR,EAAgB,KAAK+B,YAArB;AAED;;AAED;AACAlB,UAAKjI,SAAL,GAAiB,IAAIiH,gBAAJ,EAAjB;;AAEA;AACA;AACAgB,UAAKjI,SAAL,CAAeoJ,iBAAf,GAAmC,YAAY;AAC7C,WAAIC,OAAJ;;AAEA,WAAI,IAAJ,EAAmC;AACjCA,mBAAU,mBAAAC,CAAQ,qJAAR,CAAV;AACD;;AAED,cAAOD,OAAP;AACD,MARD;;AAWA;;;;;;;;;;;;AAYApB,UAAKjI,SAAL,CAAeuJ,qBAAf,GAAuC,UAAUpB,OAAV,EAAmB;AACxD,WAAIX,OAAO,IAAX;AACA,WAAIgC,qBAAqB;AACrB,mBAAU,IADW;AAErB,oBAAW,cAFU;AAGrB,oBAAW;AAHU,QAAzB;AAAA,WAKEC,qBAAqB;AACnB,eAAMC,aADa;AAEnB,yBAAgBC;AAFG,QALvB;;AAUA,YAAKxB,OAAL,GAAeA,WAAW,EAA1B;;AAEA,YAAKO,iBAAL,GAAyB,IAAzB;AACA;AACA;AACA,YAAKC,kBAAL,GAA0B,IAA1B;;AAEA;AACA,WAAI,KAAKR,OAAL,CAAarI,cAAb,CAA4B,mBAA5B,CAAJ,EAAsD;AACpD;AACA,aAAI,OAAQ2J,mBAAmB,KAAKtB,OAAL,CAAaO,iBAAhC,CAAR,KAAgE,UAApE,EAAgF;AAC9E,gBAAKA,iBAAL,GAAyB,KAAKP,OAAL,CAAaO,iBAAtC;AACA,gBAAKC,kBAAL,GAA0B,IAAIc,mBAAmB,KAAKtB,OAAL,CAAaO,iBAAhC,CAAJ,EAA1B;AACD;AACD;AACD;;AAED;AACA,WAAI,KAAKC,kBAAL,KAA4B,IAAhC,EAAsC;AACpC,cAAKD,iBAAL,GAAyBc,mBAAmB,KAAKP,GAAxB,CAAzB;AACA,aAAI,KAAKP,iBAAT,EAA4B;AAC1B,gBAAKC,kBAAL,GAA0B,IAAIc,mBAAmB,KAAKf,iBAAxB,CAAJ,EAA1B;AACD;AACF;;AAED;AACA,WAAI,KAAKP,OAAL,CAAarI,cAAb,CAA4B,SAA5B,CAAJ,EAA4C;AAC1C,cAAK4I,iBAAL,GAAyB,SAAzB;AACA,cAAKC,kBAAL,GAA0B,KAAKR,OAAL,CAAakB,OAAvC;AACD;;AAED,WAAI,KAAKlB,OAAL,CAAarI,cAAb,CAA4B,kBAA5B,CAAJ,EAAqD;AACnD,cAAK0I,gBAAL,GAAwBoB,SAAS,KAAKzB,OAAL,CAAaK,gBAAtB,EAAwC,EAAxC,CAAxB;AACD;;AAED,YAAKqB,eAAL;;AAEA,WAAIC,MAAJ;;AAEA;AACA,WAAI,KAAK3B,OAAL,CAAa4B,QAAjB,EAA2B;AACzBD,kBAAS,KAAKE,YAAL,CAAkB,KAAK7B,OAAL,CAAa8B,OAA/B,CAAT;AACD,QAFD,MAGK;AACHH,kBAASI,QAAQC,OAAR,EAAT;AACD;;AAED,cAAOL,OAAOM,IAAP,CAAY,YAAY;AAC7B,aAAI5C,KAAKW,OAAL,CAAaI,QAAjB,EAA2B;AACzBf,gBAAK6C,cAAL;AACD;AACF,QAJM,CAAP;AAKD,MAhED;;AAkEA;;;;;;;;;;;;AAYApC,UAAKjI,SAAL,CAAesK,MAAf,GAAwB,UAAUC,IAAV,EAAgBpC,OAAhB,EAAyB;AAC/C,WAAIqC,aAAa,IAAIC,UAAJ,CAAe,QAAf,EAAyBtC,OAAzB,CAAjB;AACAqC,kBAAWE,MAAX,CAAkBH,IAAlB;;AAEA,WAAI,KAAK3B,OAAT,EACE4B,WAAWG,OAAX,GAAqBA,OAArB;;AAEF,cAAOH,UAAP;AACD,MARD;;AAUA;;;;;;;;;;;;;;;;AAgBAvC,UAAKjI,SAAL,CAAe4K,aAAf,GAA+B,UAAUC,IAAV,EAAgB1C,OAAhB,EAAyB;AACtD,WAAIqC,aAAa,IAAIC,UAAJ,CAAeI,IAAf,EAAqB1C,OAArB,CAAjB;AACA,YAAKC,WAAL,CAAiB9G,IAAjB,CAAsBkJ,UAAtB;;AAEA,WAAI,KAAK5B,OAAT,EACE4B,WAAWG,OAAX,GAAqBA,OAArB;;AAEF,cAAOH,UAAP;AACD,MARD;;AAUAvC,UAAKjI,SAAL,CAAe8K,cAAf,GAAgC,UAAUN,UAAV,EAAsB;AACpD,WAAI,CAACA,WAAWK,IAAhB,EAAsB;AACpB,eAAM,IAAIE,KAAJ,CAAU,mDAAV,CAAN;AACD;AACD,YAAK3C,WAAL,CAAiB9G,IAAjB,CAAsBkJ,UAAtB;AACD,MALD;;AAOA;;;;;;AAMAvC,UAAKjI,SAAL,CAAegL,aAAf,GAA+B,UAAUC,cAAV,EAA0B;AACvD,WAAIzI,CAAJ;AAAA,WACEC,MAAM,KAAK2F,WAAL,CAAiBlH,MADzB;;AAGA,YAAKsB,IAAI,CAAT,EAAYA,IAAIC,GAAhB,EAAqBD,KAAK,CAA1B,EAA6B;AAC3B,aAAI,KAAK4F,WAAL,CAAiB5F,CAAjB,EAAoBqI,IAApB,KAA6BI,cAAjC,EAAiD;AAC/C,kBAAO,KAAK7C,WAAL,CAAiB5F,CAAjB,CAAP;AACD;AACF;;AAED;AACA,YAAKmF,IAAL,CAAU,SAAV,EAAqB,gBAAgBsD,cAAhB,GAAiC,YAAtD;AACA,cAAO,IAAP;AACD,MAbD;;AAeAhD,UAAKjI,SAAL,CAAekL,eAAf,GAAiC,YAAY;;AAE3C,WAAI1I,IAAI,KAAK4F,WAAL,CAAiBlH,MAAzB;AAAA,WACEiK,QAAQ,EADV;;AAGA,cAAO3I,GAAP,EAAY;AACV2I,eAAM7J,IAAN,CAAW;AACTuJ,iBAAM,KAAKzC,WAAL,CAAiB5F,CAAjB,EAAoBqI,IADjB;AAETtF,iBAAM,KAAK6C,WAAL,CAAiB5F,CAAjB,EAAoB4I,OAFjB;AAGTC,kBAAO,KAAKjD,WAAL,CAAiB5F,CAAjB,EAAoByD,IAApB,CAAyB/E;AAHvB,UAAX;AAKD;AACD,cAAOiK,KAAP;AACD,MAbD;;AAeA;;;;;AAKAlD,UAAKjI,SAAL,CAAesL,gBAAf,GAAkC,UAAUL,cAAV,EAA0B;AAC1D,WAAIzI,CAAJ;AAAA,WACEC,MAAM,KAAK2F,WAAL,CAAiBlH,MADzB;;AAGA,YAAKsB,IAAI,CAAT,EAAYA,IAAIC,GAAhB,EAAqBD,KAAK,CAA1B,EAA6B;AAC3B,aAAI,KAAK4F,WAAL,CAAiB5F,CAAjB,EAAoBqI,IAApB,KAA6BI,cAAjC,EAAiD;AAC/C,eAAIM,SAAS,IAAId,UAAJ,CAAeQ,cAAf,EAA+B,EAA/B,CAAb;AACA,eAAIO,SAAS,KAAKpD,WAAL,CAAiB5F,CAAjB,CAAb;AACA,gBAAK,IAAInC,IAAT,IAAiBmL,MAAjB,EAAyB;AACvB,iBAAIA,OAAO1L,cAAP,CAAsBO,IAAtB,KAA+BkL,OAAOzL,cAAP,CAAsBO,IAAtB,CAAnC,EAAgE;AAC9DmL,sBAAOnL,IAAP,IAAekL,OAAOlL,IAAP,CAAf;AACD;AACF;AACD,gBAAK+H,WAAL,CAAiBJ,MAAjB,CAAwBxF,CAAxB,EAA2B,CAA3B;AACA;AACD;AACF;AACF,MAjBD;;AAmBAyF,UAAKjI,SAAL,CAAeyL,OAAf,GAAyB,YAAY;AACnC,cAAO,KAAKZ,IAAZ;AACD,MAFD;;AAIA;;;;AAIA5C,UAAKjI,SAAL,CAAe0L,iBAAf,GAAmC,UAAUC,GAAV,EAAe9I,KAAf,EAAsB;AACvD,eAAQ8I,GAAR;AACA,cAAK,gBAAL;AACA,cAAK,oBAAL;AACA,cAAK,aAAL;AACA,cAAK,KAAL;AACE,kBAAO,IAAP;AACF;AACE,kBAAO9I,KAAP;AAPF;AASD,MAVD;;AAYA;;;;;;AAMAoF,UAAKjI,SAAL,CAAe4L,SAAf,GAA2B,YAAY;AACrC,cAAOzK,KAAKE,SAAL,CAAe,IAAf,EAAqB,KAAKqK,iBAA1B,EAA6C,CAA7C,CAAP;AACD,MAFD;AAGA;AACAzD,UAAKjI,SAAL,CAAe6L,MAAf,GAAwB5D,KAAKjI,SAAL,CAAe4L,SAAvC;;AAEA;;;;;;;AAOA3D,UAAKjI,SAAL,CAAe8L,QAAf,GAA0B,UAAUC,YAAV,EAAwB5D,OAAxB,EAAiC;AACzD,WAAI6D,QAAJ;AACA,WAAID,aAAa7K,MAAb,KAAwB,CAA5B,EAA+B;AAC7B8K,oBAAW,EAAX;AACD,QAFD,MAEO;AACLA,oBAAW7K,KAAKC,KAAL,CAAW2K,YAAX,CAAX;AACD;;AAED,YAAKE,cAAL,CAAoBD,QAApB,EAA8B7D,OAA9B;AACD,MATD;;AAWA;;;;;;;AAOAF,UAAKjI,SAAL,CAAeiM,cAAf,GAAgC,UAAUD,QAAV,EAAoB7D,OAApB,EAA6B;AAC3D,WAAI3F,IAAI,CAAR;AAAA,WACEC,MAAMuJ,SAAS5D,WAAT,GAAuB4D,SAAS5D,WAAT,CAAqBlH,MAA5C,GAAqD,CAD7D;AAAA,WAEEgL,IAFF;AAAA,WAGEC,QAHF;AAAA,WAIEC,IAJF;AAAA,WAKEC,CALF;AAAA,WAMEC,MANF;AAAA,WAOEC,OAPF;;AASA,YAAK1B,IAAL,GAAYmB,SAASnB,IAArB;;AAEA;AACA,YAAKxC,eAAL,GAAuB,GAAvB;AACA,WAAI2D,SAASlM,cAAT,CAAwB,iBAAxB,CAAJ,EAAgD;AAC9C,cAAKuI,eAAL,GAAuB2D,SAAS3D,eAAhC;AACD;;AAED,YAAKD,WAAL,GAAmB,EAAnB;;AAEA,gBAASoE,UAAT,CAAoBN,IAApB,EAA0B;AACxB,aAAIO,cAActE,QAAQ+D,KAAKrB,IAAb,CAAlB;AACA,aAAI6B,QAAJ;;AAEA,aAAID,YAAYE,KAAhB,EAAuB;AACrBD,sBAAWD,YAAYxC,OAAZ,IAAuBhK,MAAMC,cAAxC;;AAEA,kBAAO,UAAS+F,IAAT,EAAe;AACpB,iBAAIsG,UAAU,IAAIE,YAAYE,KAAhB,EAAd;AACAD,sBAASzG,IAAT,EAAesG,OAAf;AACA,oBAAOA,OAAP;AACD,YAJD;AAKD;;AAED,gBAAOE,YAAYxC,OAAnB;AACD;;AAED,YAAKzH,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,KAAK,CAAtB,EAAyB;AACvB0J,gBAAOF,SAAS5D,WAAT,CAAqB5F,CAArB,CAAP;AACA2J,oBAAW,KAAKvB,aAAL,CAAmBsB,KAAKrB,IAAxB,CAAX;;AAEAsB,kBAASS,qBAAT,GAAiCV,KAAKpM,cAAL,CAAoB,uBAApB,IAA8CoM,KAAKU,qBAAL,KAA+B,IAA7E,GAAoF,KAArH;AACAT,kBAASU,aAAT,GAAyBX,KAAKW,aAA9B;AACAV,kBAAShF,cAAT,GAA0B+E,KAAK/E,cAA/B;AACAgF,kBAASW,iBAAT,GAA6BZ,KAAKY,iBAAlC;AACAX,kBAASY,YAAT,GAAwBb,KAAKa,YAA7B;AACAZ,kBAAShG,WAAT,GAAuB+F,KAAK/F,WAAL,IAAoB,iBAA3C;AACAgG,kBAASa,UAAT,GAAsBd,KAAKc,UAA3B;;AAEA;AACAZ,gBAAOF,KAAKjG,IAAL,CAAU/E,MAAjB;AACAmL,aAAI,CAAJ;AACA,aAAIlE,WAAWA,QAAQrI,cAAR,CAAuBoM,KAAKrB,IAA5B,CAAf,EAAkD;AAChDyB,oBAASE,WAAWN,IAAX,CAAT;;AAEA,gBAAKG,CAAL,EAAQA,IAAID,IAAZ,EAAkBC,GAAlB,EAAuB;AACrBE,uBAAUD,OAAOJ,KAAKjG,IAAL,CAAUoG,CAAV,CAAP,CAAV;AACAF,sBAASlG,IAAT,CAAcoG,CAAd,IAAmBE,OAAnB;AACAJ,sBAASc,qBAAT,CAA+BV,OAA/B;AACD;AACF,UARD,MAQO;;AAEL,gBAAKF,CAAL,EAAQA,IAAID,IAAZ,EAAkBC,GAAlB,EAAuB;AACrBF,sBAASlG,IAAT,CAAcoG,CAAd,IAAmBH,KAAKjG,IAAL,CAAUoG,CAAV,CAAnB;AACAF,sBAASc,qBAAT,CAA+Bd,SAASlG,IAAT,CAAcoG,CAAd,CAA/B;AACD;AACF;;AAEDF,kBAASe,KAAT,GAAkBhB,KAAKjG,IAAL,CAAU/E,MAAV,KAAqB,CAAtB,GAA2B,CAA3B,GAA+BgL,KAAKgB,KAArD;AACAf,kBAASgB,OAAT,GAAmBjB,KAAKiB,OAAxB;AACA,aAAI,OAAQjB,KAAKkB,aAAb,KAAgC,WAApC,EAAiD;AAC/CjB,oBAASiB,aAAT,GAAyBlB,KAAKkB,aAA9B;AACD;AACD,aAAI,OAAOlB,KAAKmB,UAAZ,KAA2B,WAA/B,EAA4C;AAC1ClB,oBAASkB,UAAT,GAAsBnB,KAAKmB,UAA3B;AACD;;AAEDlB,kBAASmB,QAAT;;AAEA;AACAnB,kBAASoB,WAAT,GAAuB,EAAvB;AACA,aAAIrB,KAAKpM,cAAL,CAAoB,aAApB,CAAJ,EAAwC;AACtCqM,oBAASoB,WAAT,GAAuBrB,KAAKqB,WAA5B;AACA,gBAAKlB,IAAI,CAAT,EAAYA,IAAIF,SAASoB,WAAT,CAAqBrM,MAArC,EAA6CmL,GAA7C,EAAkD;AAChDF,sBAASqB,iBAAT,CAA2BrB,SAASoB,WAAT,CAAqBlB,CAArB,CAA3B;AACD;AACF;;AAED;AACA,aAAI,OAAQH,KAAKuB,YAAb,KAA+B,WAAnC,EAAgD;;AAEhD;AACA,cAAK,IAAI1M,MAAM,CAAf,EAAkBA,MAAMmL,KAAKuB,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,eAAI2M,SAASxB,KAAKuB,YAAL,CAAkB1M,GAAlB,CAAb;;AAEA,eAAI4M,KAAKxB,SAASyB,cAAT,CAAwBF,OAAO7C,IAA/B,EAAqC6C,OAAOvF,OAA5C,CAAT;AACAwF,cAAGE,UAAH,GAAgBH,OAAOG,UAAvB;AACAF,cAAGG,YAAH,GAAkBJ,OAAOI,YAAzB;AACAH,cAAGI,cAAH,GAAoBL,OAAOK,cAA3B;;AAEAJ,cAAGK,YAAH,GAAkBN,OAAOM,YAAzB;AACAL,cAAGM,YAAH,GAAkB,IAAlB;;AAEAN,cAAGO,SAAH,GAAeR,OAAOQ,SAAtB;AACAP,cAAGQ,SAAH,CAAaC,YAAb,GAA4BV,OAAOS,SAAP,CAAiBC,YAA7C;AACAT,cAAGQ,SAAH,CAAaE,eAAb,GAA+BX,OAAOS,SAAP,CAAiBE,eAAhD;AACAV,cAAGQ,SAAH,CAAaG,iBAAb,GAAiCZ,OAAOS,SAAP,CAAiBG,iBAAlD;;AAEAX,cAAGY,aAAH,CAAiB;AACfC,iCAAoB;AADL,YAAjB;AAGD;AACF;AACF,MAjHD;;AAmHA;;;;;;;AAOAvG,UAAKjI,SAAL,CAAeyO,KAAf,GAAuB,YAAY;AACjC,WAAIjH,OAAO,IAAX;AACA,WAAIkH,KAAJ;;AAEA;AACA;AACA,WAAI,KAAKnG,QAAT,EAAmB;AACjB,cAAKsB,eAAL;AACA,aAAI,KAAK8E,aAAL,EAAJ,EAA0B;AACxBD,mBAAQ,KAAKE,YAAL,EAAR;AACD;AACF;;AAED,WAAI,CAACF,KAAL,EAAY;AACVA,iBAAQxE,QAAQC,OAAR,EAAR;AACD;;AAED,cAAOuE,MAAMtE,IAAN,CAAW,YAAY;AAC5B5C,cAAKG,IAAL,CAAU,OAAV;AACD,QAFM,CAAP;AAGD,MApBD;;AAsBA;;;;AAIA;;;;;AAKA;;;;;;;;;;AAUAM,UAAKjI,SAAL,CAAe6O,2BAAf,GAA6C,UAAUC,sBAAV,EAAkC;AAC7E,gBAASC,WAAT,CAAqB7C,IAArB,EAA2B;AACzB,gBAAOA,KAAKrB,IAAZ;AACD;AACD,WAAImE,UAAU,EAAd;AAAA,WACEC,sBAAsBH,0BAA0B,KAAK1G,WAAL,CAAiB3B,GAAjB,CAAqBsI,WAArB,CADlD;;AAGA,YAAK3G,WAAL,CAAiBX,OAAjB,CAAyB,UAAUyE,IAAV,EAAgB;AACvC,aAAI+C,oBAAoBtO,OAApB,CAA4BoO,YAAY7C,IAAZ,CAA5B,MAAmD,CAAC,CAAxD,EAA2D;AACzD8C,qBAAUA,QAAQE,MAAR,CAAehD,KAAKiD,UAAL,EAAf,CAAV;AACD;AACF,QAJD;AAKA,cAAOH,OAAP;AACD,MAbD;;AAeA;;;;;AAKA/G,UAAKjI,SAAL,CAAeoP,gBAAf,GAAkC,UAAUC,oBAAV,EAAgC;AAChE,cAAOlO,KAAKE,SAAL,CAAe,KAAKwN,2BAAL,CAAiCQ,oBAAjC,CAAf,CAAP;AACD,MAFD;;AAIA;;;;AAIApH,UAAKjI,SAAL,CAAemJ,YAAf,GAA8B,YAAY;AACxC,YAAKf,WAAL,CAAiBX,OAAjB,CAAyB,UAAUyE,IAAV,EAAgB;AACvC,aAAIA,KAAKoD,YAAT,EAAuB;AACrBpD,gBAAKoD,YAAL;AACD;AACF,QAJD;AAKD,MAND;;AAQA;;;;AAKA;;;;;;AAMA;;;;AAIA,cAAS5F,aAAT,GAAyB;AACvB,YAAK6F,EAAL,GAAU,mBAAAjG,CAAQ,EAAR,CAAV;AACD;;AAED;;;;;;AAMAI,mBAAc1J,SAAd,CAAwBgK,YAAxB,GAAuC,SAASA,YAAT,CAAsBwF,MAAtB,EAA8B;AACnE,WAAIhI,OAAO,IAAX;;AAEA,cAAO,IAAI0C,OAAJ,CAAY,UAAUC,OAAV,EAAmBsF,MAAnB,EAA2B;AAC5CjI,cAAK+H,EAAL,CAAQG,IAAR,CAAaF,MAAb,EAAqB,UAAUG,GAAV,EAAeC,KAAf,EAAsB;AACzC,eAAI,CAACD,GAAD,IAAQC,MAAMC,MAAN,EAAZ,EAA4B;AAC1BrI,kBAAK+H,EAAL,CAAQO,QAAR,CAAiBN,MAAjB,EAAyB;AACvBO,yBAAU;AADa,cAAzB,EAEG,SAASC,gBAAT,CAA0BL,GAA1B,EAA+B1J,IAA/B,EAAqC;AACtC,mBAAI0J,GAAJ,EAAS;AACPF,wBAAOE,GAAP;AACD,gBAFD,MAEO;AACLxF,yBAAQlE,IAAR;AACD;AACF,cARD;AASD,YAVD,MAWK;AACHwJ;AACD;AACF,UAfD;AAgBD,QAjBM,CAAP;AAkBD,MArBD;;AAuBA;;;;;;;AAOA/F,mBAAc1J,SAAd,CAAwB4O,YAAxB,GAAuC,SAASA,YAAT,CAAsBY,MAAtB,EAA8BS,QAA9B,EAAwC;AAC7E,WAAIzI,OAAO,IAAX;;AAEA,cAAO,IAAI0C,OAAJ,CAAY,UAAUC,OAAV,EAAmBsF,MAAnB,EAA2B;AAC5CjI,cAAK+H,EAAL,CAAQW,SAAR,CAAkBV,MAAlB,EAA0BS,QAA1B,EAAoC,UAAUN,GAAV,EAAe;AACjD,eAAIA,GAAJ,EAAS;AACPF,oBAAOE,GAAP;AACD,YAFD,MAEO;AACLxF;AACD;AACF,UAND;AAOD,QARM,CAAP;AASD,MAZD;;AAcA;;;;;;;AAOAT,mBAAc1J,SAAd,CAAwBmQ,cAAxB,GAAyC,SAASA,cAAT,CAAwBX,MAAxB,EAAgCY,QAAhC,EAA0C;AACjF,WAAI5I,OAAO,IAAX;;AAEA,cAAO,IAAI0C,OAAJ,CAAY,UAAUC,OAAV,EAAmBsF,MAAnB,EAA2B;AAC5CjI,cAAK+H,EAAL,CAAQc,MAAR,CAAeb,MAAf,EAAuB,SAASc,sBAAT,CAAgCX,GAAhC,EAAqC;AAC1D,eAAIA,GAAJ,EAAS;AACPF,oBAAOE,GAAP;AACD,YAFD,MAEO;AACLxF;AACD;AACF,UAND;AAOD,QARM,CAAP;AASD,MAZD;;AAeA;;;;AAIA,cAASR,uBAAT,GAAmC,CAAE;;AAErC;;;;;;AAMAA,6BAAwB3J,SAAxB,CAAkCgK,YAAlC,GAAiD,SAASA,YAAT,CAAsBwF,MAAtB,EAA8B;AAC7E,WAAI3I,uBAAJ,EAA6B;AAC3B,gBAAOqD,QAAQC,OAAR,CAAgBpD,aAAawJ,OAAb,CAAqBf,MAArB,CAAhB,CAAP;AACD;;AAED,cAAOtF,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,+BAAV,CAAf,CAAP;AACD,MAND;;AAQA;;;;;;;AAOApB,6BAAwB3J,SAAxB,CAAkC4O,YAAlC,GAAiD,SAASA,YAAT,CAAsBY,MAAtB,EAA8BS,QAA9B,EAAwC;AACvF,WAAIpJ,uBAAJ,EAA6B;AAC3BE,sBAAayJ,OAAb,CAAqBhB,MAArB,EAA6BS,QAA7B;;AAEA,gBAAO/F,QAAQC,OAAR,EAAP;AACD;;AAED,cAAOD,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,+BAAV,CAAf,CAAP;AACD,MARD;;AAUA;;;;;;;AAOApB,6BAAwB3J,SAAxB,CAAkCmQ,cAAlC,GAAmD,SAASA,cAAT,CAAwBX,MAAxB,EAAgC;AACjF,WAAI3I,uBAAJ,EAA6B;AAC3BE,sBAAa0J,UAAb,CAAwBjB,MAAxB;;AAEA,gBAAOtF,QAAQC,OAAR,EAAP;AACD;;AAED,cAAOD,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,+BAAV,CAAf,CAAP;AACD,MARD;;AAUA;;;;;;;AAOA9C,UAAKjI,SAAL,CAAegK,YAAf,GAA8B,UAAU7B,OAAV,EAAmB;AAC/C,WAAIX,OAAO,IAAX;;AAEA;AACA,WAAI,KAAKmB,kBAAL,KAA4B,IAAhC,EAAsC;AACpC,gBAAOuB,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,mCAAV,CAAf,CAAP;AACD;;AAED,cAAO,KAAKpC,kBAAL,CAAwBqB,YAAxB,CAAqC,KAAK9B,QAA1C,EACJkC,IADI,CACC,SAASsG,oBAAT,CAA8BC,QAA9B,EAAwC;AAC5C,aAAI,OAAQA,QAAR,KAAsB,QAA1B,EAAoC;AAClCnJ,gBAAKsE,QAAL,CAAc6E,QAAd,EAAwBxI,WAAW,EAAnC;AACAX,gBAAKG,IAAL,CAAU,MAAV,EAAkBH,IAAlB;AACD,UAHD,MAGO;AACL;AACA,eAAI,OAAQmJ,QAAR,KAAsB,QAAtB,IAAkCA,aAAa,IAA/C,IAAuD,EAAEA,oBAAoB5F,KAAtB,CAA3D,EAAyF;AACvFvD,kBAAKyE,cAAL,CAAoB0E,QAApB,EAA8BxI,WAAW,EAAzC;AACAX,kBAAKG,IAAL,CAAU,MAAV,EAAkBH,IAAlB;AACD,YAHD,MAGO;AACL,iBAAImJ,oBAAoB5F,KAAxB,EACE,MAAM4F,QAAN;;AAEF,mBAAM,IAAIC,SAAJ,CAAc,wEAAd,CAAN;AACD;AACF;AACF,QAjBI,CAAP;AAkBD,MA1BD;;AA4BA;;;;;;AAMA3I,UAAKjI,SAAL,CAAe4O,YAAf,GAA8B,YAAY;AACxC,WAAIpH,OAAO,IAAX;;AAEA;AACA,WAAI,KAAKmB,kBAAL,KAA4B,IAAhC,EAAsC;AACpC,gBAAOuB,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,mCAAV,CAAf,CAAP;AACD;;AAED,WAAI2D,KAAJ;;AAEA;AACA,WAAI,KAAK/F,kBAAL,CAAwBkI,IAAxB,KAAiC,WAAjC,IAAgD,OAAO,KAAKlI,kBAAL,CAAwBmI,cAA/B,KAAkD,UAAtG,EAAkH;AAChH;AACApC,iBAAQ,KAAK/F,kBAAL,CAAwBmI,cAAxB,CAAuC,KAAK5I,QAA5C,EAAsD,IAAtD,CAAR;AACD;AACD;AAJA,YAKK;AACHwG,mBAAQ,KAAK/F,kBAAL,CAAwBiG,YAAxB,CAAqC,KAAK1G,QAA1C,EAAoDV,KAAKoE,SAAL,EAApD,CAAR;AACD;;AAED,cAAO8C,MAAMtE,IAAN,CAAW,YAAY;AAC5B5C,cAAKuJ,kBAAL;AACAvJ,cAAKG,IAAL,CAAU,MAAV;AACD,QAHM,CAAP;AAID,MAxBD;;AA0BA;AACAM,UAAKjI,SAAL,CAAegR,IAAf,GAAsB/I,KAAKjI,SAAL,CAAe4O,YAArC;;AAEA;;;;;;AAMA3G,UAAKjI,SAAL,CAAemQ,cAAf,GAAgC,YAAY;AAC1C;AACA,WAAI,KAAKxH,kBAAL,KAA4B,IAAhC,EAAsC;AACpC,gBAAOuB,QAAQuF,MAAR,CAAe,IAAI1E,KAAJ,CAAU,mCAAV,CAAf,CAAP;AACD;;AAED,cAAO,KAAKpC,kBAAL,CAAwBwH,cAAxB,CAAuC,KAAKjI,QAA5C,CAAP;AACD,MAPD;;AASA;;;;;AAKAD,UAAKjI,SAAL,CAAe2O,aAAf,GAA+B,YAAY;AACzC,YAAK,IAAI5N,MAAM,CAAf,EAAkBA,MAAM,KAAKqH,WAAL,CAAiBlH,MAAzC,EAAiDH,KAAjD,EAAwD;AACtD,aAAI,KAAKqH,WAAL,CAAiBrH,GAAjB,EAAsBkQ,KAA1B,EAAiC;AAC/B,kBAAO,IAAP;AACD;AACF;;AAED,cAAO,KAAP;AACD,MARD;;AAUA;;;;;AAKAhJ,UAAKjI,SAAL,CAAe+Q,kBAAf,GAAoC,YAAY;AAC9C,YAAK,IAAIhQ,MAAM,CAAf,EAAkBA,MAAM,KAAKqH,WAAL,CAAiBlH,MAAzC,EAAiDH,KAAjD,EAAwD;AACtD,cAAKqH,WAAL,CAAiBrH,GAAjB,EAAsBkQ,KAAtB,GAA8B,KAA9B;AACD;AACF,MAJD;;AAMA;;;;AAIAhJ,UAAKjI,SAAL,CAAeqK,cAAf,GAAgC,YAAY;AAC1C,WAAI,KAAK5B,cAAT,EAAyB;AACvB;AACD;;AAED,WAAIjB,OAAO,IAAX;AACA,WAAI0J,UAAU,IAAd;;AAEA,YAAK3I,QAAL,GAAgB,IAAhB;AACA,YAAKE,cAAL,GAAsB,YAAY;AAChCyI,mBAAU,KAAV;AACA1J,cAAKiB,cAAL,GAAsB5G,SAAtB;AACD,QAHD;;AAKA,QAAC,SAAS+M,YAAT,GAAwB;AACvBhH,oBAAW,YAAY;AACrB,eAAIsJ,OAAJ,EAAa;AACX1J,kBAAKoH,YAAL,GAAoBxE,IAApB,CAAyBwE,YAAzB,EAAuCA,YAAvC;AACD;AACF,UAJD,EAIGpH,KAAKgB,gBAJR;AAKD,QAND;AAOD,MArBD;;AAuBA;;;;AAIAP,UAAKjI,SAAL,CAAe6J,eAAf,GAAiC,YAAY;AAC3C,YAAKtB,QAAL,GAAgB,KAAhB;;AAEA,WAAI,KAAKE,cAAT,EAAyB;AACvB,cAAKA,cAAL;AACD;AACF,MAND;;AASA;;;;;;;;;;;;;;;;;AAiBA,cAAS0I,SAAT,CAAmB3G,UAAnB,EAA+BrC,OAA/B,EAAwC;AACtCA,iBAAUA,WAAW,EAArB;;AAEAA,eAAQiJ,QAAR,GAAmBjJ,QAAQiJ,QAAR,IAAoB,IAAvC;AACAjJ,eAAQkJ,SAAR,GAAoBlJ,QAAQkJ,SAAR,IAAqB,IAAzC;AACAlJ,eAAQmJ,SAAR,GAAoBnJ,QAAQmJ,SAAR,IAAqB,KAAzC;;AAEA;AACA,YAAK9G,UAAL,GAAkBA,UAAlB;;AAEA;AACA,YAAK6D,eAAL,GAAwB,CAAClG,QAAQiJ,QAAT,IAAqB,CAACjJ,QAAQkJ,SAAtD;AACA,YAAKjD,YAAL,GAAoB,EAApB;AACA,YAAKE,iBAAL,GAAyB,KAAzB;;AAEA;AACA,WAAI,OAAQnG,QAAQiJ,QAAhB,KAA8B,WAA9B,IAA6CjJ,QAAQiJ,QAAR,KAAqB,IAAtE,EAA4E;AAC1E,gBAAO,KAAKG,IAAL,CAAUpJ,QAAQiJ,QAAlB,EAA4BjJ,QAAQmJ,SAApC,CAAP;AACD;AACD,WAAI,OAAQnJ,QAAQkJ,SAAhB,KAA+B,WAA/B,IAA8ClJ,QAAQkJ,SAAR,KAAsB,IAAxE,EAA8E;AAC5E,gBAAO,KAAKG,KAAL,CAAWrJ,QAAQkJ,SAAnB,CAAP;AACD;;AAED;AACA,cAAO,IAAP;AACD;;AAED;;;;;AAKAF,eAAUnR,SAAV,CAAoByR,KAApB,GAA4B,YAAY;AACtC,WAAI,KAAKrD,YAAL,CAAkBlN,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,cAAKkN,YAAL,GAAoB,EAApB;AACD;AACD,YAAKE,iBAAL,GAAyB,KAAzB;AACA,cAAO,IAAP;AACD,MAND;;AAQA;;;;AAIA6C,eAAUnR,SAAV,CAAoB0R,MAApB,GAA6B,YAAY;AACvC,WAAIC,OAAO,KAAKA,IAAL,EAAX;AACAA,YAAKnH,UAAL,GAAkB,IAAlB;AACA,cAAOmH,IAAP;AACD,MAJD;;AAMA;;;;;;;;AAQAR,eAAUnR,SAAV,CAAoB4R,KAApB,GAA4B,UAAUC,GAAV,EAAe;AACzC;AACA,WAAI,KAAKxD,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAIC,SAAS,IAAIZ,SAAJ,CAAc,KAAK3G,UAAnB,CAAb;AACAuH,cAAO3D,YAAP,GAAsB,KAAKA,YAAL,CAAkB4D,KAAlB,CAAwB,CAAxB,EAA2BH,GAA3B,CAAtB;AACAE,cAAOzD,iBAAP,GAA2B,IAA3B;AACA,cAAOyD,MAAP;AACD,MAVD;;AAYA;;;;;;;AAOAZ,eAAUnR,SAAV,CAAoBiS,MAApB,GAA6B,UAAUC,GAAV,EAAe;AAC1C;AACA,WAAI,KAAK7D,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAIC,SAAS,IAAIZ,SAAJ,CAAc,KAAK3G,UAAnB,CAAb;AACAuH,cAAO3D,YAAP,GAAsB,KAAKA,YAAL,CAAkB4D,KAAlB,CAAwBE,GAAxB,CAAtB;AACAH,cAAOzD,iBAAP,GAA2B,IAA3B;AACA,cAAOyD,MAAP;AACD,MAVD;;AAYA;;;;;;AAMAZ,eAAUnR,SAAV,CAAoB2R,IAApB,GAA2B,YAAY;AACrC,WAAI/K,SAAS,IAAIuK,SAAJ,CAAc,KAAK3G,UAAnB,CAAb;;AAEA,WAAI,KAAK4D,YAAL,CAAkBlN,MAAlB,GAA2B,CAA/B,EAAkC;AAChC0F,gBAAOwH,YAAP,GAAsB,KAAKA,YAAL,CAAkB4D,KAAlB,EAAtB;AACD;AACDpL,cAAO0H,iBAAP,GAA2B,KAAKA,iBAAhC;;AAEA,cAAO1H,MAAP;AACD,MATD;;AAWA;;;;AAIAuK,eAAUnR,SAAV,CAAoBmS,MAApB,GAA6BhB,UAAUnR,SAAV,CAAoB2R,IAAjD;;AAEA;;;;;;;;AAQAR,eAAUnR,SAAV,CAAoBc,SAApB,GAAgC,UAAUA,SAAV,EAAqBsR,UAArB,EAAiC;AAC/D,WAAIrR,GAAJ;AAAA,WACEsR,IADF;AAAA,WAEEC,KAAK,IAFP;;AAIA;AACA,WAAI,OAAOxR,SAAP,KAAqB,QAAzB,EAAmC;AACjC,aAAI,KAAK0J,UAAL,CAAgB6C,UAAhB,CAA2BvN,cAA3B,CAA0CgB,SAA1C,CAAJ,EAA0D;AACxDA,uBAAY,KAAK0J,UAAL,CAAgB6C,UAAhB,CAA2BvM,SAA3B,CAAZ;AACD;AACF;;AAED;AACA,WAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiC,CAACsC,MAAMC,OAAN,CAAcvC,SAAd,CAAtC,EAAgE;AAC9D,eAAM,IAAIiK,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,WAAI,OAAOqH,UAAP,KAAsB,WAA1B,EAAuC;AACrCtR,qBAAYb,MAAMY,sBAAN,CAA6BC,SAA7B,EAAwCsR,UAAxC,CAAZ;AACD;;AAED,YAAKrR,MAAM,CAAX,EAAcA,MAAMD,UAAUI,MAA9B,EAAsCH,KAAtC,EAA6C;AAC3CsR,gBAAOvR,UAAUC,GAAV,CAAP;;AAEA,iBAAQsR,KAAK9M,IAAb;AACA,gBAAK,MAAL;AACE+M,gBAAGf,IAAH,CAAQc,KAAKxP,KAAb;AACA;AACF,gBAAK,OAAL;AACEyP,gBAAGd,KAAH,CAASa,KAAKxP,KAAd;AACA;AACF,gBAAK,YAAL;AACEyP,gBAAGC,UAAH,CAAcF,KAAKG,QAAnB,EAA6BH,KAAKpQ,IAAlC;AACA;AACF,gBAAK,cAAL;AACEqQ,gBAAGG,YAAH,CAAgBJ,KAAKxP,KAArB;AACA;AACF,gBAAK,MAAL;AACEyP,gBAAGI,IAAH,CAAQL,KAAKxP,KAAb;AACA;AACF,gBAAK,OAAL;AACEyP,kBAAKA,GAAGV,KAAH,CAASS,KAAKxP,KAAd,CAAL;AACA,mBAlBF,CAkBS;AACT,gBAAK,QAAL;AACEyP,kBAAKA,GAAGL,MAAH,CAAUI,KAAKxP,KAAf,CAAL;AACA,mBArBF,CAqBS;AACT,gBAAK,KAAL;AACEyP,kBAAKA,GAAG7L,GAAH,CAAO4L,KAAKxP,KAAZ,CAAL;AACA;AACF,gBAAK,QAAL;AACEyP,kBAAKA,GAAGK,MAAH,CAAUN,KAAKO,QAAf,EAAyBP,KAAKQ,WAA9B,EAA2CR,KAAKS,YAAhD,EAA8DT,KAAKU,MAAnE,CAAL;AACA;AACA;AACF,gBAAK,WAAL;AACET,kBAAKA,GAAGU,SAAH,CAAaX,KAAKY,WAAlB,EAA+BZ,KAAKa,cAApC,CAAL;AACA;AACA;AACF,gBAAK,QAAL;AACEZ,gBAAGa,MAAH,CAAUd,KAAKxP,KAAf;AACA;AACF,gBAAK,QAAL;AACEyP,gBAAGc,MAAH;AACA;AACF;AACE;AAxCF;AA0CD;;AAED,cAAOd,EAAP;AACD,MArED;;AAuEA;;;;;;;;;;;;;AAaAnB,eAAUnR,SAAV,CAAoB0S,IAApB,GAA2B,UAAUW,UAAV,EAAsB;AAC/C;AACA,WAAI,KAAKhF,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAIwB,kBACD,UAAUC,YAAV,EAAwBtN,IAAxB,EAA8B;AAC7B,gBAAO,UAAUzC,CAAV,EAAaC,CAAb,EAAgB;AACrB,kBAAO8P,aAAatN,KAAKzC,CAAL,CAAb,EAAsByC,KAAKxC,CAAL,CAAtB,CAAP;AACD,UAFD;AAGD,QAJD,CAIG4P,UAJH,EAIe,KAAK7I,UAAL,CAAgBvE,IAJ/B,CADF;;AAOA,YAAKmI,YAAL,CAAkBsE,IAAlB,CAAuBY,eAAvB;;AAEA,cAAO,IAAP;AACD,MAhBD;;AAkBA;;;;;;;;;AASAnC,eAAUnR,SAAV,CAAoBuS,UAApB,GAAiC,UAAUiB,QAAV,EAAoBC,MAApB,EAA4B;AAC3D;AACA,WAAI,KAAKpF,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAI,OAAQ2B,MAAR,KAAoB,WAAxB,EAAqC;AACnCA,kBAAS,KAAT;AACD;;AAED,WAAIH,kBACD,UAAUjT,IAAV,EAAgB4B,IAAhB,EAAsBgE,IAAtB,EAA4B;AAC3B,gBAAO,UAAUzC,CAAV,EAAaC,CAAb,EAAgB;AACrB,kBAAOzB,WAAWiE,KAAKzC,CAAL,EAAQnD,IAAR,CAAX,EAA0B4F,KAAKxC,CAAL,EAAQpD,IAAR,CAA1B,EAAyC4B,IAAzC,CAAP;AACD,UAFD;AAGD,QAJD,CAIGuR,QAJH,EAIaC,MAJb,EAIqB,KAAKjJ,UAAL,CAAgBvE,IAJrC,CADF;;AAOA,YAAKmI,YAAL,CAAkBsE,IAAlB,CAAuBY,eAAvB;;AAEA,cAAO,IAAP;AACD,MApBD;;AAsBA;;;;;;;;;;;;AAYAnC,eAAUnR,SAAV,CAAoByS,YAApB,GAAmC,UAAUtQ,UAAV,EAAsB;AACvD,WAAIA,WAAWjB,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eAAM,IAAI6J,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,WAAI1K,IAAJ;AACA,WAAI8B,WAAWjB,MAAX,KAAsB,CAA1B,EAA6B;AAC3Bb,gBAAO8B,WAAW,CAAX,CAAP;AACA,aAAIiB,MAAMC,OAAN,CAAchD,IAAd,CAAJ,EAAyB;AACvB,kBAAO,KAAKkS,UAAL,CAAgBlS,KAAK,CAAL,CAAhB,EAAyBA,KAAK,CAAL,CAAzB,CAAP;AACD;AACD,gBAAO,KAAKkS,UAAL,CAAgBlS,IAAhB,EAAsB,KAAtB,CAAP;AACD;;AAED;AACA,YAAK,IAAImC,IAAI,CAAR,EAAWC,MAAMN,WAAWjB,MAAjC,EAAyCsB,IAAIC,GAA7C,EAAkDD,KAAK,CAAvD,EAA0D;AACxDnC,gBAAO8B,WAAWK,CAAX,CAAP;AACA,aAAI,CAACY,MAAMC,OAAN,CAAchD,IAAd,CAAL,EAA0B;AACxB8B,sBAAWK,CAAX,IAAgB,CAACnC,IAAD,EAAO,KAAP,CAAhB;AACD;AACF;;AAED;AACA,WAAI,KAAKgO,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAIwB,kBACD,UAAUI,KAAV,EAAiBzN,IAAjB,EAAuB;AACtB,gBAAO,UAAUzC,CAAV,EAAaC,CAAb,EAAgB;AACrB,kBAAOvB,aAAawR,KAAb,EAAoBzN,KAAKzC,CAAL,CAApB,EAA6ByC,KAAKxC,CAAL,CAA7B,CAAP;AACD,UAFD;AAGD,QAJD,CAIGtB,UAJH,EAIe,KAAKqI,UAAL,CAAgBvE,IAJ/B,CADF;;AAOA,YAAKmI,YAAL,CAAkBsE,IAAlB,CAAuBY,eAAvB;;AAEA,cAAO,IAAP;AACD,MArCD;;AAuCA;;;;;;;;;AASAnC,eAAUnR,SAAV,CAAoB2T,MAApB,GAA6B,UAAUC,eAAV,EAA2B;AACtD,WAAIC,KAAK,IAAT;AAAA,WACEC,MAAM,CADR;AAAA,WAEEC,QAAQ,CAFV;AAAA,WAGEC,SAAS,EAHX;AAAA,WAIEC,SAAS,EAJX;AAAA,WAKElT,MAAM,CALR;AAAA,WAMEmT,YAAY,KAAK7I,KAAL,EANd;;AAQA;AACA;AACA,YAAK,IAAI8I,KAAK,CAAT,EAAYC,OAAOR,gBAAgB1S,MAAxC,EAAgDiT,KAAKC,IAArD,EAA2DD,IAA3D,EAAiE;AAC/D;AACAN,cAAK,KAAK1B,MAAL,GAAcZ,IAAd,CAAmBqC,gBAAgBO,EAAhB,CAAnB,EAAwC/F,YAA7C;AACA2F,iBAAQF,GAAG3S,MAAX;AACA;AACA,aAAI6S,UAAUG,SAAd,EAAyB;AACvB,kBAAO,IAAP;AACD;;AAED;AACA,cAAKJ,MAAM,CAAX,EAAcA,MAAMC,KAApB,EAA2BD,KAA3B,EAAkC;AAChC/S,iBAAM8S,GAAGC,GAAH,CAAN;AACA,eAAIG,OAAOlT,GAAP,MAAgBc,SAApB,EAA+B;AAC7BoS,oBAAOlT,GAAP,IAAc,IAAd;AACAiT,oBAAO1S,IAAP,CAAYP,GAAZ;AACD;AACF;AACF;;AAED,YAAKqN,YAAL,GAAoB4F,MAApB;AACA,YAAK1F,iBAAL,GAAyB,IAAzB;;AAEA,cAAO,IAAP;AACD,MAlCD;AAmCA6C,eAAUnR,SAAV,CAAoB8F,GAApB,GAA0BqL,UAAUnR,SAAV,CAAoB2T,MAA9C;;AAEA;;;;;;;;;AASAxC,eAAUnR,SAAV,CAAoBqU,OAApB,GAA8B,UAAUT,eAAV,EAA2B;AACvD;AACA;AACA,YAAK,IAAIpR,IAAI,CAAR,EAAWC,MAAMmR,gBAAgB1S,MAAtC,EAA8CsB,IAAIC,GAAlD,EAAuDD,GAAvD,EAA4D;AAC1D,aAAI,KAAK6I,KAAL,OAAiB,CAArB,EAAwB;AACtB,kBAAO,IAAP;AACD;AACD,cAAKkG,IAAL,CAAUqC,gBAAgBpR,CAAhB,CAAV;AACD;AACD,cAAO,IAAP;AACD,MAVD;AAWA2O,eAAUnR,SAAV,CAAoB6F,IAApB,GAA2BsL,UAAUnR,SAAV,CAAoBqU,OAA/C;;AAEA;;;;;;;;AAQAlD,eAAUnR,SAAV,CAAoBuR,IAApB,GAA2B,UAAU+C,KAAV,EAAiBhD,SAAjB,EAA4B;AACrD,WAAI,KAAK9G,UAAL,CAAgBvE,IAAhB,CAAqB/E,MAArB,KAAgC,CAApC,EAAuC;AACrC,aAAI,KAAKmN,eAAT,EAA0B;AACxB,gBAAKD,YAAL,GAAoB,EAApB;AACA,gBAAKE,iBAAL,GAAyB,IAAzB;AACA,kBAAO,IAAP;AACD;AACD,gBAAO,EAAP;AACD;;AAED,WAAIiG,cAAcD,SAAS,QAA3B;AAAA,WACEzQ,CADF;AAAA,WAEE2O,QAFF;AAAA,WAGEgC,aAHF;AAAA,WAIEC,QAJF;AAAA,WAKE5R,KALF;AAAA,WAME8I,GANF;AAAA,WAOE+I,gBAAgB,KAPlB;AAAA,WAQE9N,SAAS,EARX;AAAA,WASEtD,QAAQ,IATV;;AAWA;AACAgO,mBAAYA,aAAa,KAAzB;;AAEA,WAAI,OAAOiD,WAAP,KAAuB,QAA3B,EAAqC;AACnC,cAAK1Q,CAAL,IAAU0Q,WAAV,EAAuB;AACrB,eAAIzU,eAAemD,IAAf,CAAoBsR,WAApB,EAAiC1Q,CAAjC,CAAJ,EAAyC;AACvC2O,wBAAW3O,CAAX;AACA2Q,6BAAgBD,YAAY1Q,CAAZ,CAAhB;AACA;AACD;AACF;AACF;;AAED;AACA,WAAI,CAAC2O,QAAD,IAAa+B,gBAAgB,QAAjC,EAA2C;AACzC;;AAEA,aAAIjD,SAAJ,EAAe;AACb,kBAAQ,KAAK9G,UAAL,CAAgBvE,IAAhB,CAAqB/E,MAArB,GAA8B,CAA/B,GAAkC,KAAKsJ,UAAL,CAAgBvE,IAAhB,CAAqB,CAArB,CAAlC,GAA2D,IAAlE;AACD;;AAED,gBAAQ,KAAKoI,eAAN,GAA0B,IAA1B,GAAmC,KAAK7D,UAAL,CAAgBvE,IAAhB,CAAqB+L,KAArB,EAA1C;AACD;;AAED;AACA,WAAIQ,aAAa,MAAb,IAAuBA,aAAa,KAAxC,EAA+C;AAC7C,aAAI,KAAKnE,eAAT,EAA0B;AACxB,gBAAKmE,QAAL,EAAegC,aAAf;;AAEA;AACA,eAAIlD,aAAa,KAAKlD,YAAL,CAAkBlN,MAAlB,GAA2B,CAA5C,EAA+C;AAC7C,kBAAKkN,YAAL,GAAoB,KAAKA,YAAL,CAAkB4D,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAApB;AACD;;AAED,kBAAO,IAAP;AACD,UATD,MASO;AACL;AACApL,oBAAS,KAAK4D,UAAL,CAAgBmK,KAAhB,GAAwBnC,QAAxB,EAAkCgC,aAAlC,EAAiDvO,IAAjD,EAAT;;AAEA;AACA;AACA;AACA,eAAIqL,SAAJ,EAAe;AACb,oBAAQ1K,OAAO1F,MAAP,KAAkB,CAAnB,GAAyB,EAAzB,GAAgC0F,OAAO,CAAP,CAAvC;AACD;;AAED;AACA,kBAAOA,MAAP;AACD;AACF;;AAED;AACA,WAAI4N,kBAAkB,IAAlB,IAA2B,OAAOA,aAAP,KAAyB,QAAzB,IAAqCA,yBAAyBhP,IAA7F,EAAoG;AAClGiP,oBAAW,KAAX;AACA5R,iBAAQ2R,aAAR;AACD,QAHD,MAGO,IAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;AAC5C,cAAK7I,GAAL,IAAY6I,aAAZ,EAA2B;AACzB,eAAI1U,eAAemD,IAAf,CAAoBuR,aAApB,EAAmC7I,GAAnC,CAAJ,EAA6C;AAC3C8I,wBAAW9I,GAAX;AACA9I,qBAAQ2R,cAAc7I,GAAd,CAAR;AACA;AACD;AACF;AACF,QARM,MAQA;AACL,eAAM,IAAIZ,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED;AACA,WAAI0J,aAAa,QAAjB,EAA2B;AACzB,aAAIrR,MAAMC,OAAN,CAAcR,KAAd,CAAJ,EAA0B;AACxBA,mBAAQ,IAAI+R,MAAJ,CAAW/R,MAAM,CAAN,CAAX,EAAqBA,MAAM,CAAN,CAArB,CAAR;AACD,UAFD,MAEO,IAAI,EAAEA,iBAAiB+R,MAAnB,CAAJ,EAAgC;AACrC/R,mBAAQ,IAAI+R,MAAJ,CAAW/R,KAAX,CAAR;AACD;AACF;;AAED;AACA,WAAIgS,mBAAoBrC,SAAS7R,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAnD;;AAEA;AACA;AACA;AACA,WAAImU,eAAe,CAACD,gBAAD,KAChB,CAAC,KAAKxG,eAAN,IAAyB,CAAC,KAAKC,iBADf,CAAnB;;AAGA,WAAIwG,gBAAgB,KAAKtK,UAAL,CAAgB4C,aAAhB,CAA8BoF,QAA9B,CAAhB,IACFzM,eAAepF,OAAf,CAAuB8T,QAAvB,MAAqC,CAAC,CADxC,EAC2C;AACzC;AACA;AACA;AACA;AACA,aAAI,KAAKjK,UAAL,CAAgBoC,qBAAhB,KAA0C,IAA9C,EAAoD;AAClD,gBAAKpC,UAAL,CAAgBuK,WAAhB,CAA4BvC,QAA5B;AACD;;AAEDkC,yBAAgB,IAAhB;AACApR,iBAAQ,KAAKkH,UAAL,CAAgB4C,aAAhB,CAA8BoF,QAA9B,CAAR;AACD;;AAED;AACA,WAAI5P,MAAMkB,QAAQ2Q,QAAR,CAAV;;AAEA;AACA,WAAIO,IAAI,KAAKxK,UAAL,CAAgBvE,IAAxB;AACA;AACA,WAAIzD,IAAI,CAAR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAI,CAAC,KAAK6L,eAAV,EAA2B;AACzB,aAAI,CAACqG,aAAL,EAAoB;AAClBlS,eAAIwS,EAAE9T,MAAN;;AAEA,eAAIoQ,SAAJ,EAAe;AACb,iBAAIuD,gBAAJ,EAAsB;AACpBrC,0BAAWA,SAASyC,KAAT,CAAe,GAAf,CAAX;AACA,sBAAOzS,GAAP,EAAY;AACV,qBAAIE,WAAWsS,EAAExS,CAAF,CAAX,EAAiBgQ,QAAjB,EAA2B5P,GAA3B,EAAgCC,KAAhC,CAAJ,EAA4C;AAC1C,0BAAQmS,EAAExS,CAAF,CAAR;AACD;AACF;AACF,cAPD,MAOO;AACL,sBAAOA,GAAP,EAAY;AACV,qBAAII,IAAIoS,EAAExS,CAAF,EAAKgQ,QAAL,CAAJ,EAAoB3P,KAApB,CAAJ,EAAgC;AAC9B,0BAAQmS,EAAExS,CAAF,CAAR;AACD;AACF;AACF;;AAED,oBAAO,EAAP;AACD;;AAED;AACA;AACA,eAAIqS,gBAAJ,EAAsB;AACpBrC,wBAAWA,SAASyC,KAAT,CAAe,GAAf,CAAX;AACA,oBAAOzS,GAAP,EAAY;AACV,mBAAIE,WAAWsS,EAAExS,CAAF,CAAX,EAAiBgQ,QAAjB,EAA2B5P,GAA3B,EAAgCC,KAAhC,CAAJ,EAA4C;AAC1C+D,wBAAOtF,IAAP,CAAY0T,EAAExS,CAAF,CAAZ;AACD;AACF;AACF,YAPD,MAOO;AACL,oBAAOA,GAAP,EAAY;AACV,mBAAII,IAAIoS,EAAExS,CAAF,EAAKgQ,QAAL,CAAJ,EAAoB3P,KAApB,CAAJ,EAAgC;AAC9B+D,wBAAOtF,IAAP,CAAY0T,EAAExS,CAAF,CAAZ;AACD;AACF;AACF;AACF,UAtCD,MAsCO;AACL;AACA,eAAI0S,MAAM,KAAK1K,UAAL,CAAgB2K,cAAhB,CAA+BV,QAA/B,EAAyCjC,QAAzC,EAAmD3P,KAAnD,CAAV;;AAEA;AACA;AACA,eAAIyO,SAAJ,EAAe;AACb,iBAAI4D,IAAI,CAAJ,MAAW,CAAC,CAAhB,EAAmB;AACjB,sBAAOF,EAAE1R,MAAM8R,MAAN,CAAaF,IAAI,CAAJ,CAAb,CAAF,CAAP;AACD;AACD,oBAAO,EAAP;AACD;;AAED,gBAAK1S,IAAI0S,IAAI,CAAJ,CAAT,EAAiB1S,KAAK0S,IAAI,CAAJ,CAAtB,EAA8B1S,GAA9B,EAAmC;AACjCoE,oBAAOtF,IAAP,CAAY0T,EAAE1R,MAAM8R,MAAN,CAAa5S,CAAb,CAAF,CAAZ;AACD;AACF;;AAED;AACA,gBAAOoE,MAAP;AACD;;AAGD;;AAEA,WAAIyO,MAAJ;AAAA,WAAYC,SAAS,CAArB;;AAEA;AACA,WAAI,KAAKhH,iBAAT,EAA4B;AAC1B+G,kBAAS,KAAKjH,YAAd;AACA5L,aAAI6S,OAAOnU,MAAX;;AAEA;AACA,aAAI2T,gBAAJ,EAAsB;AACpBrC,sBAAWA,SAASyC,KAAT,CAAe,GAAf,CAAX;AACA,kBAAOzS,GAAP,EAAY;AACV8S,sBAASD,OAAO7S,CAAP,CAAT;AACA,iBAAIE,WAAWsS,EAAEM,MAAF,CAAX,EAAsB9C,QAAtB,EAAgC5P,GAAhC,EAAqCC,KAArC,CAAJ,EAAiD;AAC/C+D,sBAAOtF,IAAP,CAAYgU,MAAZ;AACD;AACF;AACF,UARD,MAQO;AACL,kBAAO9S,GAAP,EAAY;AACV8S,sBAASD,OAAO7S,CAAP,CAAT;AACA,iBAAII,IAAIoS,EAAEM,MAAF,EAAU9C,QAAV,CAAJ,EAAyB3P,KAAzB,CAAJ,EAAqC;AACnC+D,sBAAOtF,IAAP,CAAYgU,MAAZ;AACD;AACF;AACF;AACF;AACD;AAtBA,YAuBK;AACH;AACA,eAAI,CAACZ,aAAL,EAAoB;AAClBlS,iBAAIwS,EAAE9T,MAAN;;AAEA,iBAAI2T,gBAAJ,EAAsB;AACpBrC,0BAAWA,SAASyC,KAAT,CAAe,GAAf,CAAX;AACA,sBAAOzS,GAAP,EAAY;AACV,qBAAIE,WAAWsS,EAAExS,CAAF,CAAX,EAAiBgQ,QAAjB,EAA2B5P,GAA3B,EAAgCC,KAAhC,CAAJ,EAA4C;AAC1C+D,0BAAOtF,IAAP,CAAYkB,CAAZ;AACD;AACF;AACF,cAPD,MAOO;AACL,sBAAOA,GAAP,EAAY;AACV,qBAAII,IAAIoS,EAAExS,CAAF,EAAKgQ,QAAL,CAAJ,EAAoB3P,KAApB,CAAJ,EAAgC;AAC9B+D,0BAAOtF,IAAP,CAAYkB,CAAZ;AACD;AACF;AACF;AACF,YAjBD,MAiBO;AACL;AACA,iBAAI+S,OAAO,KAAK/K,UAAL,CAAgB2K,cAAhB,CAA+BV,QAA/B,EAAyCjC,QAAzC,EAAmD3P,KAAnD,CAAX;;AAEA,kBAAKL,IAAI+S,KAAK,CAAL,CAAT,EAAkB/S,KAAK+S,KAAK,CAAL,CAAvB,EAAgC/S,GAAhC,EAAqC;AACnCoE,sBAAOtF,IAAP,CAAYgC,MAAM8R,MAAN,CAAa5S,CAAb,CAAZ;AACD;AACF;;AAED,gBAAK8L,iBAAL,GAAyB,IAAzB,CA5BG,CA4B4B;AAChC;;AAED,YAAKF,YAAL,GAAoBxH,MAApB;AACA,cAAO,IAAP;AACD,MAnQD;;AAsQA;;;;;;;AAOAuK,eAAUnR,SAAV,CAAoBwR,KAApB,GAA4B,UAAU5O,GAAV,EAAe;AACzC,WAAI4S,YAAJ;AAAA,WACE5O,SAAS,EADX;;AAGA,WAAI,eAAe,OAAOhE,GAA1B,EAA+B;AAC7B4S,wBAAe5S,GAAf;AACD,QAFD,MAEO;AACL,eAAM,IAAIgO,SAAJ,CAAc,6CAAd,CAAN;AACD;AACD,WAAI;AACF;AACA,aAAI,CAAC,KAAKvC,eAAV,EAA2B;AACzB,eAAI7L,IAAI,KAAKgI,UAAL,CAAgBvE,IAAhB,CAAqB/E,MAA7B;;AAEA,kBAAOsB,GAAP,EAAY;AACV,iBAAIgT,aAAa,KAAKhL,UAAL,CAAgBvE,IAAhB,CAAqBzD,CAArB,CAAb,MAA0C,IAA9C,EAAoD;AAClDoE,sBAAOtF,IAAP,CAAY,KAAKkJ,UAAL,CAAgBvE,IAAhB,CAAqBzD,CAArB,CAAZ;AACD;AACF;;AAED;AACA,kBAAOoE,MAAP;AACD;AACD;AAZA,cAaK;AACH;AACA,iBAAI,KAAK0H,iBAAT,EAA4B;AAC1B,mBAAIjC,IAAI,KAAK+B,YAAL,CAAkBlN,MAA1B;;AAEA,sBAAOmL,GAAP,EAAY;AACV,qBAAImJ,aAAa,KAAKhL,UAAL,CAAgBvE,IAAhB,CAAqB,KAAKmI,YAAL,CAAkB/B,CAAlB,CAArB,CAAb,MAA6D,IAAjE,EAAuE;AACrEzF,0BAAOtF,IAAP,CAAY,KAAK8M,YAAL,CAAkB/B,CAAlB,CAAZ;AACD;AACF;;AAED,oBAAK+B,YAAL,GAAoBxH,MAApB;;AAEA,sBAAO,IAAP;AACD;AACD;AAbA,kBAcK;AACH,qBAAI6O,IAAI,KAAKjL,UAAL,CAAgBvE,IAAhB,CAAqB/E,MAA7B;;AAEA,wBAAOuU,GAAP,EAAY;AACV,uBAAID,aAAa,KAAKhL,UAAL,CAAgBvE,IAAhB,CAAqBwP,CAArB,CAAb,MAA0C,IAA9C,EAAoD;AAClD7O,4BAAOtF,IAAP,CAAYmU,CAAZ;AACD;AACF;;AAED,sBAAKrH,YAAL,GAAoBxH,MAApB;AACA,sBAAK0H,iBAAL,GAAyB,IAAzB;;AAEA,wBAAO,IAAP;AACD;AACF;AACF,QA9CD,CA8CE,OAAOqB,GAAP,EAAY;AACZ,eAAMA,GAAN;AACD;AACF,MA1DD;;AA4DA;;;;;;AAMAwB,eAAUnR,SAAV,CAAoBqL,KAApB,GAA4B,YAAY;AACtC,WAAI,KAAKgD,eAAL,IAAwB,KAAKC,iBAAjC,EAAoD;AAClD,gBAAO,KAAKF,YAAL,CAAkBlN,MAAzB;AACD;AACD,cAAO,KAAKsJ,UAAL,CAAgBa,KAAhB,EAAP;AACD,MALD;;AAOA;;;;;;;;;;;;AAYA8F,eAAUnR,SAAV,CAAoBiG,IAApB,GAA2B,UAAUkC,OAAV,EAAmB;AAC5C,WAAIvB,SAAS,EAAb;AAAA,WACEX,OAAO,KAAKuE,UAAL,CAAgBvE,IADzB;AAAA,WAEExD,GAFF;AAAA,WAGED,CAHF;AAAA,WAIE0D,MAJF;;AAMAiC,iBAAUA,WAAW,EAArB;;AAEA;AACA,WAAI,KAAKkG,eAAL,IAAwB,CAAC,KAAKC,iBAAlC,EAAqD;AACnD,aAAI,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAAjC,EAAoC;AAClC;AACA,eAAI,KAAKsJ,UAAL,CAAgBuC,YAAhB,IAAgC5E,QAAQuN,WAA5C,EAAyD;AACvDjT,mBAAMwD,KAAK/E,MAAX;AACAgF,sBAASiC,QAAQwN,gBAAR,IAA4B,KAAKnL,UAAL,CAAgBrE,WAArD;;AAEA,kBAAK3D,IAAI,CAAT,EAAYA,IAAIC,GAAhB,EAAqBD,GAArB,EAA0B;AACxBoE,sBAAOtF,IAAP,CAAY0E,MAAMC,KAAKzD,CAAL,CAAN,EAAe0D,MAAf,CAAZ;AACD;AACD,oBAAOU,MAAP;AACD;AACD;AATA,gBAUK;AACH,sBAAOX,KAAK+L,KAAL,EAAP;AACD;AACF,UAfD,MAeO;AACL;AACA,gBAAK1D,iBAAL,GAAyB,IAAzB;AACD;AACF;;AAED,WAAIuF,KAAK,KAAKzF,YAAd;AACA3L,aAAMoR,GAAG3S,MAAT;;AAEA,WAAI,KAAKsJ,UAAL,CAAgBuC,YAAhB,IAAgC5E,QAAQuN,WAA5C,EAAyD;AACvDxP,kBAASiC,QAAQwN,gBAAR,IAA4B,KAAKnL,UAAL,CAAgBrE,WAArD;AACA,cAAK3D,IAAI,CAAT,EAAYA,IAAIC,GAAhB,EAAqBD,GAArB,EAA0B;AACxBoE,kBAAOtF,IAAP,CAAY0E,MAAMC,KAAK4N,GAAGrR,CAAH,CAAL,CAAN,EAAmB0D,MAAnB,CAAZ;AACD;AACF,QALD,MAKO;AACL,cAAK1D,IAAI,CAAT,EAAYA,IAAIC,GAAhB,EAAqBD,GAArB,EAA0B;AACxBoE,kBAAOtF,IAAP,CAAY2E,KAAK4N,GAAGrR,CAAH,CAAL,CAAZ;AACD;AACF;AACD,cAAOoE,MAAP;AACD,MA9CD;;AAgDA;;;;;;;AAOAuK,eAAUnR,SAAV,CAAoBmT,MAApB,GAA6B,UAAUyC,cAAV,EAA0B;;AAErD,WAAI,OAAQA,cAAR,KAA4B,UAAhC,EAA4C;AAC1C,eAAM,IAAIhF,SAAJ,CAAc,4BAAd,CAAN;AACD;;AAED;AACA,WAAI,KAAKvC,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,WAAIrP,MAAM,KAAK2L,YAAL,CAAkBlN,MAA5B;AAAA,WACE2U,MAAM,KAAKrL,UAAL,CAAgBvE,IADxB;;AAGA,YAAK,IAAIlF,MAAM,CAAf,EAAkBA,MAAM0B,GAAxB,EAA6B1B,KAA7B,EAAoC;AAClC;AACA6U,wBAAeC,IAAI,KAAKzH,YAAL,CAAkBrN,GAAlB,CAAJ,CAAf;;AAEA;AACA,cAAKyJ,UAAL,CAAgB2I,MAAhB,CAAuB0C,IAAI,KAAKzH,YAAL,CAAkBrN,GAAlB,CAAJ,CAAvB;AACD;;AAED,cAAO,IAAP;AACD,MAvBD;;AAyBA;;;;;;AAMAoQ,eAAUnR,SAAV,CAAoBoT,MAApB,GAA6B,YAAY;;AAEvC;AACA,WAAI,KAAK/E,eAAL,IAAwB,CAAC,KAAKC,iBAA9B,IAAmD,KAAKF,YAAL,CAAkBlN,MAAlB,KAA6B,CAApF,EAAuF;AACrF,cAAKkN,YAAL,GAAoB,KAAK5D,UAAL,CAAgBsH,mBAAhB,EAApB;AACD;;AAED,YAAKtH,UAAL,CAAgB4I,MAAhB,CAAuB,KAAKnN,IAAL,EAAvB;;AAEA,YAAKmI,YAAL,GAAoB,EAApB;;AAEA,cAAO,IAAP;AACD,MAZD;;AAcA;;;;;;;;AAQA+C,eAAUnR,SAAV,CAAoBgT,SAApB,GAAgC,UAAUC,WAAV,EAAuBC,cAAvB,EAAuC;AACrE,WAAI;AACF,gBAAOA,eAAe,KAAKjN,IAAL,GAAYQ,GAAZ,CAAgBwM,WAAhB,CAAf,CAAP;AACD,QAFD,CAEE,OAAOtD,GAAP,EAAY;AACZ,eAAMA,GAAN;AACD;AACF,MAND;;AAQA;;;;;;;;;;AAUAwB,eAAUnR,SAAV,CAAoB2S,MAApB,GAA6B,UAAUC,QAAV,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,MAA/C,EAAuD;;AAElF,WAAI+C,WAAW,EAAf;AAAA,WACEC,cADF;AAAA,WAEEC,YAAY,EAFd;AAAA,WAGEC,eAHF;AAAA,WAIEtK,GAJF;AAAA,WAKE/E,SAAS,EALX;AAAA,WAMEsP,oBAAoB,OAAOrD,WAAP,KAAuB,UAN7C;AAAA,WAOEsD,qBAAqB,OAAOrD,YAAP,KAAwB,UAP/C;AAAA,WAQEsD,UAAU,EARZ;;AAUA;AACAN,kBAAW,KAAK7P,IAAL,EAAX;AACA8P,wBAAiBD,SAAS5U,MAA1B;;AAEA;AACA,WAAI0R,oBAAoBzB,SAAxB,EAAmC;AACjC6E,qBAAYpD,SAAS3M,IAAT,EAAZ;AACD,QAFD,MAEO,IAAI7C,MAAMC,OAAN,CAAcuP,QAAd,CAAJ,EAA6B;AAClCoD,qBAAYpD,QAAZ;AACD,QAFM,MAEA;AACL,eAAM,IAAIhC,SAAJ,CAAc,6CAAd,CAAN;AACD;AACDqF,yBAAkBD,UAAU9U,MAA5B;;AAEA;;AAEA,YAAK,IAAIsB,IAAI,CAAb,EAAgBA,IAAIyT,eAApB,EAAqCzT,GAArC,EAA0C;AACxCmJ,eAAMwK,qBAAqBrD,aAAakD,UAAUxT,CAAV,CAAb,CAArB,GAAkDwT,UAAUxT,CAAV,EAAasQ,YAAb,CAAxD;AACAsD,iBAAQzK,GAAR,IAAeqK,UAAUxT,CAAV,CAAf;AACD;;AAED,WAAI,CAACuQ,MAAL,EAAa;AACXA,kBAAS,UAAUsD,IAAV,EAAgBC,KAAhB,EAAuB;AAC9B,kBAAO;AACLD,mBAAMA,IADD;AAELC,oBAAOA;AAFF,YAAP;AAID,UALD;AAMD;;AAED;AACA,YAAK,IAAIjK,IAAI,CAAb,EAAgBA,IAAI0J,cAApB,EAAoC1J,GAApC,EAAyC;AACvCV,eAAMuK,oBAAoBrD,YAAYiD,SAASzJ,CAAT,CAAZ,CAApB,GAA+CyJ,SAASzJ,CAAT,EAAYwG,WAAZ,CAArD;AACAjM,gBAAOtF,IAAP,CAAYyR,OAAO+C,SAASzJ,CAAT,CAAP,EAAoB+J,QAAQzK,GAAR,KAAgB,EAApC,CAAZ;AACD;;AAED;AACA,YAAKnB,UAAL,GAAkB,IAAIC,UAAJ,CAAe,UAAf,CAAlB;AACA,YAAKD,UAAL,CAAgBE,MAAhB,CAAuB9D,MAAvB;AACA,YAAKwH,YAAL,GAAoB,EAApB;AACA,YAAKE,iBAAL,GAAyB,KAAzB;;AAEA,cAAO,IAAP;AACD,MAvDD;;AAyDA6C,eAAUnR,SAAV,CAAoByG,GAApB,GAA0B,UAAUsM,MAAV,EAAkB;AAC1C,WAAI9M,OAAO,KAAKA,IAAL,GAAYQ,GAAZ,CAAgBsM,MAAhB,CAAX;AACA;AACA,YAAKvI,UAAL,GAAkB,IAAIC,UAAJ,CAAe,YAAf,CAAlB;AACA,YAAKD,UAAL,CAAgBE,MAAhB,CAAuBzE,IAAvB;AACA,YAAKmI,YAAL,GAAoB,EAApB;AACA,YAAKE,iBAAL,GAAyB,KAAzB;;AAEA,cAAO,IAAP;AACD,MATD;;AAWA;;;;;;;;;;;;;;;;;;;;;AAqBA,cAASiI,WAAT,CAAqB/L,UAArB,EAAiCK,IAAjC,EAAuC1C,OAAvC,EAAgD;AAC9C,YAAKqC,UAAL,GAAkBA,UAAlB;AACA,YAAKK,IAAL,GAAYA,IAAZ;AACA,YAAK2L,cAAL,GAAsB,KAAtB;AACA,YAAKrO,OAAL,GAAeA,WAAW,EAA1B;;AAEA,WAAI,CAAC,KAAKA,OAAL,CAAarI,cAAb,CAA4B,YAA5B,CAAL,EAAgD;AAC9C,cAAKqI,OAAL,CAAasO,UAAb,GAA0B,KAA1B;AACD;;AAED;AACA;AACA;AACA,WAAI,CAAC,KAAKtO,OAAL,CAAarI,cAAb,CAA4B,cAA5B,CAAL,EAAkD;AAChD,cAAKqI,OAAL,CAAauO,YAAb,GAA4B,SAA5B;AACD;;AAED,WAAI,CAAC,KAAKvO,OAAL,CAAarI,cAAb,CAA4B,oBAA5B,CAAL,EAAwD;AACtD,cAAKqI,OAAL,CAAawO,kBAAb,GAAkC,CAAlC;AACD;;AAED,YAAKxI,SAAL,GAAiB,IAAIgD,SAAJ,CAAc3G,UAAd,CAAjB;AACA,YAAKqD,UAAL,GAAkB,EAAlB;AACA,YAAKC,YAAL,GAAoB,KAApB;;AAEA,YAAK8I,eAAL,GAAuB,IAAvB;;AAEA;AACA,YAAK7I,cAAL,GAAsB,EAAtB;;AAEA;AACA;AACA,YAAKE,YAAL,GAAoB,IAApB;AACA,YAAKD,YAAL,GAAoB,IAApB;AACA,YAAKE,SAAL,GAAiB,KAAjB;;AAEA;AACA;;AAEA,YAAKhH,MAAL,GAAc;AACZ,oBAAW;AADC,QAAd;AAGD;;AAEDqP,iBAAYvW,SAAZ,GAAwB,IAAIiH,gBAAJ,EAAxB;;AAGA;;;;;;;;;;;AAWAsP,iBAAYvW,SAAZ,CAAsBuO,aAAtB,GAAsC,UAAUpG,OAAV,EAAmB;AACvD,WAAI0O,GAAJ,EACEC,GADF,EAEE/V,GAFF;;AAIAoH,iBAAUA,WAAW,EAArB;;AAEA,YAAK0F,UAAL,GAAkB,EAAlB;AACA,YAAKC,YAAL,GAAoB,IAApB;AACA,YAAKK,SAAL,GAAiB,IAAIgD,SAAJ,CAAc,KAAK3G,UAAnB,CAAjB;;AAEA,WAAI,KAAKyD,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,cAAKE,SAAL,GAAiB,IAAjB;AACD;;AAED,WAAI/F,QAAQrI,cAAR,CAAuB,oBAAvB,CAAJ,EAAkD;AAChD;AACA;AACA+W,eAAM,KAAK9I,cAAL,CAAoB7M,MAA1B;AACA4V,eAAMD,GAAN;AACA,gBAAOC,KAAP,EAAc;AACZ,eAAI,KAAK/I,cAAL,CAAoB+I,GAApB,EAAyBvR,IAAzB,KAAkC,OAAtC,EAA+C;AAC7C,iBAAIuR,QAAQ,KAAK/I,cAAL,CAAoB7M,MAApB,GAA6B,CAAzC,EAA4C;AAC1C,oBAAK6M,cAAL,CAAoB+I,GAApB,IAA2B,KAAK/I,cAAL,CAAoB,KAAKA,cAAL,CAAoB7M,MAApB,GAA6B,CAAjD,CAA3B;AACD;;AAED,kBAAK6M,cAAL,CAAoB7M,MAApB;AACD;AACF;AACF;;AAED;AACA,WAAI6V,MAAM,KAAKhJ,cAAf;AACA,YAAKA,cAAL,GAAsB,EAAtB;;AAEA;AACA8I,aAAME,IAAI7V,MAAV;AACA,YAAKH,MAAM,CAAX,EAAcA,MAAM8V,GAApB,EAAyB9V,KAAzB,EAAgC;AAC9B,cAAKiW,SAAL,CAAeD,IAAIhW,GAAJ,EAAS4C,GAAxB;AACD;;AAED;AACA,YAAKsC,IAAL;;AAEA;AACA,YAAK0B,IAAL,CAAU,SAAV,EAAqB,IAArB;;AAEA,cAAO,IAAP;AACD,MAhDD;;AAkDA;;;;;;;;;;AAUA4O,iBAAYvW,SAAZ,CAAsBiX,eAAtB,GAAwC,UAAUnW,SAAV,EAAqBsR,UAArB,EAAiC;AACvE,WAAIE,KAAK,KAAKnE,SAAL,CAAegE,MAAf,EAAT;;AAEA,WAAI,OAAOrR,SAAP,KAAqB,WAAzB,EAAsC;AACpC,gBAAOwR,EAAP;AACD;;AAED,cAAOA,GAAGxR,SAAH,CAAaA,SAAb,EAAwBsR,UAAxB,CAAP;AACD,MARD;;AAUA;;;;AAIAmE,iBAAYvW,SAAZ,CAAsB0R,MAAtB,GAA+B,YAAY;AACzC,WAAIC,OAAO,IAAI4E,WAAJ,CAAgB,KAAK/L,UAArB,EAAiC,KAAKK,IAAtC,EAA4C,KAAK1C,OAAjD,CAAX;;AAEAwJ,YAAKxD,SAAL,GAAiB,KAAKA,SAAtB;AACAwD,YAAK9D,UAAL,GAAkB,EAAlB,CAJyC,CAInB;AACtB8D,YAAK7D,YAAL,GAAoB,IAApB;AACA6D,YAAK5D,cAAL,GAAsB,KAAKA,cAA3B;AACA4D,YAAK1D,YAAL,GAAoB,KAAKA,YAAzB;AACA0D,YAAK3D,YAAL,GAAoB,KAAKA,YAAzB;AACA2D,YAAKzD,SAAL,GAAiB,KAAKA,SAAtB;;AAEA;AACAyD,YAAKnH,UAAL,GAAkB,IAAlB;;AAEA,cAAOmH,IAAP;AACD,MAfD;;AAiBA;;;;;AAKA4E,iBAAYvW,SAAZ,CAAsBkX,aAAtB,GAAsC,YAAY;AAChD,YAAKV,cAAL,GAAsB,KAAtB;AACA,YAAKrI,SAAL,CAAesD,KAAf;AACA,YAAK5D,UAAL,GAAkB,EAAlB;AACA,YAAKC,YAAL,GAAoB,KAApB;;AAEA,YAAK8I,eAAL,GAAuB,IAAvB;;AAEA;AACA,YAAK7I,cAAL,GAAsB,EAAtB;;AAEA;AACA;AACA,YAAKE,YAAL,GAAoB,IAApB;AACA,YAAKD,YAAL,GAAoB,IAApB;AACA,YAAKE,SAAL,GAAiB,KAAjB;AACD,MAhBD;;AAkBA;;;;;;;;;;;;;AAaAqI,iBAAYvW,SAAZ,CAAsBmX,SAAtB,GAAkC,UAAU9D,UAAV,EAAsB;AACtD,YAAKpF,YAAL,GAAoBoF,UAApB;AACA,YAAKrF,YAAL,GAAoB,IAApB;;AAEA,YAAKoJ,cAAL;;AAEA,cAAO,IAAP;AACD,MAPD;;AASA;;;;;;;;;;AAUAb,iBAAYvW,SAAZ,CAAsBqX,eAAtB,GAAwC,UAAU7D,QAAV,EAAoBC,MAApB,EAA4B;AAClE,YAAKzF,YAAL,GAAoB,CAClB,CAACwF,QAAD,EAAWC,UAAU,KAArB,CADkB,CAApB;AAGA,YAAKxF,YAAL,GAAoB,IAApB;;AAEA,YAAKmJ,cAAL;;AAEA,cAAO,IAAP;AACD,MATD;;AAWA;;;;;;;;;;;;;;AAcAb,iBAAYvW,SAAZ,CAAsBsX,iBAAtB,GAA0C,UAAUC,QAAV,EAAoB;AAC5D,YAAKvJ,YAAL,GAAoBuJ,QAApB;AACA,YAAKtJ,YAAL,GAAoB,IAApB;;AAEA,YAAKmJ,cAAL;;AAEA,cAAO,IAAP;AACD,MAPD;;AASA;;;;;AAKAb,iBAAYvW,SAAZ,CAAsBwX,gBAAtB,GAAyC,YAAY;AACnD,YAAKZ,eAAL,GAAuB,KAAKzI,SAAL,CAAewD,IAAf,EAAvB;;AAEA,cAAO,IAAP;AACD,MAJD;;AAMA;;;;;AAKA4E,iBAAYvW,SAAZ,CAAsByX,MAAtB,GAA+B,YAAY;AACzC,YAAKb,eAAL,GAAuB,IAAvB;;AAEA,cAAO,IAAP;AACD,MAJD;;AAMA;;;;;AAKAL,iBAAYvW,SAAZ,CAAsB0X,QAAtB,GAAiC,YAAY;AAC3C,YAAKvJ,SAAL,GAAiB,KAAKyI,eAAtB;;AAEA,WAAI,KAAKzO,OAAL,CAAasO,UAAjB,EAA6B;AAC3B;AACA;AACA,cAAK5I,UAAL,GAAkB,KAAKM,SAAL,CAAelI,IAAf,EAAlB;;AAEA,cAAK0B,IAAL,CAAU,SAAV,EAAqB,IAArB;AACD;;AAED,cAAO,IAAP;AACD,MAZD;;AAeA;;;;;;;AAOA4O,iBAAYvW,SAAZ,CAAsB2X,oBAAtB,GAA6C,UAAUC,GAAV,EAAe;AAC1D,WAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAA9C,EAAwD;AACtD,cAAK,IAAI7W,MAAM,CAAV,EAAa0B,MAAM,KAAKsL,cAAL,CAAoB7M,MAA5C,EAAoDH,MAAM0B,GAA1D,EAA+D1B,OAAO,CAAtE,EAAyE;AACvE,eAAI6W,QAAQ,KAAK7J,cAAL,CAAoBhN,GAApB,EAAyB6W,GAArC,EAA0C;AACxC,oBAAO7W,GAAP;AACD;AACF;AACF;AACD,cAAO,CAAC,CAAR;AACD,MATD;;AAWA;;;;;;AAMAwV,iBAAYvW,SAAZ,CAAsB6X,UAAtB,GAAmC,UAAUxC,MAAV,EAAkB;AACnD,YAAKtH,cAAL,CAAoBzM,IAApB,CAAyB+T,MAAzB;AACA,YAAKlH,SAAL,CAAekH,OAAO9P,IAAtB,EAA4B8P,OAAO1R,GAAnC;AACD,MAHD;;AAKA;;;;;AAKA4S,iBAAYvW,SAAZ,CAAsB8X,cAAtB,GAAuC,YAAY;AACjD,YAAK3J,SAAL,CAAesD,KAAf;;AAEA,YAAKmF,eAAL,GAAuB,IAAvB;AACA,WAAI,KAAKzO,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,cAAK5I,UAAL,GAAkB,EAAlB;AACA,cAAKC,YAAL,GAAoB,IAApB;AACD;;AAED,WAAIiK,UAAU,KAAKhK,cAAnB;AACA,YAAKA,cAAL,GAAsB,EAAtB;;AAEA,YAAK,IAAIhN,MAAM,CAAV,EAAa0B,MAAMsV,QAAQ7W,MAAhC,EAAwCH,MAAM0B,GAA9C,EAAmD1B,OAAO,CAA1D,EAA6D;AAC3D,cAAK8W,UAAL,CAAgBE,QAAQhX,GAAR,CAAhB;AACD;;AAED,WAAI,KAAKkN,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,cAAKoJ,cAAL;AACD,QAFD,MAEO;AACL,cAAKY,iBAAL;AACD;;AAED,cAAO,IAAP;AACD,MAvBD;;AAyBA;;;;;;;;AAQAzB,iBAAYvW,SAAZ,CAAsBiY,WAAtB,GAAoC,UAAU5C,MAAV,EAAkB;AACpD,WAAItU,MAAM,KAAK4W,oBAAL,CAA0BtC,OAAOuC,GAAjC,CAAV;AACA,WAAI7W,OAAO,CAAX,EAAc;AACZ,cAAKgN,cAAL,CAAoBhN,GAApB,IAA2BsU,MAA3B;AACA,gBAAO,KAAKyC,cAAL,EAAP;AACD;;AAED,YAAKlB,eAAL,GAAuB,IAAvB;AACA,WAAI,KAAKzO,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,cAAK5I,UAAL,GAAkB,EAAlB;AACA,cAAKC,YAAL,GAAoB,IAApB;AACD;;AAED,YAAK+J,UAAL,CAAgBxC,MAAhB;;AAEA,WAAI,KAAKpH,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,cAAKoJ,cAAL;AACD,QAFD,MAEO;AACL,cAAKY,iBAAL;AACD;;AAED,cAAO,IAAP;AACD,MAtBD;;AAwBA;;;;;;;;AAQAzB,iBAAYvW,SAAZ,CAAsBgX,SAAtB,GAAkC,UAAU1C,KAAV,EAAiBsD,GAAjB,EAAsB;AACtD,YAAKK,WAAL,CAAiB;AACf1S,eAAM,MADS;AAEf5B,cAAK2Q,KAFU;AAGfsD,cAAKA;AAHU,QAAjB;AAKA,cAAO,IAAP;AACD,MAPD;;AASA;;;;;;;;AAQArB,iBAAYvW,SAAZ,CAAsBkY,UAAtB,GAAmC,UAAUtV,GAAV,EAAegV,GAAf,EAAoB;AACrD,YAAKK,WAAL,CAAiB;AACf1S,eAAM,OADS;AAEf5B,cAAKf,GAFU;AAGfgV,cAAKA;AAHU,QAAjB;AAKA,cAAO,IAAP;AACD,MAPD;;AASA;;;;;;;AAOArB,iBAAYvW,SAAZ,CAAsBmY,YAAtB,GAAqC,UAAUP,GAAV,EAAe;AAClD,WAAI7W,MAAM,KAAK4W,oBAAL,CAA0BC,GAA1B,CAAV;AACA,WAAI7W,MAAM,CAAV,EAAa;AACX,eAAM,IAAIgK,KAAJ,CAAU,qDAAqD6M,GAA/D,CAAN;AACD;;AAED,YAAK7J,cAAL,CAAoB/F,MAApB,CAA2BjH,GAA3B,EAAgC,CAAhC;AACA,YAAK+W,cAAL;AACA,cAAO,IAAP;AACD,MATD;;AAWA;;;;;;AAMAvB,iBAAYvW,SAAZ,CAAsBqL,KAAtB,GAA8B,YAAY;AACxC,WAAI,KAAKlD,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,gBAAO,KAAK5I,UAAL,CAAgB3M,MAAvB;AACD;AACD,cAAO,KAAKiN,SAAL,CAAe9C,KAAf,EAAP;AACD,MALD;;AAOA;;;;;;AAMAkL,iBAAYvW,SAAZ,CAAsBiG,IAAtB,GAA6B,YAAY;AACvC;AACA,WAAI,KAAKiI,SAAL,IAAkB,KAAKJ,YAA3B,EAAyC;AACvC,cAAKsK,gBAAL,CAAsB;AACpBC,iCAAsB;AADF,UAAtB;AAGD;AACD,cAAQ,KAAKlQ,OAAL,CAAasO,UAAd,GAA6B,KAAK5I,UAAlC,GAAiD,KAAKM,SAAL,CAAelI,IAAf,EAAxD;AACD,MARD;;AAUA;;;;AAIAsQ,iBAAYvW,SAAZ,CAAsBgY,iBAAtB,GAA0C,YAAY;AACpD,WAAI,KAAKxB,cAAT,EAAyB;AACvB;AACD;AACD,YAAKA,cAAL,GAAsB,IAAtB;;AAEA,WAAIhP,OAAO,IAAX;AACAI,kBAAW,YAAY;AACrB,aAAIJ,KAAKgP,cAAT,EAAyB;AACvBhP,gBAAKgP,cAAL,GAAsB,KAAtB;AACAhP,gBAAKG,IAAL,CAAU,SAAV,EAAqBH,IAArB;AACD;AACF,QALD,EAKG,KAAKW,OAAL,CAAawO,kBALhB;AAMD,MAbD;;AAeA;;;;;AAKAJ,iBAAYvW,SAAZ,CAAsBoX,cAAtB,GAAuC,YAAY;AACjD;AACA,WAAI,KAAKlJ,SAAT,EAAoB;AAClB;AACD;AACD,YAAKA,SAAL,GAAiB,IAAjB;;AAEA,WAAI1G,OAAO,IAAX;AACA,WAAI,KAAKW,OAAL,CAAauO,YAAb,KAA8B,QAAlC,EAA4C;AAC1C;AACA9O,oBAAW,YAAY;AACrBJ,gBAAK4Q,gBAAL;AACD,UAFD,EAEG,KAAKjQ,OAAL,CAAawO,kBAFhB;AAGD,QALD,MAKO;AACL;AACA;AACA,cAAKqB,iBAAL;AACD;AACF,MAlBD;;AAoBA;;;;AAIAzB,iBAAYvW,SAAZ,CAAsBoY,gBAAtB,GAAyC,UAAUjQ,OAAV,EAAmB;AAC1D;AACA,WAAI,CAAC,KAAK+F,SAAN,IAAmB,CAAC,KAAKJ,YAA7B,EAA2C;AACzC;AACD;;AAED3F,iBAAUA,WAAW,EAArB;;AAEA,WAAI,KAAK+F,SAAT,EAAoB;AAClB,aAAI,KAAKD,YAAT,EAAuB;AACrB,gBAAKE,SAAL,CAAeuE,IAAf,CAAoB,KAAKzE,YAAzB;AACD,UAFD,MAEO,IAAI,KAAKD,YAAT,EAAuB;AAC5B,gBAAKG,SAAL,CAAesE,YAAf,CAA4B,KAAKzE,YAAjC;AACD;;AAED,cAAKE,SAAL,GAAiB,KAAjB;AACD;;AAED,WAAI,KAAK/F,OAAL,CAAasO,UAAjB,EAA6B;AAC3B;AACA,cAAK5I,UAAL,GAAkB,KAAKM,SAAL,CAAelI,IAAf,EAAlB;AACA,cAAK6H,YAAL,GAAoB,KAApB;AACD;;AAED,WAAI,CAAC3F,QAAQkQ,oBAAb,EAAmC;AACjC,cAAK1Q,IAAL,CAAU,SAAV,EAAqB,IAArB;AACD;AACF,MA3BD;;AA6BA;;;;;;;AAOA4O,iBAAYvW,SAAZ,CAAsBsY,gBAAtB,GAAyC,UAAUC,QAAV,EAAoBC,KAApB,EAA2B;AAClE;AACA,WAAI,CAAC,KAAKrK,SAAL,CAAeG,iBAApB,EAAuC;AACrC,aAAI,KAAKnG,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,gBAAK5I,UAAL,GAAkB,KAAKM,SAAL,CAAelI,IAAf,EAAlB;AACD;AACD;AACA,aAAI,KAAKgI,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;AACD;AACD;;AAED,WAAIS,MAAM,KAAKtK,SAAL,CAAeC,YAAzB;AACA,WAAIsK,SAAUF,KAAD,GAAW,CAAC,CAAZ,GAAkBC,IAAI9X,OAAJ,CAAY,CAAC4X,QAAb,CAA/B;AACA,WAAII,SAASF,IAAIvX,MAAjB;;AAEA;AACA;AACA,WAAI0X,gBAAgB,IAAIzH,SAAJ,CAAc,KAAK3G,UAAnB,CAApB;AACAoO,qBAAcxK,YAAd,GAA6B,CAACmK,QAAD,CAA7B;AACAK,qBAActK,iBAAd,GAAkC,IAAlC;AACA,WAAI+G,MAAJ;AACA,YAAK,IAAItU,MAAM,CAAV,EAAa0B,MAAM,KAAKsL,cAAL,CAAoB7M,MAA5C,EAAoDH,MAAM0B,GAA1D,EAA+D1B,KAA/D,EAAsE;AACpEsU,kBAAS,KAAKtH,cAAL,CAAoBhN,GAApB,CAAT;AACA6X,uBAAcvD,OAAO9P,IAArB,EAA2B8P,OAAO1R,GAAlC;AACD;;AAED;AACA,WAAIkV,SAAUD,cAAcxK,YAAd,CAA2BlN,MAA3B,KAAsC,CAAvC,GAA4C,CAAC,CAA7C,GAAiD,CAA9D;;AAEA;AACA,WAAIwX,WAAW,CAAC,CAAZ,IAAiBG,WAAW,CAAC,CAAjC,EAAoC;;AAEpC;AACA,WAAIH,WAAW,CAAC,CAAZ,IAAiBG,WAAW,CAAC,CAAjC,EAAoC;AAClCJ,aAAInX,IAAJ,CAASiX,QAAT;;AAEA,aAAI,KAAKpQ,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,gBAAK5I,UAAL,CAAgBvM,IAAhB,CAAqB,KAAKkJ,UAAL,CAAgBvE,IAAhB,CAAqBsS,QAArB,CAArB;AACD;;AAED;AACA,aAAI,KAAKtK,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;;AAED;AACD;;AAED;AACA,WAAIU,WAAW,CAAC,CAAZ,IAAiBG,WAAW,CAAC,CAAjC,EAAoC;AAClC,aAAIH,SAASC,SAAS,CAAtB,EAAyB;AACvBF,eAAIzQ,MAAJ,CAAW0Q,MAAX,EAAmB,CAAnB;;AAEA,eAAI,KAAKvQ,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,kBAAK5I,UAAL,CAAgB7F,MAAhB,CAAuB0Q,MAAvB,EAA+B,CAA/B;AACD;AACF,UAND,MAMO;AACLD,eAAIvX,MAAJ,GAAayX,SAAS,CAAtB;;AAEA,eAAI,KAAKxQ,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,kBAAK5I,UAAL,CAAgB3M,MAAhB,GAAyByX,SAAS,CAAlC;AACD;AACF;;AAED;AACA,aAAI,KAAK1K,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;;AAED;AACD;;AAED;AACA,WAAIU,WAAW,CAAC,CAAZ,IAAiBG,WAAW,CAAC,CAAjC,EAAoC;AAClC,aAAI,KAAK1Q,OAAL,CAAasO,UAAjB,EAA6B;AAC3B;AACA,gBAAK5I,UAAL,CAAgB6K,MAAhB,IAA0B,KAAKlO,UAAL,CAAgBvE,IAAhB,CAAqBsS,QAArB,CAA1B;AACD;;AAED;AACA,aAAI,KAAKtK,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;;AAED;AACD;AACF,MAhGD;;AAkGA;;;AAGAzB,iBAAYvW,SAAZ,CAAsB8Y,cAAtB,GAAuC,UAAUP,QAAV,EAAoB;AACzD;AACA,WAAI,CAAC,KAAKpK,SAAL,CAAeG,iBAApB,EAAuC;AACrC,aAAI,KAAKnG,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,gBAAK5I,UAAL,GAAkB,KAAKM,SAAL,CAAelI,IAAf,EAAlB;AACD;AACD;AACA,aAAI,KAAKgI,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;AACD;AACD;;AAED,WAAIS,MAAM,KAAKtK,SAAL,CAAeC,YAAzB;AACA,WAAIsK,SAASD,IAAI9X,OAAJ,CAAY,CAAC4X,QAAb,CAAb;AACA,WAAII,SAASF,IAAIvX,MAAjB;AACA,WAAIH,GAAJ;;AAEA,WAAI2X,WAAW,CAAC,CAAhB,EAAmB;AACjB;AACA,aAAIA,SAASC,SAAS,CAAtB,EAAyB;AACvBF,eAAIC,MAAJ,IAAcD,IAAIE,SAAS,CAAb,CAAd;AACAF,eAAIvX,MAAJ,GAAayX,SAAS,CAAtB;;AAEA,eAAI,KAAKxQ,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,kBAAK5I,UAAL,CAAgB6K,MAAhB,IAA0B,KAAK7K,UAAL,CAAgB8K,SAAS,CAAzB,CAA1B;AACA,kBAAK9K,UAAL,CAAgB3M,MAAhB,GAAyByX,SAAS,CAAlC;AACD;AACF;AACD;AATA,cAUK;AACHF,iBAAIvX,MAAJ,GAAayX,SAAS,CAAtB;;AAEA,iBAAI,KAAKxQ,OAAL,CAAasO,UAAjB,EAA6B;AAC3B,oBAAK5I,UAAL,CAAgB3M,MAAhB,GAAyByX,SAAS,CAAlC;AACD;AACF;;AAED;AACA,aAAI,KAAK1K,YAAL,IAAqB,KAAKD,YAA9B,EAA4C;AAC1C,gBAAKoJ,cAAL;AACD,UAFD,MAEO;AACL,gBAAKY,iBAAL;AACD;AACF;;AAED;AACA;AACA;AACAW,gBAASF,IAAIvX,MAAb;AACA,YAAKH,MAAM,CAAX,EAAcA,MAAM4X,MAApB,EAA4B5X,KAA5B,EAAmC;AACjC,aAAI0X,IAAI1X,GAAJ,IAAWwX,QAAf,EAAyB;AACvBE,eAAI1X,GAAJ;AACD;AACF;AACF,MAzDD;;AA2DA;;;;;;;;AAQAwV,iBAAYvW,SAAZ,CAAsBgT,SAAtB,GAAkC,UAAUC,WAAV,EAAuBC,cAAvB,EAAuC;AACvE,WAAI;AACF,gBAAOA,eAAe,KAAKjN,IAAL,GAAYQ,GAAZ,CAAgBwM,WAAhB,CAAf,CAAP;AACD,QAFD,CAEE,OAAOtD,GAAP,EAAY;AACZ,eAAMA,GAAN;AACD;AACF,MAND;;AASA;;;;;;;;;;;;;;;;;;AAkBA,cAASlF,UAAT,CAAoBI,IAApB,EAA0B1C,OAA1B,EAAmC;AACjC;;AAEA,YAAK0C,IAAL,GAAYA,IAAZ;AACA;AACA,YAAK5E,IAAL,GAAY,EAAZ;AACA,YAAKkH,OAAL,GAAe,EAAf,CANiC,CAMd;AACnB,YAAKC,aAAL,GAAqB,EAArB,CAPiC,CAOR;AACzB,YAAK2L,WAAL,GAAmB;AACjBC,iBAAQ,EADS;AAEjBC,gBAAO;AAFU,QAAnB;;AAKA;AACA;AACA,YAAK1L,WAAL,GAAmB,EAAnB;;AAEA;AACA;AACA,YAAKF,UAAL,GAAkB,EAAlB;;AAEA;AACA,YAAKjC,OAAL,GAAeP,IAAf;;AAEA;AACA;AACA;AACA,YAAKoG,KAAL,GAAa,IAAb;;AAEA;AACA,YAAKiI,WAAL,GAAmB,IAAnB;AACA,YAAKC,iBAAL,GAAyB,IAAzB;AACA,YAAKC,UAAL,GAAkB,IAAlB;AACA,WAAI5R,OAAO,IAAX;;AAEA;AACAW,iBAAUA,WAAW,EAArB;;AAEA;AACA,WAAIA,QAAQrI,cAAR,CAAuB,QAAvB,CAAJ,EAAsC;AACpC,aAAI,CAACsD,MAAMC,OAAN,CAAc8E,QAAQ6Q,MAAtB,CAAL,EAAoC;AAClC7Q,mBAAQ6Q,MAAR,GAAiB,CAAC7Q,QAAQ6Q,MAAT,CAAjB;AACD;AACD7Q,iBAAQ6Q,MAAR,CAAevR,OAAf,CAAuB,UAAUpH,IAAV,EAAgB;AACrCmH,gBAAK+F,WAAL,CAAiBjM,IAAjB,CAAsBjB,IAAtB,EADqC,CACR;AAC7BmH,gBAAKuR,WAAL,CAAiBC,MAAjB,CAAwB3Y,IAAxB,IAAgC,IAAIgZ,WAAJ,CAAgBhZ,IAAhB,CAAhC;AACD,UAHD;AAID;;AAED,WAAI8H,QAAQrI,cAAR,CAAuB,OAAvB,CAAJ,EAAqC;AACnCqI,iBAAQ8Q,KAAR,CAAcxR,OAAd,CAAsB,UAAUpH,IAAV,EAAgB;AACpCmH,gBAAKuR,WAAL,CAAiBE,KAAjB,CAAuB5Y,IAAvB,IAA+B,IAAIiZ,UAAJ,CAAejZ,IAAf,CAA/B;AACD,UAFD;AAGD;;AAED;AACA;AACA,YAAKuM,qBAAL,GAA6BzE,QAAQrI,cAAR,CAAuB,uBAAvB,IAAkDqI,QAAQyE,qBAA1D,GAAkF,IAA/G;;AAEA;AACA,YAAKC,aAAL,GAAqB1E,QAAQrI,cAAR,CAAuB,eAAvB,IAA0CqI,QAAQ0E,aAAlD,GAAkE,KAAvF;;AAEA;AACA,YAAKE,YAAL,GAAoB5E,QAAQrI,cAAR,CAAuB,OAAvB,IAAkCqI,QAAQnC,KAA1C,GAAkD,KAAtE;;AAEA;AACA,YAAKG,WAAL,GAAmBgC,QAAQrI,cAAR,CAAuB,aAAvB,IAAwCqI,QAAQhC,WAAhD,GAA8D,iBAAjF;;AAEA;AACA,YAAKgB,cAAL,GAAsBgB,QAAQrI,cAAR,CAAuB,gBAAvB,IAA2CqI,QAAQhB,cAAnD,GAAoE,KAA1F;;AAEA;AACA,YAAK2F,iBAAL,GAAyB3E,QAAQrI,cAAR,CAAuB,mBAAvB,IAA8CqI,QAAQ2E,iBAAtD,GAA0E,IAAnG;;AAEA;AACA,YAAKE,UAAL,GAAkB7E,QAAQrI,cAAR,CAAuB,YAAvB,IAAuCqI,QAAQ6E,UAA/C,GAA4D,KAA9E;;AAEA;AACA,YAAKuM,GAAL,GAAW;AACTC,cAAK,IADI;AAETC,sBAAa,IAFJ;AAGTC,iBAAQ;AAHC,QAAX;AAKA,YAAKC,MAAL,CAAYxR,QAAQoR,GAAR,IAAe,CAAC,CAA5B,EAA+BpR,QAAQsR,WAAvC;;AAEA;AACA,YAAKvM,KAAL,GAAa,CAAb;;AAEA,YAAKO,YAAL,GAAoB,EAApB;;AAEA;AACA,YAAKvG,MAAL,GAAc;AACZ,mBAAU,EADE;AAEZ,mBAAU,EAFE;AAGZ,uBAAc,EAHF;AAIZ,uBAAc,EAJF;AAKZ,kBAAS,EALG;AAMZ,wBAAe,EANH;AAOZ,kBAAS,EAPG;AAQZ,mBAAU,EARE;AASZ,oBAAW;AATC,QAAd;;AAYA;AACA,YAAK8H,OAAL,GAAe,EAAf;;AAEA;AACA,YAAK1B,QAAL;AACA,WAAIsM,UAAU,EAAd;AACA;AACA,WAAIzR,WAAWA,QAAQyR,OAAvB,EAAgC;AAC9B,aAAI7Z,OAAOC,SAAP,CAAiB8B,QAAjB,CAA0BmB,IAA1B,CAA+BkF,QAAQyR,OAAvC,MAAoD,gBAAxD,EAA0E;AACxEA,qBAAUzR,QAAQyR,OAAlB;AACD,UAFD,MAEO,IAAI,OAAOzR,QAAQyR,OAAf,KAA2B,QAA/B,EAAyC;AAC9CA,qBAAU,CAACzR,QAAQyR,OAAT,CAAV;AACD,UAFM,MAEA;AACL,iBAAM,IAAIhJ,SAAJ,CAAc,qDAAd,CAAN;AACD;AACF;;AAED,YAAK,IAAI7P,MAAM,CAAf,EAAkBA,MAAM6Y,QAAQ1Y,MAAhC,EAAwCH,KAAxC,EAA+C;AAC7C,cAAKgU,WAAL,CAAiB6E,QAAQ7Y,GAAR,CAAjB;AACD;;AAED,gBAAS8Y,gBAAT,CAA0B7K,OAA1B,EAAmC;;AAEjC,aAAI8K,iBAAiB,OAAOC,GAAP,KAAe,UAAf,GAA4B,IAAIA,GAAJ,EAA5B,GAAwC,EAA7D;;AAEA,aAAI,CAACD,eAAeE,GAApB,EACEF,eAAeE,GAAf,GAAqB,UAAUC,MAAV,EAAkB;AACrC,eAAI,KAAKtZ,OAAL,CAAasZ,MAAb,MAAyB,CAAC,CAA9B,EACE,KAAK3Y,IAAL,CAAU2Y,MAAV;AACF,kBAAO,IAAP;AACD,UAJD;;AAMFjL,iBAAQvH,OAAR,CAAgB,UAAUyS,MAAV,EAAkB;AAChCJ,0BAAeE,GAAf,CAAmBE,OAAOD,MAA1B;AACD,UAFD;;AAIAH,wBAAerS,OAAf,CAAuB,UAAUwS,MAAV,EAAkB;AACvC,eAAI,CAACna,eAAemD,IAAf,CAAoBgX,MAApB,EAA4B,OAA5B,CAAL,EACE,OAAOzS,KAAK2S,wBAAL,CAA8BF,MAA9B,CAAP;AACF,eAAI;AACFzS,kBAAK2L,MAAL,CAAY8G,MAAZ;AACD,YAFD,CAEE,OAAOtK,GAAP,EAAY,CAAE;AACjB,UAND;AAOD;;AAED,YAAKkK,gBAAL,GAAwBA,gBAAxB;;AAEA;;;;AAIA,gBAASO,YAAT,CAAsBvP,IAAtB,EAA4BjH,EAA5B,EAAgCyW,GAAhC,EAAqC;AACnC7S,cAAKwH,OAAL,CAAa1N,IAAb,CAAkB;AAChBuJ,iBAAMA,IADU;AAEhByP,sBAAW1W,EAFK;AAGhByW,gBAAKlZ,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAegZ,GAAf,CAAX;AAHW,UAAlB;AAKD;;AAED;AACA,gBAAS/K,YAAT,GAAwB;AACtB9H,cAAKwH,OAAL,GAAe,EAAf;AACD;;AAED,YAAKG,UAAL,GAAkB,YAAY;AAC5B,gBAAO3H,KAAKwH,OAAZ;AACD,QAFD;;AAIA,YAAKM,YAAL,GAAoBA,YAApB;;AAEA;;;AAGA,gBAASiL,UAAT,CAAoBF,GAApB,EAAyB;AACvB,aAAI,CAACA,GAAL,EAAU;AACR;AACD;AACD,aAAI,CAACA,IAAIG,IAAT,EAAe;AACbH,eAAIG,IAAJ,GAAW,EAAX;AACD;;AAEDH,aAAIG,IAAJ,CAASC,OAAT,GAAoB,IAAIjV,IAAJ,EAAD,CAAakV,OAAb,EAAnB;AACAL,aAAIG,IAAJ,CAASG,QAAT,GAAoB,CAApB;AACD;;AAED,gBAASC,UAAT,CAAoBP,GAApB,EAAyB;AACvB,aAAI,CAACA,GAAL,EAAU;AACR;AACD;AACDA,aAAIG,IAAJ,CAASK,OAAT,GAAoB,IAAIrV,IAAJ,EAAD,CAAakV,OAAb,EAAnB;AACAL,aAAIG,IAAJ,CAASG,QAAT,IAAqB,CAArB;AACD;;AAED,gBAASG,kBAAT,CAA4BT,GAA5B,EAAiC;AAC/BD,sBAAa5S,KAAKqD,IAAlB,EAAwB,GAAxB,EAA6BwP,GAA7B;AACD;;AAED,gBAASU,kBAAT,CAA4BV,GAA5B,EAAiC;AAC/BD,sBAAa5S,KAAKqD,IAAlB,EAAwB,GAAxB,EAA6BwP,GAA7B;AACD;;AAED,gBAASW,oBAAT,CAA8BX,GAA9B,EAAmC;AACjCE,oBAAWF,GAAX;AACAS,4BAAmBT,GAAnB;AACD;;AAED,gBAASY,oBAAT,CAA8BZ,GAA9B,EAAmC;AACjCO,oBAAWP,GAAX;AACAU,4BAAmBV,GAAnB;AACD;;AAGD;AACA,WAAIa,aAAJ,EAAmBC,aAAnB;;AAEA,gBAASC,WAAT,GAAuB;AACrBF,yBAAgB1T,KAAKsF,iBAAL,GAAyByN,UAAzB,GAAsCS,oBAAtD;AACAG,yBAAgB3T,KAAKsF,iBAAL,GAAyB8N,UAAzB,GAAsCK,oBAAtD;AACD;;AAEDG;;AAEA,YAAKC,aAAL,GAAqB,UAAUC,OAAV,EAAmB;AACtC9T,cAAKsF,iBAAL,GAAyB,CAACwO,OAA1B;AACAF;AACD,QAHD;AAIA;;;AAGA,YAAKhU,EAAL,CAAQ,QAAR,EAAkB,SAASmU,cAAT,CAAwBlB,GAAxB,EAA6B;AAC7Ca,uBAAcb,GAAd;AACD,QAFD;;AAIA,YAAKjT,EAAL,CAAQ,QAAR,EAAkB,SAASoU,cAAT,CAAwBnB,GAAxB,EAA6B;AAC7Cc,uBAAcd,GAAd;AACD,QAFD;;AAIA,YAAKjT,EAAL,CAAQ,QAAR,EAAkB,SAASqU,cAAT,CAAwBpB,GAAxB,EAA6B;AAC7C,aAAI,CAAC7S,KAAKsF,iBAAV,EAA6B;AAC3BsN,wBAAa5S,KAAKqD,IAAlB,EAAwB,GAAxB,EAA6BwP,GAA7B;AACD;AACF,QAJD;;AAMA,YAAKjT,EAAL,CAAQ,SAAR,EAAmB,UAAUsU,OAAV,EAAmB;AACpClU,cAAKmD,OAAL,CAAagR,IAAb,CAAkBD,OAAlB;AACD,QAFD;AAGA;AACApM;AACD;;AAED7E,gBAAWzK,SAAX,GAAuB,IAAIiH,gBAAJ,EAAvB;;AAEAwD,gBAAWzK,SAAX,CAAqB2K,OAArB,GAA+B;AAC7BiR,YAAK,YAAY,CAAE,CADU;AAE7BD,aAAM,YAAY,CAAE,CAFS;AAG7BE,cAAO,YAAY,CAAE;AAHQ,MAA/B;;AAMApR,gBAAWzK,SAAX,CAAqBiN,qBAArB,GAA6C,UAAUgN,MAAV,EAAkB;AAC7D,WAAI,CAAC,KAAKjN,UAAN,IAAoB,OAAOjN,OAAO+b,OAAd,KAA0B,UAAlD,EACE;;AAEF/b,cAAO+b,OAAP,CAAe7B,MAAf,EAAuB,KAAKJ,gBAA5B,EAA8C,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,aAA5B,EAA2C,cAA3C,CAA9C;AACD,MALD;;AAOApP,gBAAWzK,SAAX,CAAqBma,wBAArB,GAAgD,UAAUF,MAAV,EAAkB;AAChE,WAAI,CAAC,KAAKjN,UAAN,IAAoB,OAAOjN,OAAO+b,OAAd,KAA0B,UAAlD,EACE;;AAEF/b,cAAOgc,SAAP,CAAiB9B,MAAjB,EAAyB,KAAKJ,gBAA9B;AACD,MALD;;AAOA;;;;;;AAMApP,gBAAWzK,SAAX,CAAqBgc,YAArB,GAAoC,UAAUnR,IAAV,EAAgB/J,SAAhB,EAA2B;AAC7D,WAAI,KAAKuM,UAAL,CAAgBvN,cAAhB,CAA+B+K,IAA/B,CAAJ,EAA0C;AACxC,eAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAED,YAAKsC,UAAL,CAAgBxC,IAAhB,IAAwB/J,SAAxB;AACD,MAND;;AAQA;;;;;;AAMA2J,gBAAWzK,SAAX,CAAqBic,YAArB,GAAoC,UAAUpR,IAAV,EAAgB/J,SAAhB,EAA2B;AAC7D,YAAKuM,UAAL,CAAgBxC,IAAhB,IAAwB/J,SAAxB;AACD,MAFD;;AAIA;;;;;AAKA2J,gBAAWzK,SAAX,CAAqBkc,eAArB,GAAuC,UAAUrR,IAAV,EAAgB;AACrD,cAAO,KAAKwC,UAAL,CAAgBxC,IAAhB,CAAP;AACD,MAFD;;AAIAJ,gBAAWzK,SAAX,CAAqBmc,SAArB,GAAiC,UAAUC,QAAV,EAAoB;AACnD,WAAI3G,CAAJ,EAAO4E,GAAP,EAAY/F,KAAZ;AACAA,eAAQ,EAAR;AACA,YAAKmB,CAAL,IAAU2G,QAAV,EAAoB;AAClB,aAAI,CAACA,SAAStc,cAAT,CAAwB2V,CAAxB,CAAL,EAAiC;AACjCnB,eAAMhT,IAAN,EACE+Y,MAAM,EAAN,EACAA,IAAI5E,CAAJ,IAAS2G,SAAS3G,CAAT,CADT,EAEA4E,GAHF;AAKD;AACD,cAAO;AACL,iBAAQ/F;AADH,QAAP;AAGD,MAdD;;AAgBA7J,gBAAWzK,SAAX,CAAqBqc,UAArB,GAAkC,UAAUD,QAAV,EAAoB;AACpD,cAAO,KAAKE,OAAL,CAAa,KAAKH,SAAL,CAAeC,QAAf,CAAb,CAAP;AACD,MAFD;;AAIA3R,gBAAWzK,SAAX,CAAqBuc,WAArB,GAAmC,UAAUH,QAAV,EAAoB;AACrD,cAAO,KAAK7K,IAAL,CAAU,KAAK4K,SAAL,CAAeC,QAAf,CAAV,CAAP;AACD,MAFD;;AAIA;;;AAGA3R,gBAAWzK,SAAX,CAAqBwc,gBAArB,GAAwC,YAAY;AAClD,WAAIhS,aAAa,IAAjB;AACA,WAAIgP,MAAM,KAAKD,GAAL,CAASC,GAAnB;AACA,cAAO,SAASiD,SAAT,GAAqB;AAC1B,aAAIC,MAAMlX,KAAKkX,GAAL,EAAV;AACA,aAAIC,WAAWnS,WAAWmK,KAAX,GAAmBnD,KAAnB,CAAyB,SAASoL,YAAT,CAAsBC,MAAtB,EAA8B;AACpE,eAAIC,YAAYD,OAAOrC,IAAP,CAAYK,OAAZ,IAAuBgC,OAAOrC,IAAP,CAAYC,OAAnD;AACA,eAAIsC,OAAOL,MAAMI,SAAjB;AACA,kBAAOtD,MAAMuD,IAAb;AACD,UAJc,CAAf;AAKAJ,kBAASvJ,MAAT;AACD,QARD;AASD,MAZD;;AAcA3I,gBAAWzK,SAAX,CAAqB2Z,MAArB,GAA8B,UAAUH,GAAV,EAAewD,QAAf,EAAyB;AACrD,WAAIxD,MAAM,CAAV,EAAa;AACXyD,uBAAc,KAAK1D,GAAL,CAASG,MAAvB;AACD,QAFD,MAEO;AACL,cAAKH,GAAL,CAASC,GAAT,GAAeA,GAAf;AACA,cAAKD,GAAL,CAASE,WAAT,GAAuBuD,QAAvB;AACA,cAAKzD,GAAL,CAASG,MAAT,GAAkBwD,YAAY,KAAKV,gBAAL,EAAZ,EAAqCQ,QAArC,CAAlB;AACD;AACF,MARD;;AAUA;;;;AAIA;;;AAGAvS,gBAAWzK,SAAX,CAAqB8R,mBAArB,GAA2C,YAAY;AACrD,WAAIrP,MAAM,KAAKwD,IAAL,CAAU/E,MAApB;AACA,WAAIic,UAAU,IAAI/Z,KAAJ,CAAUX,GAAV,CAAd;AACA,YAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIC,GAApB,EAAyBD,KAAK,CAA9B,EAAiC;AAC/B2a,iBAAQ3a,CAAR,IAAaA,CAAb;AACD;AACD,cAAO2a,OAAP;AACD,MAPD;;AASA;;;;;AAKA1S,gBAAWzK,SAAX,CAAqBod,gBAArB,GAAwC,UAAUjV,OAAV,EAAmB;AACzDA,iBAAUA,WAAW,EAArB;;AAEA,WAAIA,QAAQrI,cAAR,CAAuB,uBAAvB,CAAJ,EAAqD;AACnD,cAAK8M,qBAAL,GAA6BzE,QAAQyE,qBAArC;;AAEA;AACA,aAAI,KAAKA,qBAAT,EAAgC;AAC9B,gBAAKyQ,gBAAL;AACD;AACF;AACF,MAXD;;AAaA;;;;;;AAMA5S,gBAAWzK,SAAX,CAAqB+U,WAArB,GAAmC,UAAUvC,QAAV,EAAoB8K,KAApB,EAA2B;AAC5D;AACA,WAAI,OAAQA,KAAR,KAAmB,WAAvB,EAAoC;AAClCA,iBAAQ,KAAR;AACD;;AAED,WAAI9K,aAAa,IAAb,IAAqBA,aAAa3Q,SAAtC,EAAiD;AAC/C,eAAM,IAAIkJ,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,WAAI,KAAKqC,aAAL,CAAmBoF,QAAnB,KAAgC,CAAC8K,KAArC,EAA4C;AAC1C,aAAI,CAAC,KAAKlQ,aAAL,CAAmBoF,QAAnB,EAA6BvB,KAAlC,EAAyC;AAC1C;;AAED,WAAI3N,QAAQ;AACV,iBAAQkP,QADE;AAEV,kBAAS,IAFC;AAGV,mBAAU,KAAKV,mBAAL;AAHA,QAAZ;AAKA,YAAK1E,aAAL,CAAmBoF,QAAnB,IAA+BlP,KAA/B;;AAEA,WAAIgQ,kBACD,UAAUzP,CAAV,EAAaoC,IAAb,EAAmB;AAClB,gBAAO,UAAUzC,CAAV,EAAaC,CAAb,EAAgB;AACrB,eAAI8Z,QAAQtX,KAAKzC,CAAL,EAAQK,CAAR,CAAZ;AAAA,eACE2Z,QAAQvX,KAAKxC,CAAL,EAAQI,CAAR,CADV;AAEA,eAAI0Z,UAAUC,KAAd,EAAqB;AACnB,iBAAIjc,SAASgc,KAAT,EAAgBC,KAAhB,EAAuB,KAAvB,CAAJ,EAAmC,OAAO,CAAC,CAAR;AACnC,iBAAIzb,SAASwb,KAAT,EAAgBC,KAAhB,EAAuB,KAAvB,CAAJ,EAAmC,OAAO,CAAP;AACpC;AACD,kBAAO,CAAP;AACD,UARD;AASD,QAVD,CAUGhL,QAVH,EAUa,KAAKvM,IAVlB,CADF;;AAaA3C,aAAM8R,MAAN,CAAa1C,IAAb,CAAkBY,eAAlB;AACAhQ,aAAM2N,KAAN,GAAc,KAAd;;AAEA,YAAKA,KAAL,GAAa,IAAb,CArC4D,CAqCzC;AACpB,MAtCD;;AAwCAxG,gBAAWzK,SAAX,CAAqByd,uBAArB,GAA+C,UAAUjL,QAAV,EAAoB;AACjE,WAAIzR,GAAJ;AAAA,WAAS2c,UAAU,KAAKtQ,aAAL,CAAmBoF,QAAnB,EAA6B4C,MAAhD;AACA,WAAIxO,SAAS,EAAb;;AAEA,YAAK7F,MAAM,CAAX,EAAcA,MAAM2c,QAAQxc,MAA5B,EAAoCH,KAApC,EAA2C;AACzC6F,mBAAU,OAAO7F,GAAP,GAAa,IAAb,GAAoB,KAAKkF,IAAL,CAAUyX,QAAQ3c,GAAR,CAAV,EAAwByR,QAAxB,CAA9B;AACD;;AAED,cAAO5L,MAAP;AACD,MATD;;AAWA6D,gBAAWzK,SAAX,CAAqBwN,iBAArB,GAAyC,UAAUjL,KAAV,EAAiB;AACxD,WAAIe,QAAQ,KAAKyV,WAAL,CAAiBC,MAAjB,CAAwBzW,KAAxB,CAAZ;AACA,WAAI,CAACe,KAAL,EAAY;AACV;AACA,aAAI,KAAKiK,WAAL,CAAiB5M,OAAjB,CAAyB4B,KAAzB,KAAmC,CAAC,CAAxC,EAA2C;AACzC,gBAAKgL,WAAL,CAAiBjM,IAAjB,CAAsBiB,KAAtB;AACD;AACF;;AAED;AACA,YAAKwW,WAAL,CAAiBC,MAAjB,CAAwBzW,KAAxB,IAAiCe,QAAQ,IAAI+V,WAAJ,CAAgB9W,KAAhB,CAAzC;AACA,YAAK0D,IAAL,CAAUwB,OAAV,CAAkB,UAAU4S,GAAV,EAAe;AAC/B/W,eAAMqa,GAAN,CAAUtD,GAAV;AACD,QAFD;AAGA,cAAO/W,KAAP;AACD,MAfD;;AAiBA;;;AAGAmH,gBAAWzK,SAAX,CAAqBqd,gBAArB,GAAwC,UAAUC,KAAV,EAAiB;AACvD,WAAI3R,GAAJ;AAAA,WAASiS,WAAW,KAAKxQ,aAAzB;AACA,YAAKzB,GAAL,IAAYiS,QAAZ,EAAsB;AACpB,aAAI9d,eAAemD,IAAf,CAAoB2a,QAApB,EAA8BjS,GAA9B,CAAJ,EAAwC;AACtC,gBAAKoJ,WAAL,CAAiBpJ,GAAjB,EAAsB2R,KAAtB;AACD;AACF;AACF,MAPD;;AASA7S,gBAAWzK,SAAX,CAAqB6d,sBAArB,GAA8C,YAAY;AACxD,WAAIlS,GAAJ;AAAA,WAASiS,WAAW,KAAKxQ,aAAzB;AACA,YAAKzB,GAAL,IAAYiS,QAAZ,EAAsB;AACpB,aAAI9d,eAAemD,IAAf,CAAoB2a,QAApB,EAA8BjS,GAA9B,CAAJ,EAAwC;AACtCiS,oBAASjS,GAAT,EAAcsF,KAAd,GAAsB,IAAtB;AACD;AACF;AACF,MAPD;;AASAxG,gBAAWzK,SAAX,CAAqB8d,oBAArB,GAA4C,UAAUxa,KAAV,EAAiB;AAC3D,WAAI,KAAK8J,aAAL,CAAmB9J,KAAnB,CAAJ,EACE,KAAK8J,aAAL,CAAmB9J,KAAnB,EAA0B2N,KAA1B,GAAkC,IAAlC;AACH,MAHD;;AAKA;;;;;;AAMAxG,gBAAWzK,SAAX,CAAqBqL,KAArB,GAA6B,UAAUiJ,KAAV,EAAiB;AAC5C,WAAI,CAACA,KAAL,EAAY;AACV,gBAAO,KAAKrO,IAAL,CAAU/E,MAAjB;AACD;;AAED,cAAO,KAAKyT,KAAL,GAAapD,IAAb,CAAkB+C,KAAlB,EAAyBlG,YAAzB,CAAsClN,MAA7C;AACD,MAND;;AAQA;;;AAGAuJ,gBAAWzK,SAAX,CAAqBsN,QAArB,GAAgC,YAAY;AAC1C,WAAI7K,MAAM,KAAKwD,IAAL,CAAU/E,MAApB;AAAA,WACEsB,IAAI,CADN;;AAGA,YAAK2K,OAAL,GAAe,EAAf;AACA,YAAK3K,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,KAAK,CAAtB,EAAyB;AACvB,cAAK2K,OAAL,CAAa7L,IAAb,CAAkB,KAAK2E,IAAL,CAAUzD,CAAV,EAAaub,KAA/B;AACD;AACF,MARD;;AAUA;;;;;;;;;;;AAWAtT,gBAAWzK,SAAX,CAAqB4N,cAArB,GAAsC,UAAU/C,IAAV,EAAgB1C,OAAhB,EAAyB;AAC7D,WAAIwF,KAAK,IAAI4I,WAAJ,CAAgB,IAAhB,EAAsB1L,IAAtB,EAA4B1C,OAA5B,CAAT;AACA,YAAKsF,YAAL,CAAkBnM,IAAlB,CAAuBqM,EAAvB;;AAEA,cAAOA,EAAP;AACD,MALD;;AAOA;;;;;AAKAlD,gBAAWzK,SAAX,CAAqBge,iBAArB,GAAyC,UAAUnT,IAAV,EAAgB;AACvD,YAAK,IAAI9J,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,aAAI,KAAK0M,YAAL,CAAkB1M,GAAlB,EAAuB8J,IAAvB,KAAgCA,IAApC,EAA0C;AACxC,gBAAK4C,YAAL,CAAkBzF,MAAlB,CAAyBjH,GAAzB,EAA8B,CAA9B;AACD;AACF;AACF,MAND;;AAQA;;;;;;AAMA0J,gBAAWzK,SAAX,CAAqBie,cAArB,GAAsC,UAAUpT,IAAV,EAAgB;AACpD,YAAK,IAAI9J,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,aAAI,KAAK0M,YAAL,CAAkB1M,GAAlB,EAAuB8J,IAAvB,KAAgCA,IAApC,EAA0C;AACxC,kBAAO,KAAK4C,YAAL,CAAkB1M,GAAlB,CAAP;AACD;AACF;;AAED,cAAO,IAAP;AACD,MARD;;AAUA;;;;;;;AAOA0J,gBAAWzK,SAAX,CAAqBke,aAArB,GAAqC,UAAUC,cAAV,EAA0BvI,cAA1B,EAA0C;AAC7E,WAAIwI,UAAU,KAAK5M,KAAL,CAAW2M,cAAX,CAAd;AAAA,WACE3b,IAAI,CADN;AAAA,WAEE6X,GAFF;AAGA,WAAI;AACF,cAAK7X,CAAL,EAAQA,IAAI4b,QAAQld,MAApB,EAA4BsB,GAA5B,EAAiC;AAC/B6X,iBAAMzE,eAAewI,QAAQ5b,CAAR,CAAf,CAAN;AACA,gBAAK2Q,MAAL,CAAYkH,GAAZ;AACD;AAEF,QAND,CAME,OAAO1K,GAAP,EAAY;AACZ,cAAK+H,QAAL;AACA,cAAK/M,OAAL,CAAakR,KAAb,CAAmBlM,IAAI0O,OAAvB;AACD;AACF,MAdD;;AAgBA;;;;;;AAMA5T,gBAAWzK,SAAX,CAAqB0K,MAArB,GAA8B,UAAU4T,GAAV,EAAe;AAC3C,WAAI,CAAClb,MAAMC,OAAN,CAAcib,GAAd,CAAL,EAAyB;AACvB,gBAAO,KAAKC,SAAL,CAAeD,GAAf,CAAP;AACD;;AAED;AACA,WAAIjE,GAAJ;AACA,WAAI+D,UAAU,EAAd;;AAEA,YAAKzW,IAAL,CAAU,YAAV,EAAwB2W,GAAxB;AACA,YAAK,IAAI9b,IAAI,CAAR,EAAWC,MAAM6b,IAAIpd,MAA1B,EAAkCsB,IAAIC,GAAtC,EAA2CD,GAA3C,EAAgD;AAC9C6X,eAAM,KAAKkE,SAAL,CAAeD,IAAI9b,CAAJ,CAAf,EAAuB,IAAvB,CAAN;AACA,aAAI,CAAC6X,GAAL,EAAU;AACR,kBAAOxY,SAAP;AACD;AACDuc,iBAAQ9c,IAAR,CAAa+Y,GAAb;AACD;AACD,YAAK1S,IAAL,CAAU,QAAV,EAAoB2W,GAApB;AACA,cAAOF,QAAQld,MAAR,KAAmB,CAAnB,GAAuBkd,QAAQ,CAAR,CAAvB,GAAoCA,OAA3C;AACD,MAnBD;;AAqBA;;;;;;;AAOA3T,gBAAWzK,SAAX,CAAqBue,SAArB,GAAiC,UAAUD,GAAV,EAAeE,UAAf,EAA2B;AAC1D,WAAI7O,MAAM,IAAV;AACA,WAAI8O,SAAJ;;AAEA,WAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AAC3B3O,eAAM,IAAIiB,SAAJ,CAAc,gCAAd,CAAN;AACD,QAFD,MAEO,IAAI0N,QAAQ,IAAZ,EAAkB;AACvB3O,eAAM,IAAIiB,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED,WAAIjB,QAAQ,IAAZ,EAAkB;AAChB,cAAKhI,IAAL,CAAU,OAAV,EAAmBgI,GAAnB;AACA,eAAMA,GAAN;AACD;;AAED;AACA,WAAI0K,MAAM,KAAKtN,YAAL,GAAoB/G,MAAMsY,GAAN,EAAW,KAAKnY,WAAhB,CAApB,GAAmDmY,GAA7D;;AAEA,WAAI,OAAOjE,IAAIG,IAAX,KAAoB,WAAxB,EAAqC;AACnCH,aAAIG,IAAJ,GAAW;AACTG,qBAAU,CADD;AAETF,oBAAS;AAFA,UAAX;AAID;;AAED;AACAgE,mBAAY,KAAK1R,YAAL,GAAoB/G,MAAMqU,GAAN,EAAW,KAAKlU,WAAhB,CAApB,GAAmDkU,GAA/D;;AAEA;AACA,WAAI,CAACmE,UAAL,EAAiB;AACf,cAAK7W,IAAL,CAAU,YAAV,EAAwB0S,GAAxB;AACD;AACD,WAAI,CAAC,KAAKL,GAAL,CAASK,GAAT,CAAL,EAAoB;AAClB,gBAAOxY,SAAP;AACD;;AAED,YAAKoL,qBAAL,CAA2BwR,SAA3B;AACA,WAAI,CAACD,UAAL,EAAiB;AACf,cAAK7W,IAAL,CAAU,QAAV,EAAoB8W,SAApB;AACD;AACD,cAAOA,SAAP;AACD,MAzCD;;AA2CA;;;;AAIAhU,gBAAWzK,SAAX,CAAqB0e,KAArB,GAA6B,YAAY;AACvC,YAAKzY,IAAL,GAAY,EAAZ;AACA,YAAKkH,OAAL,GAAe,EAAf;AACA,YAAKC,aAAL,GAAqB,EAArB;AACA,YAAK8L,WAAL,GAAmB,IAAnB;AACA,YAAKC,iBAAL,GAAyB,IAAzB;AACA,YAAKC,UAAL,GAAkB,IAAlB;AACA,YAAKlM,KAAL,GAAa,CAAb;AACA,YAAKO,YAAL,GAAoB,EAApB;AACA,YAAKwD,KAAL,GAAa,IAAb;AACD,MAVD;;AAYA;;;;;AAKAxG,gBAAWzK,SAAX,CAAqBmT,MAArB,GAA8B,UAAUmL,GAAV,EAAe;AAC3C,WAAIlb,MAAMC,OAAN,CAAcib,GAAd,CAAJ,EAAwB;AACtB,aAAI7I,IAAI,CAAR;AAAA,aACEhT,MAAM6b,IAAIpd,MADZ;AAEA,cAAKuU,CAAL,EAAQA,IAAIhT,GAAZ,EAAiBgT,KAAK,CAAtB,EAAyB;AACvB,gBAAKtC,MAAL,CAAYmL,IAAI7I,CAAJ,CAAZ;AACD;AACD;AACD;;AAED;AACA,WAAI,CAAC3V,eAAemD,IAAf,CAAoBqb,GAApB,EAAyB,OAAzB,CAAL,EAAwC;AACtC,eAAM,IAAIvT,KAAJ,CAAU,mGAAV,CAAN;AACD;AACD,WAAI;AACF,cAAKyM,gBAAL;AACA,aAAImH,MAAM,KAAKC,GAAL,CAASN,IAAIP,KAAb,EAAoB,IAApB,CAAV;AAAA,aACEc,WADF;AAAA,aACiB;AACfC,oBAFF;AAAA,aAEe;AACbC,iBAHF;AAAA,aAIEvX,OAAO,IAJT;;AAMAqX,uBAAcF,IAAI,CAAJ,CAAd,CARE,CAQoB;AACtBI,oBAAWJ,IAAI,CAAJ,CAAX,CATE,CASiB;;AAEnB;AACAG,uBAAc,KAAK/R,YAAL,GAAoB/G,MAAMsY,GAAN,EAAW,KAAKnY,WAAhB,CAApB,GAAmDmY,GAAjE;;AAEA,aAAI,CAACK,GAAL,EAAU;AACR,iBAAM,IAAI5T,KAAJ,CAAU,gDAAV,CAAN;AACD;AACD,cAAKpD,IAAL,CAAU,YAAV,EAAwB2W,GAAxB;;AAEAve,gBAAOyG,IAAP,CAAY,KAAKuS,WAAL,CAAiBC,MAA7B,EAAqCvR,OAArC,CAA6C,UAAUkE,GAAV,EAAe;AAC1DnE,gBAAKuR,WAAL,CAAiBC,MAAjB,CAAwBrN,GAAxB,EAA6BwH,MAA7B,CAAoC0L,WAApC,EAAiDC,WAAjD;AACD,UAFD;;AAIA;AACA,cAAK7Y,IAAL,CAAU8Y,QAAV,IAAsBD,WAAtB;;AAEA,aAAIA,gBAAgBR,GAApB,EAAyB;AACvB,gBAAKrR,qBAAL,CAA2BqR,GAA3B;AACD;;AAED;AACA;AACA,cAAK,IAAIvd,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,gBAAK0M,YAAL,CAAkB1M,GAAlB,EAAuBuX,gBAAvB,CAAwCyG,QAAxC,EAAkD,KAAlD;AACD;;AAED,aAAIpT,GAAJ;AACA,aAAI,KAAKiB,qBAAT,EAAgC;AAC9B;AACA,eAAIgR,WAAW,KAAKxQ,aAApB;AACA,gBAAKzB,GAAL,IAAYiS,QAAZ,EAAsB;AACpB,kBAAKoB,yBAAL,CAA+BD,QAA/B,EAAyCpT,GAAzC;AACD;AACF,UAND,MAOK;AACH,gBAAKkS,sBAAL;AACD;;AAED,cAAK1Q,OAAL,CAAa4R,QAAb,IAAyBD,YAAYf,KAArC;AACA;;AAEA,cAAKtG,MAAL;AACA,cAAKxG,KAAL,GAAa,IAAb,CApDE,CAoDiB;;AAEnB,cAAKtJ,IAAL,CAAU,QAAV,EAAoB2W,GAApB,EAAyB,KAAKvR,YAAL,GAAoB/G,MAAM6Y,WAAN,EAAmB,KAAK1Y,WAAxB,CAApB,GAA2D,IAApF;AACA,gBAAOmY,GAAP;AACD,QAxDD,CAwDE,OAAO3O,GAAP,EAAY;AACZ,cAAK+H,QAAL;AACA,cAAK/M,OAAL,CAAakR,KAAb,CAAmBlM,IAAI0O,OAAvB;AACA,cAAK1W,IAAL,CAAU,OAAV,EAAmBgI,GAAnB;AACA,eAAOA,GAAP,CAJY,CAIC;AACd;AACF,MA5ED;;AA8EA;;;AAGAlF,gBAAWzK,SAAX,CAAqBga,GAArB,GAA2B,UAAUK,GAAV,EAAe;AACxC;AACA,WAAI,aAAa,OAAOA,GAAxB,EAA6B;AAC3B,eAAM,IAAIzJ,SAAJ,CAAc,0CAAd,CAAN;AACD;AACD;AACA;AACA;AACA,WAAI,OAAQyJ,IAAI0D,KAAZ,KAAuB,WAA3B,EAAwC;AACtC,eAAM,IAAIhT,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED;;;AAGA,WAAI;AACF,cAAKyM,gBAAL;AACA,cAAKtK,KAAL;;AAEA,aAAI+R,MAAM,KAAK/R,KAAX,CAAJ,EAAuB;AACrB,gBAAKA,KAAL,GAAc,KAAKjH,IAAL,CAAU,KAAKA,IAAL,CAAU/E,MAAV,GAAmB,CAA7B,EAAgC6c,KAAhC,GAAwC,CAAtD;AACD;;AAED1D,aAAI0D,KAAJ,GAAY,KAAK7Q,KAAjB;AACAmN,aAAIG,IAAJ,CAAS0E,OAAT,GAAmB,CAAnB;;AAEA,aAAIvT,GAAJ;AAAA,aAASwT,eAAe,KAAKpG,WAAL,CAAiBC,MAAzC;AACA,cAAKrN,GAAL,IAAYwT,YAAZ,EAA0B;AACxB,eAAIrf,eAAemD,IAAf,CAAoBkc,YAApB,EAAkCxT,GAAlC,CAAJ,EAA4C;AAC1CwT,0BAAaxT,GAAb,EAAkBgS,GAAlB,CAAsBtD,GAAtB;AACD;AACF;;AAED;AACA,cAAKlN,OAAL,CAAa7L,IAAb,CAAkB+Y,IAAI0D,KAAtB;;AAEA;AACA,cAAK9X,IAAL,CAAU3E,IAAV,CAAe+Y,GAAf;;AAEA,aAAI+E,WAAW,KAAKnZ,IAAL,CAAU/E,MAAV,GAAmB,CAAlC;;AAEA;AACA;AACA,aAAIme,QAAQ,KAAK5R,YAAL,CAAkBvM,MAA9B;AACA,cAAK,IAAIsB,IAAI,CAAb,EAAgBA,IAAI6c,KAApB,EAA2B7c,GAA3B,EAAgC;AAC9B,gBAAKiL,YAAL,CAAkBjL,CAAlB,EAAqB8V,gBAArB,CAAsC8G,QAAtC,EAAgD,IAAhD;AACD;;AAED,aAAI,KAAKxS,qBAAT,EAAgC;AAC9B;AACA,eAAIgR,WAAW,KAAKxQ,aAApB;AACA,gBAAKzB,GAAL,IAAYiS,QAAZ,EAAsB;AACpB,kBAAK0B,yBAAL,CAA+BF,QAA/B,EAAyCzT,GAAzC;AACD;AACF,UAND,MAOK;AACH,gBAAKkS,sBAAL;AACD;;AAED,cAAKpG,MAAL;AACA,cAAKxG,KAAL,GAAa,IAAb,CA7CE,CA6CiB;;AAEnB,gBAAQ,KAAKlE,YAAN,GAAuB/G,MAAMqU,GAAN,EAAW,KAAKlU,WAAhB,CAAvB,GAAwDkU,GAA/D;AACD,QAhDD,CAgDE,OAAO1K,GAAP,EAAY;AACZ,cAAK+H,QAAL;AACA,cAAK/M,OAAL,CAAakR,KAAb,CAAmBlM,IAAI0O,OAAvB;AACA,cAAK1W,IAAL,CAAU,OAAV,EAAmBgI,GAAnB;AACA,eAAOA,GAAP,CAJY,CAIC;AACd;AACF,MArED;;AAuEA;;;;;AAKAlF,gBAAWzK,SAAX,CAAqBuf,WAArB,GAAmC,UAAUjL,KAAV,EAAiB;AAClD,WAAIkL,IAAJ;AACA,WAAI,OAAOlL,KAAP,KAAiB,UAArB,EAAiC;AAC/BkL,gBAAO,KAAKvZ,IAAL,CAAUoP,MAAV,CAAiBf,KAAjB,CAAP;AACD,QAFD,MAEO;AACLkL,gBAAO,IAAIrO,SAAJ,CAAc,IAAd,EAAoB;AACzBC,qBAAUkD;AADe,UAApB,CAAP;AAGD;AACD,YAAKlB,MAAL,CAAYoM,IAAZ;AACD,MAVD;;AAYA/U,gBAAWzK,SAAX,CAAqByf,cAArB,GAAsC,YAAY;AAChD,YAAKrM,MAAL,CAAY,KAAKnN,IAAL,CAAU+L,KAAV,EAAZ;AACD,MAFD;;AAIA;;;;;AAKAvH,gBAAWzK,SAAX,CAAqBoT,MAArB,GAA8B,UAAUkL,GAAV,EAAe;AAC3C,WAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,eAAM,KAAKM,GAAL,CAASN,GAAT,CAAN;AACD;;AAED,WAAI,aAAa,OAAOA,GAAxB,EAA6B;AAC3B,eAAM,IAAIvT,KAAJ,CAAU,4BAAV,CAAN;AACD;AACD,WAAI3H,MAAMC,OAAN,CAAcib,GAAd,CAAJ,EAAwB;AACtB,aAAI7I,IAAI,CAAR;AAAA,aACEhT,MAAM6b,IAAIpd,MADZ;AAEA,cAAKuU,CAAL,EAAQA,IAAIhT,GAAZ,EAAiBgT,KAAK,CAAtB,EAAyB;AACvB,gBAAKrC,MAAL,CAAYkL,IAAI7I,CAAJ,CAAZ;AACD;AACD;AACD;;AAED,WAAI,CAAC3V,eAAemD,IAAf,CAAoBqb,GAApB,EAAyB,OAAzB,CAAL,EAAwC;AACtC,eAAM,IAAIvT,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,WAAI;AACF,cAAKyM,gBAAL;AACA,aAAImH,MAAM,KAAKC,GAAL,CAASN,IAAIP,KAAb,EAAoB,IAApB,CAAV;;AACE;AACAgB,oBAAWJ,IAAI,CAAJ,CAFb;AAGA,aAAInX,OAAO,IAAX;AACAzH,gBAAOyG,IAAP,CAAY,KAAKuS,WAAL,CAAiBC,MAA7B,EAAqCvR,OAArC,CAA6C,UAAUkE,GAAV,EAAe;AAC1D,eAAI2S,IAAI3S,GAAJ,MAAa,IAAb,IAAqB,OAAO2S,IAAI3S,GAAJ,CAAP,KAAoB,WAA7C,EAA0D;AACxDnE,kBAAKuR,WAAL,CAAiBC,MAAjB,CAAwBrN,GAAxB,EAA6ByH,MAA7B,CAAoCkL,IAAI3S,GAAJ,CAApC;AACD;AACF,UAJD;AAKA;AACA;AACA,cAAK,IAAI5K,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,gBAAK0M,YAAL,CAAkB1M,GAAlB,EAAuB+X,cAAvB,CAAsCiG,QAAtC;AACD;;AAED,aAAI,KAAKnS,qBAAT,EAAgC;AAC9B;AACA,eAAIjB,GAAJ;AAAA,eAASiS,WAAW,KAAKxQ,aAAzB;AACA,gBAAKzB,GAAL,IAAYiS,QAAZ,EAAsB;AACpB,kBAAK8B,yBAAL,CAA+BX,QAA/B,EAAyCpT,GAAzC;AACD;AACF,UAND,MAOK;AACH,gBAAKkS,sBAAL;AACD;;AAED,cAAK5X,IAAL,CAAU+B,MAAV,CAAiB+W,QAAjB,EAA2B,CAA3B;AACA,cAAK5E,wBAAL,CAA8BmE,GAA9B;;AAEA;AACA,cAAKnR,OAAL,CAAanF,MAAb,CAAoB+W,QAApB,EAA8B,CAA9B;;AAEA,cAAKtH,MAAL;AACA,cAAKxG,KAAL,GAAa,IAAb,CAnCE,CAmCiB;AACnB,cAAKtJ,IAAL,CAAU,QAAV,EAAoBgX,IAAI,CAAJ,CAApB;AACA,gBAAOL,IAAIP,KAAX;AACA,gBAAOO,IAAI9D,IAAX;AACA,gBAAO8D,GAAP;AAED,QAzCD,CAyCE,OAAO3O,GAAP,EAAY;AACZ,cAAK+H,QAAL;AACA,cAAK/M,OAAL,CAAakR,KAAb,CAAmBlM,IAAI0O,OAAvB;AACA,cAAK1W,IAAL,CAAU,OAAV,EAAmBgI,GAAnB;AACA,gBAAO,IAAP;AACD;AACF,MApED;;AAsEA;;;;AAIA;;;;;;;;AAQAlF,gBAAWzK,SAAX,CAAqB4e,GAArB,GAA2B,UAAUe,EAAV,EAAcC,cAAd,EAA8B;AACvD,WAAIC,SAASD,kBAAkB,KAA/B;AAAA,WACE3Z,OAAO,KAAKkH,OADd;AAAA,WAEE2S,MAAM7Z,KAAK/E,MAAL,GAAc,CAFtB;AAAA,WAGE6e,MAAM,CAHR;AAAA,WAIEC,MAAOD,MAAMD,GAAP,IAAe,CAJvB;;AAMAH,YAAK,OAAOA,EAAP,KAAc,QAAd,GAAyBA,EAAzB,GAA8B/V,SAAS+V,EAAT,EAAa,EAAb,CAAnC;;AAEA,WAAIV,MAAMU,EAAN,CAAJ,EAAe;AACb,eAAM,IAAI/O,SAAJ,CAAc,6BAAd,CAAN;AACD;;AAED,cAAO3K,KAAK8Z,GAAL,IAAY9Z,KAAK6Z,GAAL,CAAnB,EAA8B;AAC5BE,eAAOD,MAAMD,GAAP,IAAe,CAArB;;AAEA,aAAI7Z,KAAK+Z,GAAL,IAAYL,EAAhB,EAAoB;AAClBI,iBAAMC,MAAM,CAAZ;AACD,UAFD,MAEO;AACLF,iBAAME,GAAN;AACD;AACF;;AAED,WAAIF,QAAQC,GAAR,IAAe9Z,KAAK8Z,GAAL,MAAcJ,EAAjC,EAAqC;AACnC,aAAIE,MAAJ,EAAY;AACV,kBAAO,CAAC,KAAK5Z,IAAL,CAAU8Z,GAAV,CAAD,EAAiBA,GAAjB,CAAP;AACD;AACD,gBAAO,KAAK9Z,IAAL,CAAU8Z,GAAV,CAAP;AACD;AACD,cAAO,IAAP;AAED,MA/BD;;AAiCA;;;;;;;AAOAtV,gBAAWzK,SAAX,CAAqBigB,sBAArB,GAA8C,UAASC,YAAT,EAAuBC,eAAvB,EAAwC;AACpF,WAAIxc,MAAM,KAAKsC,IAAL,CAAUia,YAAV,EAAwBC,eAAxB,CAAV;AACA,WAAI7c,QAAQ,KAAK8J,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAAhD;;AAEA;AACA;AACA;AACA,WAAIgL,QAAQ,KAAKjL,cAAL,CAAoB,KAApB,EAA2BgL,eAA3B,EAA4Cxc,GAA5C,CAAZ;;AAEA,WAAIyc,MAAM,CAAN,MAAa,CAAb,IAAkBA,MAAM,CAAN,MAAa,CAAC,CAApC,EAAuC;AACrC;AACA,gBAAO,IAAP;AACD;;AAED,WAAIL,MAAMK,MAAM,CAAN,CAAV;AACA,WAAIN,MAAMM,MAAM,CAAN,CAAV;;AAEA;AACA;AACA;AACA,YAAI,IAAIrf,MAAMgf,GAAd,EAAmBhf,OAAO+e,GAA1B,EAA+B/e,KAA/B,EAAsC;AACpC,aAAIuC,MAAMvC,GAAN,MAAemf,YAAnB,EAAiC,OAAOnf,GAAP;AAClC;;AAED;AACA,cAAO,IAAP;AACD,MA1BD;;AA4BA;;;;;AAKA0J,gBAAWzK,SAAX,CAAqBsf,yBAArB,GAAiD,UAASY,YAAT,EAAuBC,eAAvB,EAAwC;AACvF,WAAI7c,QAAQ,KAAK8J,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAAhD;AACA,WAAIzR,MAAM,KAAKsC,IAAL,CAAUia,YAAV,EAAwBC,eAAxB,CAAV;AACA;AACA,WAAIE,SAAS,KAAKC,mBAAL,CAAyBH,eAAzB,EAA0Cxc,GAA1C,CAAb;;AAEA;AACA;AACA,YAAKyJ,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAApC,CAA2CpN,MAA3C,CAAkDqY,MAAlD,EAA0D,CAA1D,EAA6DH,YAA7D;AACD,MATD;;AAWA;;;;;AAKAzV,gBAAWzK,SAAX,CAAqBgf,yBAArB,GAAiD,UAASkB,YAAT,EAAuBC,eAAvB,EAAwC;AACvF;AACA;AACA,WAAIE,MAAJ;AAAA,WACE/c,QAAQ,KAAK8J,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAD9C;AAAA,WAEE3S,MAAIa,MAAMpC,MAFZ;;AAIA,YAAImf,SAAO,CAAX,EAAcA,SAAS5d,GAAvB,EAA4B4d,QAA5B,EAAsC;AACpC,aAAI/c,MAAM+c,MAAN,MAAkBH,YAAtB,EAAoC;AACrC;;AAED;AACA,YAAK9S,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAApC,CAA2CpN,MAA3C,CAAkDqY,MAAlD,EAA0D,CAA1D;;AAEA;AACA,YAAKf,yBAAL,CAA+BY,YAA/B,EAA6CC,eAA7C;AACD,MAhBD;;AAkBA;;;;;AAKA1V,gBAAWzK,SAAX,CAAqB0f,yBAArB,GAAiD,UAASQ,YAAT,EAAuBC,eAAvB,EAAwCI,oBAAxC,EAA8D;AAC7G,WAAIF,SAAS,KAAKJ,sBAAL,CAA4BC,YAA5B,EAA0CC,eAA1C,CAAb;AACA,WAAI7c,QAAQ,KAAK8J,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAAhD;AACA,WAAI3S,GAAJ,EACE1B,GADF;;AAGA,WAAIsf,WAAW,IAAf,EAAqB;AACnB;AACA,gBAAO,IAAP;AACD;;AAED;AACA,YAAKjT,aAAL,CAAmB+S,eAAnB,EAAoC/K,MAApC,CAA2CpN,MAA3C,CAAkDqY,MAAlD,EAA0D,CAA1D;;AAEA;AACA;AACA,WAAIE,yBAAyB,IAA7B,EAAmC;AACjC;AACD;;AAED;AACA;AACA9d,aAAMa,MAAMpC,MAAZ;AACA,YAAKH,MAAM,CAAX,EAAcA,MAAM0B,GAApB,EAAyB1B,KAAzB,EAAgC;AAC9B,aAAIuC,MAAMvC,GAAN,IAAamf,YAAjB,EAA+B;AAC7B5c,iBAAMvC,GAAN;AACD;AACF;AACF,MA5BD;;AA8BA;;;;AAIA0J,gBAAWzK,SAAX,CAAqBsgB,mBAArB,GAA2C,UAAUjgB,IAAV,EAAgBsD,GAAhB,EAAqB;AAC9D,WAAIkS,MAAM,KAAK5P,IAAf;AACA,WAAI3C,QAAQ,KAAK8J,aAAL,CAAmB/M,IAAnB,EAAyB+U,MAArC;AACA,WAAI2K,MAAM,CAAV;AACA,WAAID,MAAMxc,MAAMpC,MAAN,GAAe,CAAzB;AACA,WAAI8e,MAAM,CAAV;;AAEA,WAAI1c,MAAMpC,MAAN,KAAiB,CAArB,EAAwB;AACtB,gBAAO,CAAP;AACD;;AAED,WAAIsf,SAAS3K,IAAIvS,MAAMyc,GAAN,CAAJ,EAAgB1f,IAAhB,CAAb;AACA,WAAIogB,SAAS5K,IAAIvS,MAAMwc,GAAN,CAAJ,EAAgBzf,IAAhB,CAAb;;AAEA;AACA,cAAO0f,MAAMD,GAAb,EAAkB;AAChBE,eAAOD,MAAMD,GAAP,IAAe,CAArB;;AAEA,aAAIve,SAASsU,IAAIvS,MAAM0c,GAAN,CAAJ,EAAgB3f,IAAhB,CAAT,EAAgCsD,GAAhC,EAAqC,KAArC,CAAJ,EAAiD;AAC/Coc,iBAAMC,MAAM,CAAZ;AACD,UAFD,MAEO;AACLF,iBAAME,GAAN;AACD;AACF;;AAED,WAAIU,SAASX,GAAb;;AAEA,WAAIxe,SAASsU,IAAIvS,MAAMod,MAAN,CAAJ,EAAmBrgB,IAAnB,CAAT,EAAmCsD,GAAnC,EAAwC,KAAxC,CAAJ,EAAoD;AAClD,gBAAO+c,SAAO,CAAd;AACD,QAFD,MAGK;AACH,gBAAOA,MAAP;AACD;AACF,MAjCD;;AAmCA;;;;;;;;;;AAUAjW,gBAAWzK,SAAX,CAAqBmV,cAArB,GAAsC,UAAUvR,EAAV,EAAcvD,IAAd,EAAoBsD,GAApB,EAAyB;AAC7D,WAAIkS,MAAM,KAAK5P,IAAf;AACA,WAAI3C,QAAQ,KAAK8J,aAAL,CAAmB/M,IAAnB,EAAyB+U,MAArC;AACA,WAAI2K,MAAM,CAAV;AACA,WAAID,MAAMxc,MAAMpC,MAAN,GAAe,CAAzB;AACA,WAAI8e,MAAM,CAAV;;AAEA;AACA,WAAInK,IAAI3U,MAAJ,KAAe,CAAnB,EAAsB;AACpB,gBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;;AAED,WAAIsf,SAAS3K,IAAIvS,MAAMyc,GAAN,CAAJ,EAAgB1f,IAAhB,CAAb;AACA,WAAIogB,SAAS5K,IAAIvS,MAAMwc,GAAN,CAAJ,EAAgBzf,IAAhB,CAAb;;AAEA;AACA,eAAQuD,EAAR;AACA,cAAK,KAAL;AACA,cAAK,MAAL;AACE,eAAIrC,SAASoC,GAAT,EAAc6c,MAAd,EAAsB,KAAtB,KAAgCze,SAAS4B,GAAT,EAAc8c,MAAd,EAAsB,KAAtB,CAApC,EAAkE;AAChE,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD;AACF,cAAK,OAAL;AACE,eAAIlf,SAASoC,GAAT,EAAc6c,MAAd,EAAsB,KAAtB,KAAgCze,SAAS4B,GAAT,EAAc8c,MAAd,EAAsB,KAAtB,CAApC,EAAkE;AAChE,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD;AACF,cAAK,KAAL;AACE,eAAI1e,SAAS4B,GAAT,EAAc8c,MAAd,EAAsB,IAAtB,CAAJ,EAAiC;AAC/B,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD;AACF,cAAK,MAAL;AACE,eAAI1e,SAAS4B,GAAT,EAAc8c,MAAd,EAAsB,KAAtB,CAAJ,EAAkC;AAChC,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD;AACF,cAAK,KAAL;AACE,eAAIlf,SAASoC,GAAT,EAAc6c,MAAd,EAAsB,IAAtB,CAAJ,EAAiC;AAC/B,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD,eAAIjf,SAASkf,MAAT,EAAiB9c,GAAjB,EAAsB,KAAtB,CAAJ,EAAkC;AAChC,oBAAO,CAAC,CAAD,EAAIkS,IAAI3U,MAAJ,GAAa,CAAjB,CAAP;AACD;AACD;AACF,cAAK,MAAL;AACE,eAAIK,SAASoC,GAAT,EAAc6c,MAAd,EAAsB,KAAtB,CAAJ,EAAkC;AAChC,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD,eAAIjf,SAASkf,MAAT,EAAiB9c,GAAjB,EAAsB,IAAtB,CAAJ,EAAiC;AAC/B,oBAAO,CAAC,CAAD,EAAIkS,IAAI3U,MAAJ,GAAa,CAAjB,CAAP;AACD;AACD;AArCF;;AAwCA;AACA,cAAO6e,MAAMD,GAAb,EAAkB;AAChBE,eAAOD,MAAMD,GAAP,IAAe,CAArB;;AAEA,aAAIve,SAASsU,IAAIvS,MAAM0c,GAAN,CAAJ,EAAgB3f,IAAhB,CAAT,EAAgCsD,GAAhC,EAAqC,KAArC,CAAJ,EAAiD;AAC/Coc,iBAAMC,MAAM,CAAZ;AACD,UAFD,MAEO;AACLF,iBAAME,GAAN;AACD;AACF;;AAED,WAAIU,SAASX,GAAb;;AAEA;AACAD,aAAMxc,MAAMpC,MAAN,GAAe,CAArB;;AAEA;AACA,cAAO6e,MAAMD,GAAb,EAAkB;AAChBE,eAAOD,MAAMD,GAAP,IAAe,CAArB;;AAEA,aAAIve,SAASoC,GAAT,EAAckS,IAAIvS,MAAM0c,GAAN,CAAJ,EAAgB3f,IAAhB,CAAd,EAAqC,KAArC,CAAJ,EAAiD;AAC/Cyf,iBAAME,GAAN;AACD,UAFD,MAEO;AACLD,iBAAMC,MAAM,CAAZ;AACD;AACF;;AAED,WAAIW,SAASb,GAAb;;AAEA,WAAIc,OAAO/K,IAAIvS,MAAMod,MAAN,CAAJ,EAAmBrgB,IAAnB,CAAX;AACA,WAAIwgB,OAAOhL,IAAIvS,MAAMqd,MAAN,CAAJ,EAAmBtgB,IAAnB,CAAX;;AAEA,eAAQuD,EAAR;AACA,cAAK,KAAL;AACE,eAAIgd,SAASjd,GAAb,EAAkB;AAChB,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD,eAAIkd,SAASld,GAAb,EAAkB;AAChBgd;AACD;;AAED,kBAAO,CAACD,MAAD,EAASC,MAAT,CAAP;AACF,cAAK,OAAL;AACE,eAAIC,OAAOjd,GAAP,IAAcid,OAAOjd,GAAzB,EAA8B;AAC5B,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;AACD,eAAIkd,OAAOld,GAAP,IAAckd,OAAOld,GAAzB,EAA8B;AAC5Bgd;AACD;;AAED,kBAAO,CAACD,MAAD,EAASC,MAAT,CAAP;;AAGF,cAAK,KAAL;AACE,eAAIpf,SAASsf,IAAT,EAAeld,GAAf,EAAoB,IAApB,CAAJ,EAA+B;AAC7B,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;;AAED,kBAAO,CAACgd,MAAD,EAAS9K,IAAI3U,MAAJ,GAAa,CAAtB,CAAP;;AAEF,cAAK,MAAL;AACE,eAAIK,SAASqf,IAAT,EAAejd,GAAf,EAAoB,KAApB,CAAJ,EAAgC;AAC9B,oBAAO,CAAC,CAAD,EAAI,CAAC,CAAL,CAAP;AACD;;AAED,kBAAO,CAAC+c,MAAD,EAAS7K,IAAI3U,MAAJ,GAAa,CAAtB,CAAP;;AAEF,cAAK,KAAL;AACE,eAAIwf,WAAW,CAAX,IAAgBnf,SAASqf,IAAT,EAAejd,GAAf,EAAoB,KAApB,CAApB,EAAgD;AAC9C,oBAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;AACD,kBAAO,CAAC,CAAD,EAAI+c,SAAS,CAAb,CAAP;;AAEF,cAAK,MAAL;AACE,eAAIG,SAASld,GAAb,EAAkB;AAChBgd;AACD;;AAED,eAAIA,WAAW,CAAX,IAAgBpf,SAASsf,IAAT,EAAeld,GAAf,EAAoB,KAApB,CAApB,EAAgD;AAC9C,oBAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;AACD,kBAAO,CAAC,CAAD,EAAIgd,MAAJ,CAAP;;AAEF;AACE,kBAAO,CAAC,CAAD,EAAI9K,IAAI3U,MAAJ,GAAa,CAAjB,CAAP;AApDF;AAsDD,MA9ID;;AAgJA;;;;;;;AAOAuJ,gBAAWzK,SAAX,CAAqB8gB,EAArB,GAA0B,UAAUve,KAAV,EAAiBM,KAAjB,EAAwB;AAChD,WAAI2E,IAAJ;AACA,WAAI3E,UAAUhB,SAAd,EAAyB;AACvB2F,gBAAO,IAAP;AACA,gBAAO,UAAU3E,KAAV,EAAiB;AACtB,kBAAO2E,KAAKsZ,EAAL,CAAQve,KAAR,EAAeM,KAAf,CAAP;AACD,UAFD;AAGD;;AAED,WAAI+D,SAAS,KAAKmS,WAAL,CAAiBC,MAAjB,CAAwBzW,KAAxB,EAA+Bqc,GAA/B,CAAmC/b,KAAnC,CAAb;AACA,WAAI,CAAC,KAAKkK,YAAV,EAAwB;AACtB,gBAAOnG,MAAP;AACD,QAFD,MAEO;AACL,gBAAOZ,MAAMY,MAAN,EAAc,KAAKT,WAAnB,CAAP;AACD;AACF,MAfD;;AAiBA;;;;;;AAMAsE,gBAAWzK,SAAX,CAAqBsc,OAArB,GAA+B,UAAUhI,KAAV,EAAiB;AAC9CA,eAAQA,SAAS,EAAjB;;AAEA;AACA,WAAI1N,SAAS,IAAIuK,SAAJ,CAAc,IAAd,EAAoB;AAC/BC,mBAAUkD,KADqB;AAE/BhD,oBAAW;AAFoB,QAApB,CAAb;;AAKA,WAAIlO,MAAMC,OAAN,CAAcuD,MAAd,KAAyBA,OAAO1F,MAAP,KAAkB,CAA/C,EAAkD;AAChD,gBAAO,IAAP;AACD,QAFD,MAEO;AACL,aAAI,CAAC,KAAK6L,YAAV,EAAwB;AACtB,kBAAOnG,MAAP;AACD,UAFD,MAEO;AACL,kBAAOZ,MAAMY,MAAN,EAAc,KAAKT,WAAnB,CAAP;AACD;AACF;AACF,MAlBD;;AAoBA;;;;;;;;;AASAsE,gBAAWzK,SAAX,CAAqB2U,KAArB,GAA6B,UAAU7T,SAAV,EAAqBsR,UAArB,EAAiC;AAC5D,WAAIE,KAAK,IAAInB,SAAJ,CAAc,IAAd,CAAT;;AAEA,WAAI,OAAOrQ,SAAP,KAAqB,WAAzB,EAAsC;AACpC,gBAAOwR,EAAP;AACD;;AAED,cAAOA,GAAGxR,SAAH,CAAaA,SAAb,EAAwBsR,UAAxB,CAAP;AACD,MARD;;AAUA;;;;;;;;AAQA3H,gBAAWzK,SAAX,CAAqBuR,IAArB,GAA4B,UAAU+C,KAAV,EAAiB;AAC3C,WAAI,OAAQA,KAAR,KAAmB,WAAvB,EAAoC;AAClCA,iBAAQ,QAAR;AACD;;AAED,WAAI8J,UAAU,IAAIjN,SAAJ,CAAc,IAAd,EAAoB;AAChCC,mBAAUkD;AADsB,QAApB,CAAd;AAGA,WAAI,CAAC,KAAKvH,YAAV,EAAwB;AACtB,gBAAOqR,OAAP;AACD,QAFD,MAEO;AACL,gBAAO1X,iBAAiB0X,OAAjB,EAA0B,KAAKjY,WAA/B,CAAP;AACD;AACF,MAbD;;AAeA;;;;AAIAsE,gBAAWzK,SAAX,CAAqB+gB,gBAArB,GAAwC,UAAU1gB,IAAV,EAAgBwC,KAAhB,EAAuB;AAC7D,WAAIL,IAAI,KAAKyD,IAAL,CAAU/E,MAAlB;AAAA,WACEod,GADF;AAEA,cAAO9b,GAAP,EAAY;AACV,aAAI,KAAKyD,IAAL,CAAUzD,CAAV,EAAanC,IAAb,MAAuBwC,KAA3B,EAAkC;AAChCyb,iBAAM,KAAKrY,IAAL,CAAUzD,CAAV,CAAN;AACA,kBAAO8b,GAAP;AACD;AACF;AACD,cAAO,IAAP;AACD,MAVD;;AAYA;;;;AAIA;AACA7T,gBAAWzK,SAAX,CAAqBwX,gBAArB,GAAwC,YAAY;AAClD,WAAI,KAAK3K,aAAT,EAAwB;AACtB,cAAKuM,UAAL,GAAkBpT,MAAM,KAAKC,IAAX,EAAiB,KAAKE,WAAtB,CAAlB;AACA,cAAK+S,WAAL,GAAmB,KAAK/L,OAAxB;AACA,cAAKgM,iBAAL,GAAyB,KAAK/L,aAA9B;;AAEA;AACA,cAAK,IAAIrM,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,gBAAK0M,YAAL,CAAkB1M,GAAlB,EAAuByW,gBAAvB;AACD;AACF;AACF,MAXD;;AAaA;AACA/M,gBAAWzK,SAAX,CAAqByX,MAArB,GAA8B,YAAY;AACxC,WAAI,KAAK5K,aAAT,EAAwB;AACtB,cAAKuM,UAAL,GAAkB,IAAlB;AACA,cAAKF,WAAL,GAAmB,IAAnB;AACA,cAAKC,iBAAL,GAAyB,IAAzB;;AAEA;AACA,cAAK,IAAIpY,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,gBAAK0M,YAAL,CAAkB1M,GAAlB,EAAuB0W,MAAvB;AACD;AACF;AACF,MAXD;;AAaA;AACAhN,gBAAWzK,SAAX,CAAqB0X,QAArB,GAAgC,YAAY;AAC1C,WAAI,KAAK7K,aAAT,EAAwB;AACtB,aAAI,KAAKuM,UAAL,KAAoB,IAApB,IAA4B,KAAKF,WAAL,KAAqB,IAArD,EAA2D;AACzD,gBAAKjT,IAAL,GAAY,KAAKmT,UAAjB;AACA,gBAAKjM,OAAL,GAAe,KAAK+L,WAApB;AACA,gBAAK9L,aAAL,GAAqB,KAAK+L,iBAA1B;AACD;;AAED;AACA,cAAK,IAAIpY,MAAM,CAAf,EAAkBA,MAAM,KAAK0M,YAAL,CAAkBvM,MAA1C,EAAkDH,KAAlD,EAAyD;AACvD,gBAAK0M,YAAL,CAAkB1M,GAAlB,EAAuB2W,QAAvB;AACD;AACF;AACF,MAbD;;AAeA;;;;;;;;;;;AAWAjN,gBAAWzK,SAAX,CAAqBwR,KAArB,GAA6B,UAAU5O,GAAV,EAAe;AAC1C,WAAIwb,UAAU,IAAIjN,SAAJ,CAAc,IAAd,EAAoB;AAChCE,oBAAWzO;AADqB,QAApB,CAAd;AAGA,WAAI,CAAC,KAAKmK,YAAV,EAAwB;AACtB,gBAAOqR,OAAP;AACD,QAFD,MAEO;AACL,gBAAO1X,iBAAiB0X,OAAjB,EAA0B,KAAKjY,WAA/B,CAAP;AACD;AACF,MATD;;AAWA;;;;;;;;AAQAsE,gBAAWzK,SAAX,CAAqBgT,SAArB,GAAiC,UAAUC,WAAV,EAAuBC,cAAvB,EAAuC;AACtE,WAAI;AACF,gBAAOA,eAAe,KAAKjN,IAAL,CAAUQ,GAAV,CAAcwM,WAAd,CAAf,CAAP;AACD,QAFD,CAEE,OAAOtD,GAAP,EAAY;AACZ,eAAMA,GAAN;AACD;AACF,MAND;;AAQA;;;;;;;;;;AAUAlF,gBAAWzK,SAAX,CAAqB2S,MAArB,GAA8B,UAAUC,QAAV,EAAoBoO,YAApB,EAAkCC,aAAlC,EAAiDlO,MAAjD,EAAyD;AACrF;AACA,cAAO,IAAI5B,SAAJ,CAAc,IAAd,EAAoBwB,MAApB,CAA2BC,QAA3B,EAAqCoO,YAArC,EAAmDC,aAAnD,EAAkElO,MAAlE,CAAP;AACD,MAHD;;AAKA;AACA;;;;AAIAtI,gBAAWzK,SAAX,CAAqBkhB,MAArB,GAA8B,EAA9B;;AAEA;;;;AAIAzW,gBAAWzK,SAAX,CAAqBmhB,QAArB,GAAgC,UAAUtW,IAAV,EAAgB;AAC9C,WAAI,CAAC,KAAKqW,MAAL,CAAYrW,IAAZ,CAAL,EAAwB;AACtB,cAAKqW,MAAL,CAAYrW,IAAZ,IAAoB,EAApB;AACD;AACD,cAAO,KAAKqW,MAAL,CAAYrW,IAAZ,CAAP;AACD,MALD;AAMA;;;AAGAJ,gBAAWzK,SAAX,CAAqBohB,SAArB,GAAiC,EAAjC;;AAEA;;;;AAIA3W,gBAAWzK,SAAX,CAAqBqhB,KAArB,GAA6B,UAAUC,SAAV,EAAqBjH,GAArB,EAA0B;AACrD,WAAI1I,OAAOxQ,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAegZ,GAAf,CAAX,CAAX;AACA,YAAK8G,QAAL,CAAcG,SAAd,EAAyBjH,IAAI0D,KAA7B,IAAsCpM,IAAtC;AACA,cAAOA,IAAP;AACD,MAJD;;AAMA;;;;;;;AAOAlH,gBAAWzK,SAAX,CAAqBuhB,WAArB,GAAmC,UAAUD,SAAV,EAAqBjD,OAArB,EAA8B;AAC/D,WAAIgD,QAAQ,KAAKF,QAAL,CAAcG,SAAd,CAAZ;AAAA,WACEjhB,IADF;AAAA,WAEEyc,YAAY,IAAItX,IAAJ,GAAWkV,OAAX,EAFd;;AAIA,YAAKra,IAAL,IAAaghB,KAAb,EAAoB;;AAElB,cAAKlO,MAAL,CAAYkO,MAAMhhB,IAAN,CAAZ;AACA,cAAK+gB,SAAL,CAAe9f,IAAf,CAAoB;AAClBwb,sBAAWA,SADO;AAElBuB,oBAASA,OAFS;AAGlBpY,iBAAM9E,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeggB,MAAMhhB,IAAN,CAAf,CAAX;AAHY,UAApB;AAKD;AACD,YAAK6gB,MAAL,CAAYI,SAAZ,IAAyB,EAAzB;AACD,MAfD;;AAiBA7W,gBAAWzK,SAAX,CAAqBwhB,KAArB,GAA6B,YAAY;AACvC;AACD,MAFD;;AAIA;;;AAGA/W,gBAAWzK,SAAX,CAAqByhB,OAArB,GAA+B,UAAUlf,KAAV,EAAiB;AAC9C,WAAIC,IAAI,CAAR;AAAA,WACEC,MAAM,KAAKwD,IAAL,CAAU/E,MADlB;AAAA,WAEEwgB,gBAAgBC,eAAepf,KAAf,CAFlB;AAAA,WAGEqE,SAAS,EAHX;AAIA,YAAKpE,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,KAAK,CAAtB,EAAyB;AACvBoE,gBAAOtF,IAAP,CAAYsgB,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCmf,aAAlC,CAAZ;AACD;AACD,cAAO9a,MAAP;AACD,MATD;;AAWA;;;AAGA6D,gBAAWzK,SAAX,CAAqB8f,GAArB,GAA2B,UAAUvd,KAAV,EAAiB;AAC1C,cAAOsf,KAAK/B,GAAL,CAASgC,KAAT,CAAe,IAAf,EAAqB,KAAKL,OAAL,CAAalf,KAAb,CAArB,CAAP;AACD,MAFD;;AAIA;;;AAGAkI,gBAAWzK,SAAX,CAAqB+f,GAArB,GAA2B,UAAUxd,KAAV,EAAiB;AAC1C,cAAOsf,KAAK9B,GAAL,CAAS+B,KAAT,CAAe,IAAf,EAAqB,KAAKL,OAAL,CAAalf,KAAb,CAArB,CAAP;AACD,MAFD;;AAIA;;;AAGAkI,gBAAWzK,SAAX,CAAqB+hB,SAArB,GAAiC,UAAUxf,KAAV,EAAiB;AAChD,WAAIC,IAAI,CAAR;AAAA,WACEC,MAAM,KAAKwD,IAAL,CAAU/E,MADlB;AAAA,WAEE8gB,OAAOL,eAAepf,KAAf,CAFT;AAAA,WAGEqE,SAAS;AACPtD,gBAAO,CADA;AAEPT,gBAAOhB;AAFA,QAHX;AAAA,WAOEie,GAPF;;AASA,YAAKtd,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,KAAK,CAAtB,EAAyB;AACvB,aAAIsd,QAAQje,SAAZ,EAAuB;AACrB,eAAIie,MAAM8B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAV,EAAmD;AACjDlC,mBAAM8B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAN;AACApb,oBAAOtD,KAAP,GAAe,KAAK2C,IAAL,CAAUzD,CAAV,EAAaub,KAA5B;AACD;AACF,UALD,MAKO;AACL+B,iBAAM8B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAN;AACApb,kBAAOtD,KAAP,GAAe,KAAK2C,IAAL,CAAUzD,CAAV,EAAaub,KAA5B;AACD;AACF;AACDnX,cAAO/D,KAAP,GAAeid,GAAf;AACA,cAAOlZ,MAAP;AACD,MAvBD;;AAyBA;;;AAGA6D,gBAAWzK,SAAX,CAAqBiiB,SAArB,GAAiC,UAAU1f,KAAV,EAAiB;AAChD,WAAIC,IAAI,CAAR;AAAA,WACEC,MAAM,KAAKwD,IAAL,CAAU/E,MADlB;AAAA,WAEE8gB,OAAOL,eAAepf,KAAf,CAFT;AAAA,WAGEqE,SAAS;AACPtD,gBAAO,CADA;AAEPT,gBAAOhB;AAFA,QAHX;AAAA,WAOEke,GAPF;;AASA,YAAKvd,CAAL,EAAQA,IAAIC,GAAZ,EAAiBD,KAAK,CAAtB,EAAyB;AACvB,aAAIud,QAAQle,SAAZ,EAAuB;AACrB,eAAIke,MAAM6B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAV,EAAmD;AACjDjC,mBAAM6B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAN;AACApb,oBAAOtD,KAAP,GAAe,KAAK2C,IAAL,CAAUzD,CAAV,EAAaub,KAA5B;AACD;AACF,UALD,MAKO;AACLgC,iBAAM6B,aAAa,KAAK3b,IAAL,CAAUzD,CAAV,CAAb,EAA2BD,KAA3B,EAAkCyf,IAAlC,CAAN;AACApb,kBAAOtD,KAAP,GAAe,KAAK2C,IAAL,CAAUzD,CAAV,EAAaub,KAA5B;AACD;AACF;AACDnX,cAAO/D,KAAP,GAAekd,GAAf;AACA,cAAOnZ,MAAP;AACD,MAvBD;;AAyBA;;;AAGA6D,gBAAWzK,SAAX,CAAqBkiB,gBAArB,GAAwC,UAAU3f,KAAV,EAAiB;AACvD,cAAO,KAAKkf,OAAL,CAAalf,KAAb,EAAoBkE,GAApB,CAAwB0b,WAAxB,EAAqC9M,MAArC,CAA4C+M,MAA5C,EAAoD/M,MAApD,CAA2D,UAAUgN,CAAV,EAAa;AAC7E,gBAAO,CAAEpD,MAAMoD,CAAN,CAAT;AACD,QAFM,CAAP;AAGD,MAJD;;AAMA;;;;;;;AAOA5X,gBAAWzK,SAAX,CAAqBsiB,GAArB,GAA2B,UAAU/f,KAAV,EAAiB;AAC1C,cAAOggB,QAAQ,KAAKL,gBAAL,CAAsB3f,KAAtB,CAAR,CAAP;AACD,MAFD;;AAIA;;;;;AAKAkI,gBAAWzK,SAAX,CAAqBwiB,MAArB,GAA8B,UAAUjgB,KAAV,EAAiB;AAC7C,cAAOkgB,kBAAkB,KAAKP,gBAAL,CAAsB3f,KAAtB,CAAlB,CAAP;AACD,MAFD;;AAIA;;;;AAIAkI,gBAAWzK,SAAX,CAAqB6Q,IAArB,GAA4B,UAAUtO,KAAV,EAAiB;AAC3C,WAAImgB,OAAO,EAAX;AAAA,WACEzc,OAAO,KAAKwb,OAAL,CAAalf,KAAb,CADT;AAEA0D,YAAKwB,OAAL,CAAa,UAAU4S,GAAV,EAAe;AAC1B,aAAIqI,KAAKrI,GAAL,CAAJ,EAAe;AACbqI,gBAAKrI,GAAL,KAAa,CAAb;AACD,UAFD,MAEO;AACLqI,gBAAKrI,GAAL,IAAY,CAAZ;AACD;AACF,QAND;AAOA,WAAIyF,GAAJ,EACEzf,IADF,EACQwQ,IADR;AAEA,YAAKxQ,IAAL,IAAaqiB,IAAb,EAAmB;AACjB,aAAI5C,GAAJ,EAAS;AACP,eAAIA,MAAM4C,KAAKriB,IAAL,CAAV,EAAsB;AACpBwQ,oBAAOxQ,IAAP;AACD;AACF,UAJD,MAIO;AACLwQ,kBAAOxQ,IAAP;AACAyf,iBAAM4C,KAAKriB,IAAL,CAAN;AACD;AACF;AACD,cAAOwQ,IAAP;AACD,MAvBD;;AAyBA;;;;AAIApG,gBAAWzK,SAAX,CAAqB2iB,MAArB,GAA8B,UAAUpgB,KAAV,EAAiB;AAC7C,WAAI6S,SAAS,KAAK8M,gBAAL,CAAsB3f,KAAtB,CAAb;AACA6S,cAAO1C,IAAP,CAAYkQ,GAAZ;;AAEA,WAAIC,OAAOhB,KAAKiB,KAAL,CAAW1N,OAAOlU,MAAP,GAAgB,CAA3B,CAAX;;AAEA,WAAIkU,OAAOlU,MAAP,GAAgB,CAApB,EAAuB;AACrB,gBAAOkU,OAAOyN,IAAP,CAAP;AACD,QAFD,MAEO;AACL,gBAAO,CAACzN,OAAOyN,OAAO,CAAd,IAAmBzN,OAAOyN,IAAP,CAApB,IAAoC,GAA3C;AACD;AACF,MAXD;;AAaA;;;AAGA,cAASlB,cAAT,CAAwBpf,KAAxB,EAA+B;AAC7B,cAAOA,MAAM5B,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA/B;AACD;;AAED,cAASwhB,WAAT,CAAqBY,GAArB,EAA0B;AACxB,cAAOC,WAAWD,GAAX,EAAgB,EAAhB,CAAP;AACD;;AAED,cAASE,cAAT,CAAwB5I,GAAxB,EAA6B;AAC3B,cAAOA,QAAQxY,SAAf;AACD;;AAED,cAASmY,GAAT,CAAaxW,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,cAAOD,IAAIC,CAAX;AACD;;AAED,cAASmf,GAAT,CAAapf,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,cAAOD,IAAIC,CAAX;AACD;;AAED,cAASkf,MAAT,CAAgBvN,MAAhB,EAAwB;AACtBA,cAAO1C,IAAP,CAAYkQ,GAAZ;AACA,WAAIC,OAAOhB,KAAKiB,KAAL,CAAW1N,OAAOlU,MAAP,GAAgB,CAA3B,CAAX;AACA,cAAQkU,OAAOlU,MAAP,GAAgB,CAAjB,GAAsBkU,OAAOyN,IAAP,CAAtB,GAAsC,CAACzN,OAAOyN,OAAO,CAAd,IAAmBzN,OAAOyN,IAAP,CAApB,IAAoC,GAAjF;AACD;;AAED,cAASN,OAAT,CAAiBW,KAAjB,EAAwB;AACtB,cAAQA,MAAMC,MAAN,CAAanJ,GAAb,EAAkB,CAAlB,CAAD,GAAyBkJ,MAAMhiB,MAAtC;AACD;;AAED,cAASuhB,iBAAT,CAA2BrN,MAA3B,EAAmC;AACjC,WAAIkN,MAAMC,QAAQnN,MAAR,CAAV;AACA,WAAIgO,cAAchO,OAAO3O,GAAP,CAAW,UAAU5D,KAAV,EAAiB;AAC5C,aAAIka,OAAOla,QAAQyf,GAAnB;AACA,aAAIe,UAAUtG,OAAOA,IAArB;AACA,gBAAOsG,OAAP;AACD,QAJiB,CAAlB;;AAMA,WAAIC,gBAAgBf,QAAQa,WAAR,CAApB;;AAEA,WAAIZ,SAASX,KAAK0B,IAAL,CAAUD,aAAV,CAAb;AACA,cAAOd,MAAP;AACD;;AAED,cAASZ,YAAT,CAAsBvH,GAAtB,EAA2B7H,QAA3B,EAAqCgR,MAArC,EAA6C;AAC3C,WAAIA,WAAW,KAAf,EAAsB;AACpB;AACA,gBAAOnJ,IAAI7H,QAAJ,CAAP;AACD;AACD,WAAIiR,SAASjR,SAASyC,KAAT,CAAe,GAAf,CAAb;AAAA,WACEzV,OAAO6a,GADT;AAEA,cAAOoJ,OAAOviB,MAAP,GAAgB,CAAvB,EAA0B;AACxB1B,gBAAOA,KAAKikB,OAAOC,KAAP,EAAL,CAAP;AACD;AACD,cAAOlkB,IAAP;AACD;;AAED,cAASmkB,YAAT,CAAsBT,KAAtB,EAA6BU,IAA7B,EAAmChhB,GAAnC,EAAwC;AACtC,WAAIihB,KAAK,CAAT;AAAA,WACEC,KAAKZ,MAAMhiB,MADb;AAAA,WAEE6iB,QAFF;AAAA,WAGE/D,GAHF;AAIA,cAAO6D,KAAKC,EAAZ,EAAgB;AACd9D,eAAO6D,KAAKC,EAAN,IAAa,CAAnB;AACAC,oBAAWnhB,IAAIkf,KAAJ,CAAU,IAAV,EAAgB,CAAC8B,IAAD,EAAOV,MAAMlD,GAAN,CAAP,CAAhB,CAAX;AACA,aAAI+D,aAAa,CAAjB,EAAoB;AAClB,kBAAO;AACLC,oBAAO,IADF;AAEL1gB,oBAAO0c;AAFF,YAAP;AAID,UALD,MAKO,IAAI+D,WAAW,CAAf,EAAkB;AACvBD,gBAAK9D,GAAL;AACD,UAFM,MAEA;AACL6D,gBAAK7D,MAAM,CAAX;AACD;AACF;AACD,cAAO;AACLgE,gBAAO,KADF;AAEL1gB,gBAAOwgB;AAFF,QAAP;AAID;;AAED,cAASG,QAAT,CAAkBrhB,GAAlB,EAAuB;AACrB,cAAO,UAAUsgB,KAAV,EAAiBU,IAAjB,EAAuB;AAC5B,gBAAOD,aAAaT,KAAb,EAAoBU,IAApB,EAA0BhhB,GAA1B,CAAP;AACD,QAFD;AAGD;;AAED,cAASshB,aAAT,GAAyB,CAAE;;AAE3BA,mBAAclkB,SAAd,GAA0B;AACxBwG,aAAM,EADkB;AAExB4O,eAAQ,EAFgB;AAGxB1C,aAAM,UAAUlP,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAQD,IAAIC,CAAL,GAAU,CAAC,CAAX,GAAiBD,IAAIC,CAAL,GAAU,CAAV,GAAc,CAArC;AACD,QALuB;AAMxB0gB,gBAAS,UAAUvhB,GAAV,EAAe;AACtB,cAAKwhB,EAAL,GAAU,IAAIH,QAAJ,CAAarhB,GAAb,CAAV;AACD,QARuB;AASxBwhB,WAAI,YAAY;AACd,gBAAO,IAAIH,QAAJ,CAAa,KAAKvR,IAAlB,CAAP;AACD,QAXuB;AAYxBiL,YAAK,UAAUhS,GAAV,EAAe9I,KAAf,EAAsB;AACzB,aAAIqP,MAAM,KAAKkS,EAAL,CAAQ,KAAK5d,IAAb,EAAmBmF,GAAnB,CAAV;AACA,aAAIuG,IAAI8R,KAAR,EAAe;AACb,gBAAK5O,MAAL,CAAYlD,IAAI5O,KAAhB,IAAyBT,KAAzB;AACD,UAFD,MAEO;AACL,gBAAK2D,IAAL,CAAUwB,MAAV,CAAiBkK,IAAI5O,KAArB,EAA4B,CAA5B,EAA+BqI,GAA/B;AACA,gBAAKyJ,MAAL,CAAYpN,MAAZ,CAAmBkK,IAAI5O,KAAvB,EAA8B,CAA9B,EAAiCT,KAAjC;AACD;AACF,QApBuB;AAqBxB+b,YAAK,UAAUjT,GAAV,EAAe;AAClB,gBAAO,KAAKyJ,MAAL,CAAYuO,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,EAAwCpP,KAApD,CAAP;AACD;AAvBuB,MAA1B;;AA0BA,cAAS+V,WAAT,CAAqBgL,WAArB,EAAkC;AAChC,YAAK9hB,KAAL,GAAa8hB,WAAb;AACA,YAAKC,MAAL,GAAc,EAAd;AACA,YAAKC,OAAL,GAAe,EAAf;AACD;AACDlL,iBAAYrZ,SAAZ,CAAsBskB,MAAtB,GAA+B,EAA/B;AACAjL,iBAAYrZ,SAAZ,CAAsBukB,OAAtB,GAAgC,EAAhC;AACAlL,iBAAYrZ,SAAZ,CAAsB2d,GAAtB,GAA4B,UAAUtD,GAAV,EAAe;AACzC,WAAImK,aAAanK,IAAI,KAAK9X,KAAT,CAAjB;AACA,WAAIiiB,eAAe,IAAf,IAAuB,OAAQA,UAAR,KAAwB,WAAnD,EAAgE;AAC9D,aAAI,KAAKF,MAAL,CAAYE,UAAZ,CAAJ,EAA6B;AAC3B,iBAAM,IAAIzZ,KAAJ,CAAU,gCAAgC,KAAKxI,KAArC,GAA6C,IAA7C,GAAoDiiB,UAA9D,CAAN;AACD,UAFD,MAEO;AACL,gBAAKF,MAAL,CAAYE,UAAZ,IAA0BnK,GAA1B;AACA,gBAAKkK,OAAL,CAAalK,IAAI0D,KAAjB,IAA0ByG,UAA1B;AACD;AACF;AACF,MAVD;AAWAnL,iBAAYrZ,SAAZ,CAAsB4e,GAAtB,GAA4B,UAAUjT,GAAV,EAAe;AACzC,cAAO,KAAK2Y,MAAL,CAAY3Y,GAAZ,CAAP;AACD,MAFD;;AAIA0N,iBAAYrZ,SAAZ,CAAsBykB,IAAtB,GAA6B,UAAU9E,EAAV,EAAc;AACzC,cAAO,KAAK2E,MAAL,CAAY,KAAKC,OAAL,CAAa5E,EAAb,CAAZ,CAAP;AACD,MAFD;AAGA;;;;;AAKAtG,iBAAYrZ,SAAZ,CAAsBmT,MAAtB,GAA+B,UAAUkH,GAAV,EAAeiE,GAAf,EAAoB;AACjD,WAAI,KAAKiG,OAAL,CAAalK,IAAI0D,KAAjB,MAA4BO,IAAI,KAAK/b,KAAT,CAAhC,EAAiD;AAC/C,aAAImiB,MAAM,KAAKH,OAAL,CAAalK,IAAI0D,KAAjB,CAAV;AACA,cAAKJ,GAAL,CAASW,GAAT;AACA;AACA,cAAKgG,MAAL,CAAYI,GAAZ,IAAmB7iB,SAAnB;AACD,QALD,MAKO;AACL,cAAKyiB,MAAL,CAAYjK,IAAI,KAAK9X,KAAT,CAAZ,IAA+B+b,GAA/B;AACD;AACF,MATD;AAUAjF,iBAAYrZ,SAAZ,CAAsBoT,MAAtB,GAA+B,UAAUzH,GAAV,EAAe;AAC5C,WAAI0O,MAAM,KAAKiK,MAAL,CAAY3Y,GAAZ,CAAV;AACA,WAAI0O,QAAQ,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;AAC9C,cAAKiK,MAAL,CAAY3Y,GAAZ,IAAmB9J,SAAnB;AACA,cAAK0iB,OAAL,CAAalK,IAAI0D,KAAjB,IAA0Blc,SAA1B;AACD,QAHD,MAGO;AACL,eAAM,IAAIkJ,KAAJ,CAAU,iCAAiC,KAAKxI,KAAhD,CAAN;AACD;AACF,MARD;AASA8W,iBAAYrZ,SAAZ,CAAsB0e,KAAtB,GAA8B,YAAY;AACxC,YAAK4F,MAAL,GAAc,EAAd;AACA,YAAKC,OAAL,GAAe,EAAf;AACD,MAHD;;AAKA,cAASjL,UAAT,CAAoBqL,UAApB,EAAgC;AAC9B,YAAKrhB,KAAL,GAAa,EAAb;AACA,YAAKf,KAAL,GAAaoiB,UAAb;AACD;;AAED;AACArL,gBAAWtZ,SAAX,GAAuB;AACrB2d,YAAK,SAAS3D,GAAT,CAAarO,GAAb,EAAkBhI,GAAlB,EAAuB;AAC1B,aAAI,KAAKL,KAAL,CAAWqI,GAAX,CAAJ,EAAqB;AACnB,gBAAKrI,KAAL,CAAWqI,GAAX,EAAgBrK,IAAhB,CAAqBqC,GAArB;AACD,UAFD,MAEO;AACL,gBAAKL,KAAL,CAAWqI,GAAX,IAAkB,CAAChI,GAAD,CAAlB;AACD;AACF,QAPoB;;AASrB;AACAyP,eAAQ,SAASA,MAAT,CAAgBzH,GAAhB,EAAqBhI,GAArB,EAA0B;AAChC,aAAIihB,SAAS,KAAKthB,KAAL,CAAWqI,GAAX,CAAb;AACA,cAAK,IAAInJ,CAAT,IAAcoiB,MAAd,EAAsB;AACpB,eAAIA,OAAOpiB,CAAP,KAAamB,GAAjB,EAAsB;AACpBihB,oBAAO5c,MAAP,CAAcxF,CAAd,EAAiB,CAAjB;AACD;AACF;AACD,aAAIoiB,OAAO1jB,MAAP,GAAgB,CAApB,EAAuB;AACrB,gBAAKoC,KAAL,CAAWqI,GAAX,IAAkB9J,SAAlB;AACD;AACF,QApBoB;;AAsBrB;AACA+c,YAAK,SAASA,GAAT,CAAajT,GAAb,EAAkB;AACrB,gBAAO,KAAKrI,KAAL,CAAWqI,GAAX,CAAP;AACD,QAzBoB;;AA2BrB;AACA+S,cAAO,SAASA,KAAT,CAAe/S,GAAf,EAAoB;AACzB,cAAKrI,KAAL,GAAa,EAAb;AACD;AA9BoB,MAAvB;;AAiCA,cAASuhB,WAAT,CAAqBC,WAArB,EAAkC;AAChC,YAAKviB,KAAL,GAAauiB,WAAb;AACD;;AAEDD,iBAAY7kB,SAAZ,GAAwB;AACtBwG,aAAM,EADgB;AAEtB4O,eAAQ,EAFc;AAGtB;AACA1C,aAAM,UAAUlP,CAAV,EAAaC,CAAb,EAAgB;AACpB,gBAAQD,IAAIC,CAAL,GAAU,CAAC,CAAX,GAAiBD,IAAIC,CAAL,GAAU,CAAV,GAAc,CAArC;AACD,QANqB;AAOtB2gB,WAAI,YAAY;AACd,gBAAO,IAAIH,QAAJ,CAAa,KAAKvR,IAAlB,CAAP;AACD,QATqB;AAUtB;AACAyR,gBAAS,UAAUvhB,GAAV,EAAe;AACtB,cAAKwhB,EAAL,GAAU,IAAIH,QAAJ,CAAarhB,GAAb,CAAV;AACD,QAbqB;AActB;AACA+a,YAAK,UAAUhS,GAAV,EAAe9I,KAAf,EAAsB;AACzB,aAAIqP,MAAMyR,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,CAAV;AACA,aAAIR,IAAI8R,KAAR,EAAe;AACb,gBAAK5O,MAAL,CAAYlD,IAAI5O,KAAhB,EAAuBhC,IAAvB,CAA4BuB,KAA5B;AACD,UAFD,MAEO;AACL,gBAAK2D,IAAL,CAAUwB,MAAV,CAAiBkK,IAAI5O,KAArB,EAA4B,CAA5B,EAA+BqI,GAA/B;AACA,gBAAKyJ,MAAL,CAAYpN,MAAZ,CAAmBkK,IAAI5O,KAAvB,EAA8B,CAA9B,EAAiC,CAACT,KAAD,CAAjC;AACD;AACF,QAvBqB;AAwBtB;AACA+b,YAAK,UAAUjT,GAAV,EAAe;AAClB,aAAIoZ,MAAMpB,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,CAAV;AACA,aAAIqS,IAAIf,KAAR,EAAe;AACb,kBAAO,KAAK5O,MAAL,CAAY2P,IAAIzhB,KAAhB,CAAP;AACD,UAFD,MAEO;AACL,kBAAO,EAAP;AACD;AACF,QAhCqB;AAiCtB;AACA0hB,cAAO,UAAUrZ,GAAV,EAAe;AACpB,aAAIoZ,MAAMpB,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,CAAV;AACA,aAAIR,MAAM6S,IAAIzhB,KAAd;AACA,aAAIyhB,IAAIf,KAAR,EAAe9R;AACf,gBAAO,KAAK+S,MAAL,CAAYtZ,GAAZ,EAAiB,CAAjB,EAAoBuG,GAApB,CAAP;AACD,QAvCqB;AAwCtB;AACAgT,cAAO,UAAUvZ,GAAV,EAAe;AACpB,aAAIoZ,MAAMpB,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,CAAV;AACA,aAAIR,MAAM6S,IAAIzhB,KAAd;AACA,aAAIyhB,IAAIf,KAAR,EAAe9R;AACf,gBAAO,KAAK+S,MAAL,CAAYtZ,GAAZ,EAAiBuG,GAAjB,EAAsB,KAAK1L,IAAL,CAAUtF,MAAhC,CAAP;AACD,QA9CqB;;AAgDtB;AACA+jB,eAAQ,UAAUtZ,GAAV,EAAewZ,KAAf,EAAsBC,GAAtB,EAA2B;AACjC,aAAIhH,UAAU,EAAd;AACA,cAAK,IAAI5b,IAAI2iB,KAAb,EAAoB3iB,IAAI4iB,GAAxB,EAA6B5iB,GAA7B,EAAkC;AAChC4b,qBAAUA,QAAQlP,MAAR,CAAe,KAAKkG,MAAL,CAAY5S,CAAZ,CAAf,CAAV;AACD;AACD,gBAAO4b,OAAP;AACD,QAvDqB;AAwDtB;AACAiH,eAAQ,UAAU1Z,GAAV,EAAe;AACrB,gBAAOgY,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,CAAP;AACD,QA3DqB;AA4DtB;AACAU,eAAQ,UAAUzH,GAAV,EAAe9I,KAAf,EAAsB;AAC5B,aAAIqP,MAAMyR,aAAa,KAAKnd,IAAlB,EAAwBmF,GAAxB,EAA6B,KAAK+G,IAAlC,EAAwCpP,KAAlD;AACA,aAAIshB,SAAS,KAAKxP,MAAL,CAAYlD,GAAZ,CAAb;AACA,cAAK,IAAI1P,CAAT,IAAcoiB,MAAd,EAAsB;AACpB,eAAIA,OAAOpiB,CAAP,KAAaK,KAAjB,EAAwB+hB,OAAO5c,MAAP,CAAcxF,CAAd,EAAiB,CAAjB;AACzB;AACD,aAAIoiB,OAAO1jB,MAAP,GAAgB,CAApB,EAAuB;AACrB,gBAAKsF,IAAL,CAAUwB,MAAV,CAAiBkK,GAAjB,EAAsB,CAAtB;AACA,gBAAKkD,MAAL,CAAYpN,MAAZ,CAAmBkK,GAAnB,EAAwB,CAAxB;AACD;AACF,QAvEqB;AAwEtB;AACAwM,cAAO,YAAY;AACjB,cAAKlY,IAAL,GAAY,EAAZ;AACA,cAAK4O,MAAL,GAAc,EAAd;AACD;AA5EqB,MAAxB;;AAgFAnN,UAAKnE,OAAL,GAAeA,OAAf;AACAmE,UAAKwC,UAAL,GAAkBA,UAAlB;AACAxC,UAAKic,aAAL,GAAqBA,aAArB;AACAjc,UAAKqd,mBAAL,GAA2B;AACzB/V,WAAI7F,aADqB;AAEzB3C,qBAAc4C;AAFW,MAA3B;AAIA,YAAO1B,IAAP;AACD,IAhgKO,EAAR;AAkgKD,EA/gKA,CAAD,C;;;;;;;;ACNA,iD","file":"lokijs.loki.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"loki\", [\"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"loki\"] = factory(require(\"fs\"));\n\telse\n\t\troot[\"lokijs\"] = root[\"lokijs\"] || {}, root[\"lokijs\"][\"loki\"] = factory(root[\"fs\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_14__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 65d0cac4fd685b578218","/**\n * LokiJS\n * @author Joe Minichino <joe.minichino@gmail.com>\n *\n * A lightweight document oriented javascript database\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.loki = factory();\n  }\n}(this, function () {\n\n  return (function () {\n    'use strict';\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var Utils = {\n      copyProperties: function (src, dest) {\n        var prop;\n        for (prop in src) {\n          dest[prop] = src[prop];\n        }\n      },\n      // used to recursively scan hierarchical transform step object for param substitution\n      resolveTransformObject: function (subObj, params, depth) {\n        var prop,\n          pname;\n\n        if (typeof depth !== 'number') {\n          depth = 0;\n        }\n\n        if (++depth >= 10) return subObj;\n\n        for (prop in subObj) {\n          if (typeof subObj[prop] === 'string' && subObj[prop].indexOf(\"[%lktxp]\") === 0) {\n            pname = subObj[prop].substring(8);\n            if (params.hasOwnProperty(pname)) {\n              subObj[prop] = params[pname];\n            }\n          } else if (typeof subObj[prop] === \"object\") {\n            subObj[prop] = Utils.resolveTransformObject(subObj[prop], params, depth);\n          }\n        }\n\n        return subObj;\n      },\n      // top level utility to resolve an entire (single) transform (array of steps) for parameter substitution\n      resolveTransformParams: function (transform, params) {\n        var idx,\n          clonedStep,\n          resolvedTransform = [];\n\n        if (typeof params === 'undefined') return transform;\n\n        // iterate all steps in the transform array\n        for (idx = 0; idx < transform.length; idx++) {\n          // clone transform so our scan and replace can operate directly on cloned transform\n          clonedStep = JSON.parse(JSON.stringify(transform[idx]));\n          resolvedTransform.push(Utils.resolveTransformObject(clonedStep, params));\n        }\n\n        return resolvedTransform;\n      }\n    };\n\n    /** Helper function for determining 'less-than' conditions for ops, sorting, and binary indices.\n     *     In the future we might want $lt and $gt ops to use their own functionality/helper.\n     *     Since binary indices on a property might need to index [12, NaN, new Date(), Infinity], we\n     *     need this function (as well as gtHelper) to always ensure one value is LT, GT, or EQ to another.\n     */\n    function ltHelper(prop1, prop2, equal) {\n      var cv1, cv2;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true) {\n        if ((prop1 === true || prop1 === false) && (prop2 === true || prop2 === false)) {\n          if (equal) {\n            return prop1 === prop2;\n          } else {\n            if (prop1) {\n              return false;\n            } else {\n              return prop2;\n            }\n          }\n        }\n\n        if (prop2 === undefined || prop2 === null || prop1 === true || prop2 === false) {\n          return equal;\n        }\n        if (prop1 === undefined || prop1 === null || prop1 === false || prop2 === true) {\n          return true;\n        }\n      }\n\n      if (prop1 === prop2) {\n        return equal;\n      }\n\n      if (prop1 < prop2) {\n        return true;\n      }\n\n      if (prop1 > prop2) {\n        return false;\n      }\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      if (cv1 < cv2) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function gtHelper(prop1, prop2, equal) {\n      var cv1, cv2;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true) {\n        if ((prop1 === true || prop1 === false) && (prop2 === true || prop2 === false)) {\n          if (equal) {\n            return prop1 === prop2;\n          } else {\n            if (prop1) {\n              return !prop2;\n            } else {\n              return false;\n            }\n          }\n        }\n\n        if (prop1 === undefined || prop1 === null || prop1 === false || prop2 === true) {\n          return equal;\n        }\n        if (prop2 === undefined || prop2 === null || prop1 === true || prop2 === false) {\n          return true;\n        }\n      }\n\n      if (prop1 === prop2) {\n        return equal;\n      }\n\n      if (prop1 > prop2) {\n        return true;\n      }\n\n      if (prop1 < prop2) {\n        return false;\n      }\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      if (cv1 > cv2) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function sortHelper(prop1, prop2, desc) {\n      if (prop1 === prop2) {\n        return 0;\n      }\n\n      if (ltHelper(prop1, prop2, false)) {\n        return (desc) ? (1) : (-1);\n      }\n\n      if (gtHelper(prop1, prop2, false)) {\n        return (desc) ? (-1) : (1);\n      }\n\n      // not lt, not gt so implied equality-- date compatible\n      return 0;\n    }\n\n    /**\n     * compoundeval() - helper function for compoundsort(), performing individual object comparisons\n     *\n     * @param {array} properties - array of property names, in order, by which to evaluate sort order\n     * @param {object} obj1 - first object to compare\n     * @param {object} obj2 - second object to compare\n     * @returns {integer} 0, -1, or 1 to designate if identical (sortwise) or which should be first\n     */\n    function compoundeval(properties, obj1, obj2) {\n      var res = 0;\n      var prop, field;\n      for (var i = 0, len = properties.length; i < len; i++) {\n        prop = properties[i];\n        field = prop[0];\n        res = sortHelper(obj1[field], obj2[field], prop[1]);\n        if (res !== 0) {\n          return res;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * dotSubScan - helper function used for dot notation queries.\n     *\n     * @param {object} root - object to traverse\n     * @param {array} paths - array of properties to drill into\n     * @param {function} fun - evaluation function to test with\n     * @param {any} value - comparative value to also pass to (compare) fun\n     * @param {number} poffset - index of the item in 'paths' to start the sub-scan from\n     */\n    function dotSubScan(root, paths, fun, value, poffset) {\n      var pathOffset = poffset || 0;\n      var path = paths[pathOffset];\n      if (root === undefined || root === null || !hasOwnProperty.call(root, path)) {\n        return false;\n      }\n\n      var valueFound = false;\n      var element = root[path];\n      if (pathOffset + 1 >= paths.length) {\n        // if we have already expanded out the dot notation,\n        // then just evaluate the test function and value on the element\n        valueFound = fun(element, value);\n      } else if (Array.isArray(element)) {\n        for (var index = 0, len = element.length; index < len; index += 1) {\n          valueFound = dotSubScan(element[index], paths, fun, value, pathOffset + 1);\n          if (valueFound === true) {\n            break;\n          }\n        }\n      } else {\n        valueFound = dotSubScan(element, paths, fun, value, pathOffset + 1);\n      }\n\n      return valueFound;\n    }\n\n    function containsCheckFn(a) {\n      if (typeof a === 'string' || Array.isArray(a)) {\n        return function (b) {\n          return a.indexOf(b) !== -1;\n        };\n      } else if (typeof a === 'object' && a !== null) {\n        return function (b) {\n          return hasOwnProperty.call(a, b);\n        };\n      }\n      return null;\n    }\n\n    function doQueryOp(val, op) {\n      for (var p in op) {\n        if (hasOwnProperty.call(op, p)) {\n          return LokiOps[p](val, op[p]);\n        }\n      }\n      return false;\n    }\n\n    var LokiOps = {\n      // comparison operators\n      // a is the value in the collection\n      // b is the query value\n      $eq: function (a, b) {\n        return a === b;\n      },\n\n      // abstract/loose equality\n      $aeq: function (a, b) {\n        return a == b;\n      },\n\n      $ne: function (a, b) {\n        // ecma 5 safe test for NaN\n        if (b !== b) {\n          // ecma 5 test value is not NaN\n          return (a === a);\n        }\n\n        return a !== b;\n      },\n\n      $dteq: function (a, b) {\n        if (ltHelper(a, b, false)) {\n          return false;\n        }\n        return !gtHelper(a, b, false);\n      },\n\n      $gt: function (a, b) {\n        return gtHelper(a, b, false);\n      },\n\n      $gte: function (a, b) {\n        return gtHelper(a, b, true);\n      },\n\n      $lt: function (a, b) {\n        return ltHelper(a, b, false);\n      },\n\n      $lte: function (a, b) {\n        return ltHelper(a, b, true);\n      },\n\n      $in: function (a, b) {\n        return b.indexOf(a) !== -1;\n      },\n\n      $nin: function (a, b) {\n        return b.indexOf(a) === -1;\n      },\n\n      $keyin: function (a, b) {\n        return a in b;\n      },\n\n      $nkeyin: function (a, b) {\n        return !(a in b);\n      },\n\n      $definedin: function (a, b) {\n        return b[a] !== undefined;\n      },\n\n      $undefinedin: function (a, b) {\n        return b[a] === undefined;\n      },\n\n      $regex: function (a, b) {\n        return b.test(a);\n      },\n\n      $containsString: function (a, b) {\n        return (typeof a === 'string') && (a.indexOf(b) !== -1);\n      },\n\n      $containsNone: function (a, b) {\n        return !LokiOps.$containsAny(a, b);\n      },\n\n      $containsAny: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.some(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $contains: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.every(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $type: function (a, b) {\n        var type = typeof a;\n        if (type === 'object') {\n          if (Array.isArray(a)) {\n            type = 'array';\n          } else if (a instanceof Date) {\n            type = 'date';\n          }\n        }\n        return (typeof b !== 'object') ? (type === b) : doQueryOp(type, b);\n      },\n\n      $size: function (a, b) {\n        if (Array.isArray(a)) {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $len: function (a, b) {\n        if (typeof a === 'string') {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $where: function (a, b) {\n        return b(a) === true;\n      },\n\n      // field-level logical operators\n      // a is the value in the collection\n      // b is the nested query operation (for '$not')\n      //   or an array of nested query operations (for '$and' and '$or')\n      $not: function (a, b) {\n        return !doQueryOp(a, b);\n      },\n\n      $and: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (!doQueryOp(a, b[idx])) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      $or: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (doQueryOp(a, b[idx])) {\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n\n    // making indexing opt-in... our range function knows how to deal with these ops :\n    var indexedOpsList = ['$eq', '$aeq', '$dteq', '$gt', '$gte', '$lt', '$lte'];\n\n    function clone(data, method) {\n      var cloneMethod = method || 'parse-stringify',\n        cloned;\n\n      switch (cloneMethod) {\n      case \"parse-stringify\":\n        cloned = JSON.parse(JSON.stringify(data));\n        break;\n      case \"jquery-extend-deep\":\n        cloned = jQuery.extend(true, {}, data);\n        break;\n      case \"shallow\":\n        cloned = Object.create(data.prototype || null);\n        Object.keys(data).map(function (i) {\n          cloned[i] = data[i];\n        });\n        break;\n      default:\n        break;\n      }\n\n      //if (cloneMethod === 'parse-stringify') {\n      //  cloned = JSON.parse(JSON.stringify(data));\n      //}\n      return cloned;\n    }\n\n    function cloneObjectArray(objarray, method) {\n      var i,\n        result = [];\n\n      if (method == \"parse-stringify\") {\n        return clone(objarray, method);\n      }\n\n      i = objarray.length - 1;\n\n      for (; i <= 0; i--) {\n        result.push(clone(objarray[i], method));\n      }\n\n      return result;\n    }\n\n    function localStorageAvailable() {\n      try {\n        return (window && window.localStorage !== undefined && window.localStorage !== null);\n      } catch (e) {\n        return false;\n      }\n    }\n\n\n    /**\n     * LokiEventEmitter is a minimalist version of EventEmitter. It enables any\n     * constructor that inherits EventEmitter to emit events and trigger\n     * listeners that have been added to the event through the on(event, callback) method\n     *\n     * @constructor LokiEventEmitter\n     */\n    function LokiEventEmitter() {}\n\n    /**\n     * @prop {hashmap} events - a hashmap, with each property being an array of callbacks\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.events = {};\n\n    /**\n     * @prop {boolean} asyncListeners - boolean determines whether or not the callbacks associated with each event\n     * should happen in an async fashion or not\n     * Default is false, which means events are synchronous\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.asyncListeners = false;\n\n    /**\n     * on(eventName, listener) - adds a listener to the queue of callbacks associated to an event\n     * @param {string|string[]} eventName - the name(s) of the event(s) to listen to\n     * @param {function} listener - callback function of listener to attach\n     * @returns {int} the index of the callback in the array of listeners for a particular event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.on = function (eventName, listener) {\n      var event;\n      var self = this;\n\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.on(currentEventName, listener);\n        });\n        return listener;\n      }\n\n      event = this.events[eventName];\n      if (!event) {\n        event = this.events[eventName] = [];\n      }\n      event.push(listener);\n      return listener;\n    };\n\n    /**\n     * emit(eventName, data) - emits a particular event\n     * with the option of passing optional parameters which are going to be processed by the callback\n     * provided signatures match (i.e. if passing emit(event, arg0, arg1) the listener should take two parameters)\n     * @param {string} eventName - the name of the event\n     * @param {object=} data - optional object passed with the event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.emit = function (eventName, data) {\n      var self = this;\n      if (eventName && this.events[eventName]) {\n        this.events[eventName].forEach(function (listener) {\n          if (self.asyncListeners) {\n            setTimeout(function () {\n              listener(data);\n            }, 1);\n          } else {\n            listener(data);\n          }\n\n        });\n      }\n    };\n\n    /**\n     * removeListener() - removes the listener at position 'index' from the event 'eventName'\n     * @param {string|string[]} eventName - the name(s) of the event(s) which the listener is attached to\n     * @param {function} listener - the listener callback function to remove from emitter\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.removeListener = function (eventName, listener) {\n      var self = this;\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.removeListener(currentEventName, listen);\n        });\n      }\n\n      if (this.events[eventName]) {\n        var listeners = this.events[eventName];\n        listeners.splice(listeners.indexOf(listener), 1);\n      }\n    };\n\n    /**\n     * Loki: The main database class\n     * @constructor Loki\n     * @implements LokiEventEmitter\n     * @param {string} filename - name of the file to be saved to\n     * @param {object=} options - (Optional) config options object\n     * @param {string} options.env - override environment detection as 'NODEJS', 'BROWSER', 'CORDOVA'\n     * @param {boolean} options.verbose - enable console output (default is 'false')\n     */\n    function Loki(filename, options) {\n      this.filename = filename || 'loki.db';\n      this.collections = [];\n\n      // persist version of code which created the database to the database.\n      // could use for upgrade scenarios\n      this.databaseVersion = 1.1;\n      this.engineVersion = 1.1;\n\n      // autosave support (disabled by default)\n      // pass autosave: true, autosaveInterval: 6000 in options to set 6 second autosave\n      this.autosave = false;\n      this.autosaveInterval = 5000;\n      this.autosaveHandle = null;\n\n      this.options = {};\n\n      // currently keeping persistenceMethod and persistenceAdapter as loki level properties that\n      // will not or cannot be deserialized.  You are required to configure persistence every time\n      // you instantiate a loki object (or use default environment detection) in order to load the database anyways.\n\n      // persistenceMethod could be 'fs', 'localStorage', or 'adapter'\n      // this is optional option param, otherwise environment detection will be used\n      // if user passes their own adapter we will force this method to 'adapter' later, so no need to pass method option.\n      this.persistenceMethod = null;\n\n      // retain reference to optional (non-serializable) persistenceAdapter 'instance'\n      this.persistenceAdapter = null;\n\n      // enable console output if verbose flag is set (disabled by default)\n      this.verbose = options && options.hasOwnProperty('verbose') ? options.verbose : false;\n\n      this.events = {\n        'init': [],\n        'loaded': [],\n        'flushChanges': [],\n        'close': [],\n        'changes': [],\n        'warning': []\n      };\n\n      var getENV = function () {\n        if (typeof window === 'undefined') {\n          return 'NODEJS';\n        }\n\n        if (typeof global !== 'undefined' && global.window) {\n          return 'NODEJS'; //node-webkit\n        }\n\n        if (typeof document !== 'undefined') {\n          if (document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1) {\n            return 'CORDOVA';\n          }\n          return 'BROWSER';\n        }\n        return 'CORDOVA';\n      };\n\n      // refactored environment detection due to invalid detection for browser environments.\n      // if they do not specify an options.env we want to detect env rather than default to nodejs.\n      // currently keeping two properties for similar thing (options.env and options.persistenceMethod)\n      //   might want to review whether we can consolidate.\n      if (options && options.hasOwnProperty('env')) {\n        this.ENV = options.env;\n      } else {\n        this.ENV = getENV();\n      }\n\n      this.on('init', this.clearChanges);\n\n    }\n\n    // db class is an EventEmitter\n    Loki.prototype = new LokiEventEmitter();\n\n    // experimental support for browserify's abstract syntax scan to pick up dependency of indexed adapter.\n    // Hopefully, once this hits npm a browserify require of lokijs should scan the main file and detect this indexed adapter reference.\n    Loki.prototype.getIndexedAdapter = function () {\n      var adapter;\n\n      if (typeof require === 'function') {\n        adapter = require(\"./loki-indexed-adapter.js\");\n      }\n\n      return adapter;\n    };\n\n\n    /**\n     * configures options related to database persistence.\n     *\n     * @param {object} options - configuration options to apply to loki db object\n     * @param {adapter} options.adapter - an instance of a loki persistence adapter\n     * @param {boolean} options.autosave - enables autosave\n     * @param {int} options.autosaveInterval - time interval (in milliseconds) between saves (if dirty)\n     * @param {boolean} options.autoload - enables autoload on loki instantiation\n     * @param {object} options.inflate - options that are passed to loadDatabase if autoload enabled\n     * @returns {Promise} a Promise that resolves after initialization and (if enabled) autoloading the database\n     * @memberof Loki\n     */\n    Loki.prototype.initializePersistence = function (options) {\n      var self = this;\n      var defaultPersistence = {\n          'NODEJS': 'fs',\n          'BROWSER': 'localStorage',\n          'CORDOVA': 'localStorage'\n        },\n        persistenceMethods = {\n          'fs': LokiFsAdapter,\n          'localStorage': LokiLocalStorageAdapter\n        };\n\n      this.options = options || {};\n\n      this.persistenceMethod = null;\n      // retain reference to optional persistence adapter 'instance'\n      // currently keeping outside options because it can't be serialized\n      this.persistenceAdapter = null;\n\n      // process the options\n      if (this.options.hasOwnProperty('persistenceMethod')) {\n        // check if the specified persistence method is known\n        if (typeof (persistenceMethods[this.options.persistenceMethod]) === 'function') {\n          this.persistenceMethod = this.options.persistenceMethod;\n          this.persistenceAdapter = new persistenceMethods[this.options.persistenceMethod]();\n        }\n        // should be throw an error here, or just fall back to defaults ??\n      }\n\n      // if by now there is no adapter specified by user nor derived from persistenceMethod: use sensible defaults\n      if (this.persistenceAdapter === null) {\n        this.persistenceMethod = defaultPersistence[this.ENV];\n        if (this.persistenceMethod) {\n          this.persistenceAdapter = new persistenceMethods[this.persistenceMethod]();\n        }\n      }\n\n      // if user passes adapter, set persistence mode to adapter and retain persistence adapter instance\n      if (this.options.hasOwnProperty('adapter')) {\n        this.persistenceMethod = 'adapter';\n        this.persistenceAdapter = this.options.adapter;\n      }\n\n      if (this.options.hasOwnProperty('autosaveInterval')) {\n        this.autosaveInterval = parseInt(this.options.autosaveInterval, 10);\n      }\n\n      this.autosaveDisable();\n\n      var loaded;\n\n      // if they want to load database on loki instantiation, now is a good time to load... after adapter set and before possible autosave initiation\n      if (this.options.autoload) {\n        loaded = this.loadDatabase(this.options.inflate);\n      }\n      else {\n        loaded = Promise.resolve();\n      }\n\n      return loaded.then(function () {\n        if (self.options.autosave) {\n          self.autosaveEnable();\n        }\n      });\n    };\n\n    /**\n     * Shorthand method for quickly creating and populating an anonymous collection.\n     *    This collection is not referenced internally so upon losing scope it will be garbage collected.\n     *\n     * @example\n     * var results = new loki().anonym(myDocArray).find({'age': {'$gt': 30} });\n     *\n     * @param {Array} docs - document array to initialize the anonymous collection with\n     * @param {object} options - configuration object, see {@link Loki#addCollection} options\n     * @returns {Collection} New collection which you can query or chain\n     * @memberof Loki\n     */\n    Loki.prototype.anonym = function (docs, options) {\n      var collection = new Collection('anonym', options);\n      collection.insert(docs);\n\n      if (this.verbose)\n        collection.console = console;\n\n      return collection;\n    };\n\n    /**\n     * Adds a collection to the database.\n     * @param {string} name - name of collection to add\n     * @param {object=} options - (optional) options to configure collection with.\n     * @param {array} options.unique - array of property names to define unique constraints for\n     * @param {array} options.exact - array of property names to define exact constraints for\n     * @param {array} options.indices - array property names to define binary indexes for\n     * @param {boolean} options.asyncListeners - default is false\n     * @param {boolean} options.disableChangesApi - default is true\n     * @param {boolean} options.autoupdate - use Object.observe to update objects automatically (default: false)\n     * @param {boolean} options.clone - specify whether inserts and queries clone to/from user\n     * @param {string} options.cloneMethod - 'parse-stringify' (default), 'jquery-extend-deep', 'shallow'\n     * @param {int} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @returns {Collection} a reference to the collection which was just added\n     * @memberof Loki\n     */\n    Loki.prototype.addCollection = function (name, options) {\n      var collection = new Collection(name, options);\n      this.collections.push(collection);\n\n      if (this.verbose)\n        collection.console = console;\n\n      return collection;\n    };\n\n    Loki.prototype.loadCollection = function (collection) {\n      if (!collection.name) {\n        throw new Error('Collection must have a name property to be loaded');\n      }\n      this.collections.push(collection);\n    };\n\n    /**\n     * Retrieves reference to a collection by name.\n     * @param {string} collectionName - name of collection to look up\n     * @returns {Collection} Reference to collection in database by that name, or null if not found\n     * @memberof Loki\n     */\n    Loki.prototype.getCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          return this.collections[i];\n        }\n      }\n\n      // no such collection\n      this.emit('warning', 'collection ' + collectionName + ' not found');\n      return null;\n    };\n\n    Loki.prototype.listCollections = function () {\n\n      var i = this.collections.length,\n        colls = [];\n\n      while (i--) {\n        colls.push({\n          name: this.collections[i].name,\n          type: this.collections[i].objType,\n          count: this.collections[i].data.length\n        });\n      }\n      return colls;\n    };\n\n    /**\n     * Removes a collection from the database.\n     * @param {string} collectionName - name of collection to remove\n     * @memberof Loki\n     */\n    Loki.prototype.removeCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          var tmpcol = new Collection(collectionName, {});\n          var curcol = this.collections[i];\n          for (var prop in curcol) {\n            if (curcol.hasOwnProperty(prop) && tmpcol.hasOwnProperty(prop)) {\n              curcol[prop] = tmpcol[prop];\n            }\n          }\n          this.collections.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    Loki.prototype.getName = function () {\n      return this.name;\n    };\n\n    /**\n     * serializeReplacer - used to prevent certain properties from being serialized\n     *\n     */\n    Loki.prototype.serializeReplacer = function (key, value) {\n      switch (key) {\n      case 'autosaveHandle':\n      case 'persistenceAdapter':\n      case 'constraints':\n      case 'ttl':\n        return null;\n      default:\n        return value;\n      }\n    };\n\n    /**\n     * Serialize database to a string which can be loaded via {@link Loki#loadJSON}\n     *\n     * @returns {string} Stringified representation of the loki database.\n     * @memberof Loki\n     */\n    Loki.prototype.serialize = function () {\n      return JSON.stringify(this, this.serializeReplacer, 2);\n    };\n    // alias of serialize\n    Loki.prototype.toJson = Loki.prototype.serialize;\n\n    /**\n     * Inflates a loki database from a serialized JSON string\n     *\n     * @param {string} serializedDb - a serialized loki database string\n     * @param {object} options - apply or override collection level settings\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSON = function (serializedDb, options) {\n      var dbObject;\n      if (serializedDb.length === 0) {\n        dbObject = {};\n      } else {\n        dbObject = JSON.parse(serializedDb);\n      }\n\n      this.loadJSONObject(dbObject, options);\n    };\n\n    /**\n     * Inflates a loki database from a JS object\n     *\n     * @param {object} dbObject - a serialized loki database string\n     * @param {object} options - apply or override collection level settings\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSONObject = function (dbObject, options) {\n      var i = 0,\n        len = dbObject.collections ? dbObject.collections.length : 0,\n        coll,\n        copyColl,\n        clen,\n        j,\n        loader,\n        collObj;\n\n      this.name = dbObject.name;\n\n      // restore database version\n      this.databaseVersion = 1.0;\n      if (dbObject.hasOwnProperty('databaseVersion')) {\n        this.databaseVersion = dbObject.databaseVersion;\n      }\n\n      this.collections = [];\n\n      function makeLoader(coll) {\n        var collOptions = options[coll.name];\n        var inflater;\n\n        if (collOptions.proto) {\n          inflater = collOptions.inflate || Utils.copyProperties;\n\n          return function(data) {\n            var collObj = new(collOptions.proto)();\n            inflater(data, collObj);\n            return collObj;\n          };\n        }\n\n        return collOptions.inflate;\n      }\n\n      for (i; i < len; i += 1) {\n        coll = dbObject.collections[i];\n        copyColl = this.addCollection(coll.name);\n\n        copyColl.adaptiveBinaryIndices = coll.hasOwnProperty('adaptiveBinaryIndices')?(coll.adaptiveBinaryIndices === true): false;\n        copyColl.transactional = coll.transactional;\n        copyColl.asyncListeners = coll.asyncListeners;\n        copyColl.disableChangesApi = coll.disableChangesApi;\n        copyColl.cloneObjects = coll.cloneObjects;\n        copyColl.cloneMethod = coll.cloneMethod || \"parse-stringify\";\n        copyColl.autoupdate = coll.autoupdate;\n\n        // load each element individually\n        clen = coll.data.length;\n        j = 0;\n        if (options && options.hasOwnProperty(coll.name)) {\n          loader = makeLoader(coll);\n\n          for (j; j < clen; j++) {\n            collObj = loader(coll.data[j]);\n            copyColl.data[j] = collObj;\n            copyColl.addAutoUpdateObserver(collObj);\n          }\n        } else {\n\n          for (j; j < clen; j++) {\n            copyColl.data[j] = coll.data[j];\n            copyColl.addAutoUpdateObserver(copyColl.data[j]);\n          }\n        }\n\n        copyColl.maxId = (coll.data.length === 0) ? 0 : coll.maxId;\n        copyColl.idIndex = coll.idIndex;\n        if (typeof (coll.binaryIndices) !== 'undefined') {\n          copyColl.binaryIndices = coll.binaryIndices;\n        }\n        if (typeof coll.transforms !== 'undefined') {\n          copyColl.transforms = coll.transforms;\n        }\n\n        copyColl.ensureId();\n\n        // regenerate unique indexes\n        copyColl.uniqueNames = [];\n        if (coll.hasOwnProperty(\"uniqueNames\")) {\n          copyColl.uniqueNames = coll.uniqueNames;\n          for (j = 0; j < copyColl.uniqueNames.length; j++) {\n            copyColl.ensureUniqueIndex(copyColl.uniqueNames[j]);\n          }\n        }\n\n        // in case they are loading a database created before we added dynamic views, handle undefined\n        if (typeof (coll.DynamicViews) === 'undefined') continue;\n\n        // reinflate DynamicViews and attached Resultsets\n        for (var idx = 0; idx < coll.DynamicViews.length; idx++) {\n          var colldv = coll.DynamicViews[idx];\n\n          var dv = copyColl.addDynamicView(colldv.name, colldv.options);\n          dv.resultdata = colldv.resultdata;\n          dv.resultsdirty = colldv.resultsdirty;\n          dv.filterPipeline = colldv.filterPipeline;\n\n          dv.sortCriteria = colldv.sortCriteria;\n          dv.sortFunction = null;\n\n          dv.sortDirty = colldv.sortDirty;\n          dv.resultset.filteredrows = colldv.resultset.filteredrows;\n          dv.resultset.searchIsChained = colldv.resultset.searchIsChained;\n          dv.resultset.filterInitialized = colldv.resultset.filterInitialized;\n\n          dv.rematerialize({\n            removeWhereFilters: true\n          });\n        }\n      }\n    };\n\n    /**\n     * Emits the close event. In autosave scenarios, if the database is dirty, this will save and disable timer.\n     * Does not actually destroy the db.\n     *\n     * @returns {Promise} a Promise that resolves after closing the database succeeded\n     * @memberof Loki\n     */\n    Loki.prototype.close = function () {\n      var self = this;\n      var saved;\n\n      // for autosave scenarios, we will let close perform final save (if dirty)\n      // For web use, you might call from window.onbeforeunload to shutdown database, saving pending changes\n      if (this.autosave) {\n        this.autosaveDisable();\n        if (this.autosaveDirty()) {\n          saved = this.saveDatabase();\n        }\n      }\n\n      if (!saved) {\n        saved = Promise.resolve();\n      }\n\n      return saved.then(function () {\n        self.emit('close');\n      });\n    };\n\n    /**-------------------------+\n    | Changes API               |\n    +--------------------------*/\n\n    /**\n     * The Changes API enables the tracking the changes occurred in the collections since the beginning of the session,\n     * so it's possible to create a differential dataset for synchronization purposes (possibly to a remote db)\n     */\n\n    /**\n     * (Changes API) : takes all the changes stored in each\n     * collection and creates a single array for the entire database. If an array of names\n     * of collections is passed then only the included collections will be tracked.\n     *\n     * @param {array=} optional array of collection names. No arg means all collections are processed.\n     * @returns {array} array of changes\n     * @see private method createChange() in Collection\n     * @memberof Loki\n     */\n    Loki.prototype.generateChangesNotification = function (arrayOfCollectionNames) {\n      function getCollName(coll) {\n        return coll.name;\n      }\n      var changes = [],\n        selectedCollections = arrayOfCollectionNames || this.collections.map(getCollName);\n\n      this.collections.forEach(function (coll) {\n        if (selectedCollections.indexOf(getCollName(coll)) !== -1) {\n          changes = changes.concat(coll.getChanges());\n        }\n      });\n      return changes;\n    };\n\n    /**\n     * (Changes API) - stringify changes for network transmission\n     * @returns {string} string representation of the changes\n     * @memberof Loki\n     */\n    Loki.prototype.serializeChanges = function (collectionNamesArray) {\n      return JSON.stringify(this.generateChangesNotification(collectionNamesArray));\n    };\n\n    /**\n     * (Changes API) : clears all the changes in all collections.\n     * @memberof Loki\n     */\n    Loki.prototype.clearChanges = function () {\n      this.collections.forEach(function (coll) {\n        if (coll.flushChanges) {\n          coll.flushChanges();\n        }\n      });\n    };\n\n    /*------------------+\n    | PERSISTENCE       |\n    -------------------*/\n\n\n    /** there are two build in persistence adapters for internal use\n     * fs             for use in Nodejs type environments\n     * localStorage   for use in browser environment\n     * defined as helper classes here so its easy and clean to use\n     */\n\n    /**\n     * A loki persistence adapter which persists using node fs module\n     * @constructor LokiFsAdapter\n     */\n    function LokiFsAdapter() {\n      this.fs = require('fs');\n    }\n\n    /**\n     * loadDatabase() - Load data from file, will throw an error if the file does not exist\n     * @param {string} dbname - the filename of the database to load\n     * @returns {Promise} a Promise that resolves after the database was loaded\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.loadDatabase = function loadDatabase(dbname) {\n      var self = this;\n\n      return new Promise(function (resolve, reject) {\n        self.fs.stat(dbname, function (err, stats) {\n          if (!err && stats.isFile()) {\n            self.fs.readFile(dbname, {\n              encoding: 'utf8'\n            }, function readFileCallback(err, data) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(data);\n              }\n            });\n          }\n          else {\n            reject();\n          }\n        });\n      });\n    };\n\n    /**\n     * saveDatabase() - save data to file, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @returns {Promise} a Promise that resolves after the database was persisted\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring) {\n      var self = this;\n\n      return new Promise(function (resolve, reject) {\n        self.fs.writeFile(dbname, dbstring, function (err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    };\n\n    /**\n     * deleteDatabase() - delete the database file, will throw an error if the\n     * file can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @returns {Promise} a Promise that resolves after the database was deleted\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.deleteDatabase = function deleteDatabase(dbname, callback) {\n      var self = this;\n\n      return new Promise(function (resolve, reject) {\n        self.fs.unlink(dbname, function deleteDatabaseCallback(err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    };\n\n\n    /**\n     * A loki persistence adapter which persists to web browser's local storage object\n     * @constructor LokiLocalStorageAdapter\n     */\n    function LokiLocalStorageAdapter() {}\n\n    /**\n     * loadDatabase() - Load data from localstorage\n     * @param {string} dbname - the name of the database to load\n     * @returns {Promise} a Promise that resolves after the database was loaded\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.loadDatabase = function loadDatabase(dbname) {\n      if (localStorageAvailable()) {\n        return Promise.resolve(localStorage.getItem(dbname));\n      }\n\n      return Promise.reject(new Error('localStorage is not available'));\n    };\n\n    /**\n     * saveDatabase() - save data to localstorage, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @returns {Promise} a Promise that resolves after the database was saved\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring) {\n      if (localStorageAvailable()) {\n        localStorage.setItem(dbname, dbstring);\n\n        return Promise.resolve();\n      }\n\n      return Promise.reject(new Error('localStorage is not available'));\n    };\n\n    /**\n     * deleteDatabase() - delete the database from localstorage, will throw an error if it\n     * can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @returns {Promise} a Promise that resolves after the database was deleted\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.deleteDatabase = function deleteDatabase(dbname) {\n      if (localStorageAvailable()) {\n        localStorage.removeItem(dbname);\n\n        return Promise.resolve();\n      }\n\n      return Promise.reject(new Error('localStorage is not available'));\n    };\n\n    /**\n     * Handles loading from file system, local storage, or adapter (indexeddb).\n     *\n     * @param {object} options - an object containing inflation options for each collection\n     * @returns {Promise} a Promise that resolves after the database is loaded\n     * @memberof Loki\n     */\n    Loki.prototype.loadDatabase = function (options) {\n      var self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter === null) {\n        return Promise.reject(new Error('persistenceAdapter not configured'));\n      }\n\n      return this.persistenceAdapter.loadDatabase(this.filename)\n        .then(function loadDatabaseCallback(dbString) {\n          if (typeof (dbString) === 'string') {\n            self.loadJSON(dbString, options || {});\n            self.emit('load', self);\n          } else {\n            // if adapter has returned an js object (other than null or error) attempt to load from JSON object\n            if (typeof (dbString) === \"object\" && dbString !== null && !(dbString instanceof Error)) {\n              self.loadJSONObject(dbString, options || {});\n              self.emit('load', self);\n            } else {\n              if (dbString instanceof Error)\n                throw dbString;\n\n              throw new TypeError('The persistence adapter did not load a serialized DB string or object.');\n            }\n          }\n        });\n    };\n\n    /**\n     * Handles saving to file system, local storage, or adapter (indexeddb)\n     *\n     * @memberof Loki\n     * @returns {Promise} a Promise that resolves after the database is persisted\n     */\n    Loki.prototype.saveDatabase = function () {\n      var self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter === null) {\n        return Promise.reject(new Error('persistenceAdapter not configured'));\n      }\n\n      var saved;\n\n      // check if the adapter is requesting (and supports) a 'reference' mode export\n      if (this.persistenceAdapter.mode === \"reference\" && typeof this.persistenceAdapter.exportDatabase === \"function\") {\n        // filename may seem redundant but loadDatabase will need to expect this same filename\n        saved = this.persistenceAdapter.exportDatabase(this.filename, this);\n      }\n      // otherwise just pass the serialized database to adapter\n      else {\n        saved = this.persistenceAdapter.saveDatabase(this.filename, self.serialize());\n      }\n\n      return saved.then(function () {\n        self.autosaveClearFlags();\n        self.emit(\"save\");\n      });\n    };\n\n    // alias\n    Loki.prototype.save = Loki.prototype.saveDatabase;\n\n    /**\n     * Handles deleting a database from file system, local storage, or adapter (indexeddb)\n     *\n     * @returns {Promise} a Promise that resolves after the database is deleted\n     * @memberof Loki\n     */\n    Loki.prototype.deleteDatabase = function () {\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter === null) {\n        return Promise.reject(new Error('persistenceAdapter not configured'));\n      }\n\n      return this.persistenceAdapter.deleteDatabase(this.filename);\n    };\n\n    /**\n     * autosaveDirty - check whether any collections are 'dirty' meaning we need to save (entire) database\n     *\n     * @returns {boolean} - true if database has changed since last autosave, false if not.\n     */\n    Loki.prototype.autosaveDirty = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        if (this.collections[idx].dirty) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * autosaveClearFlags - resets dirty flags on all collections.\n     *    Called from saveDatabase() after db is saved.\n     *\n     */\n    Loki.prototype.autosaveClearFlags = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        this.collections[idx].dirty = false;\n      }\n    };\n\n    /**\n     * autosaveEnable - begin a javascript interval to periodically save the database.\n     *\n     */\n    Loki.prototype.autosaveEnable = function () {\n      if (this.autosaveHandle) {\n        return;\n      }\n\n      var self = this;\n      var running = true;\n\n      this.autosave = true;\n      this.autosaveHandle = function () {\n        running = false;\n        self.autosaveHandle = undefined;\n      };\n\n      (function saveDatabase() {\n        setTimeout(function () {\n          if (running) {\n            self.saveDatabase().then(saveDatabase, saveDatabase);\n          }\n        }, self.autosaveInterval);\n      })();\n    };\n\n    /**\n     * autosaveDisable - stop the autosave interval timer.\n     *\n     */\n    Loki.prototype.autosaveDisable = function () {\n      this.autosave = false;\n\n      if (this.autosaveHandle) {\n        this.autosaveHandle();\n      }\n    };\n\n\n    /**\n     * Resultset class allowing chainable queries.  Intended to be instanced internally.\n     *    Collection.find(), Collection.where(), and Collection.chain() instantiate this.\n     *\n     * @example\n     *    mycollection.chain()\n     *      .find({ 'doors' : 4 })\n     *      .where(function(obj) { return obj.name === 'Toyota' })\n     *      .data();\n     *\n     * @constructor Resultset\n     * @param {Collection} collection - The collection which this Resultset will query against.\n     * @param {Object=} options - Object containing one or more options.\n     * @param {string} options.queryObj - Optional mongo-style query object to initialize resultset with.\n     * @param {function} options.queryFunc - Optional javascript filter function to initialize resultset with.\n     * @param {bool} options.firstOnly - Optional boolean used by collection.findOne().\n     */\n    function Resultset(collection, options) {\n      options = options || {};\n\n      options.queryObj = options.queryObj || null;\n      options.queryFunc = options.queryFunc || null;\n      options.firstOnly = options.firstOnly || false;\n\n      // retain reference to collection we are querying against\n      this.collection = collection;\n\n      // if chain() instantiates with null queryObj and queryFunc, so we will keep flag for later\n      this.searchIsChained = (!options.queryObj && !options.queryFunc);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      // if user supplied initial queryObj or queryFunc, apply it\n      if (typeof (options.queryObj) !== \"undefined\" && options.queryObj !== null) {\n        return this.find(options.queryObj, options.firstOnly);\n      }\n      if (typeof (options.queryFunc) !== \"undefined\" && options.queryFunc !== null) {\n        return this.where(options.queryFunc);\n      }\n\n      // otherwise return unfiltered Resultset for future filtering\n      return this;\n    }\n\n    /**\n     * reset() - Reset the resultset to its initial state.\n     *\n     * @returns {Resultset} Reference to this resultset, for future chain operations.\n     */\n    Resultset.prototype.reset = function () {\n      if (this.filteredrows.length > 0) {\n        this.filteredrows = [];\n      }\n      this.filterInitialized = false;\n      return this;\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    Resultset.prototype.toJSON = function () {\n      var copy = this.copy();\n      copy.collection = null;\n      return copy;\n    };\n\n    /**\n     * Allows you to limit the number of documents passed to next chain operation.\n     *    A resultset copy() is made to avoid altering original resultset.\n     *\n     * @param {int} qty - The number of documents to return.\n     * @returns {Resultset} Returns a copy of the resultset, limited by qty, for subsequent chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.limit = function (qty) {\n      // if this is chained resultset with no filters applied, we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(0, qty);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * Used for skipping 'pos' number of documents in the resultset.\n     *\n     * @param {int} pos - Number of documents to skip; all preceding documents are filtered out.\n     * @returns {Resultset} Returns a copy of the resultset, containing docs starting at 'pos' for subsequent chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.offset = function (pos) {\n      // if this is chained resultset with no filters applied, we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(pos);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * copy() - To support reuse of resultset in branched query situations.\n     *\n     * @returns {Resultset} Returns a copy of the resultset (set) but the underlying document references will be the same.\n     * @memberof Resultset\n     */\n    Resultset.prototype.copy = function () {\n      var result = new Resultset(this.collection);\n\n      if (this.filteredrows.length > 0) {\n        result.filteredrows = this.filteredrows.slice();\n      }\n      result.filterInitialized = this.filterInitialized;\n\n      return result;\n    };\n\n    /**\n     * Alias of copy()\n     * @memberof Resultset\n     */\n    Resultset.prototype.branch = Resultset.prototype.copy;\n\n    /**\n     * transform() - executes a named collection transform or raw array of transform steps against the resultset.\n     *\n     * @param transform {(string|array)} - name of collection transform or raw transform array\n     * @param parameters {object=} - (Optional) object property hash of parameters, if the transform requires them.\n     * @returns {Resultset} either (this) resultset or a clone of of this resultset (depending on steps)\n     * @memberof Resultset\n     */\n    Resultset.prototype.transform = function (transform, parameters) {\n      var idx,\n        step,\n        rs = this;\n\n      // if transform is name, then do lookup first\n      if (typeof transform === 'string') {\n        if (this.collection.transforms.hasOwnProperty(transform)) {\n          transform = this.collection.transforms[transform];\n        }\n      }\n\n      // either they passed in raw transform array or we looked it up, so process\n      if (typeof transform !== 'object' || !Array.isArray(transform)) {\n        throw new Error(\"Invalid transform\");\n      }\n\n      if (typeof parameters !== 'undefined') {\n        transform = Utils.resolveTransformParams(transform, parameters);\n      }\n\n      for (idx = 0; idx < transform.length; idx++) {\n        step = transform[idx];\n\n        switch (step.type) {\n        case \"find\":\n          rs.find(step.value);\n          break;\n        case \"where\":\n          rs.where(step.value);\n          break;\n        case \"simplesort\":\n          rs.simplesort(step.property, step.desc);\n          break;\n        case \"compoundsort\":\n          rs.compoundsort(step.value);\n          break;\n        case \"sort\":\n          rs.sort(step.value);\n          break;\n        case \"limit\":\n          rs = rs.limit(step.value);\n          break; // limit makes copy so update reference\n        case \"offset\":\n          rs = rs.offset(step.value);\n          break; // offset makes copy so update reference\n        case \"map\":\n          rs = rs.map(step.value);\n          break;\n        case \"eqJoin\":\n          rs = rs.eqJoin(step.joinData, step.leftJoinKey, step.rightJoinKey, step.mapFun);\n          break;\n          // following cases break chain by returning array data so make any of these last in transform steps\n        case \"mapReduce\":\n          rs = rs.mapReduce(step.mapFunction, step.reduceFunction);\n          break;\n          // following cases update documents in current filtered resultset (use carefully)\n        case \"update\":\n          rs.update(step.value);\n          break;\n        case \"remove\":\n          rs.remove();\n          break;\n        default:\n          break;\n        }\n      }\n\n      return rs;\n    };\n\n    /**\n     * User supplied compare function is provided two documents to compare. (chainable)\n     * @example\n     *    rslt.sort(function(obj1, obj2) {\n     *      if (obj1.name === obj2.name) return 0;\n     *      if (obj1.name > obj2.name) return 1;\n     *      if (obj1.name < obj2.name) return -1;\n     *    });\n     *\n     * @param {function} comparefun - A javascript compare function used for sorting.\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.sort = function (comparefun) {\n      // if this is chained resultset with no filters applied, just we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (userComparer, data) {\n          return function (a, b) {\n            return userComparer(data[a], data[b]);\n          };\n        })(comparefun, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Simpler, loose evaluation for user to sort based on a property name. (chainable).\n     *    Sorting based on the same lt/gt helper functions used for binary indices.\n     *\n     * @param {string} propname - name of property to sort by.\n     * @param {bool=} isdesc - (Optional) If true, the property will be sorted in descending order\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.simplesort = function (propname, isdesc) {\n      // if this is chained resultset with no filters applied, just we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      if (typeof (isdesc) === 'undefined') {\n        isdesc = false;\n      }\n\n      var wrappedComparer =\n        (function (prop, desc, data) {\n          return function (a, b) {\n            return sortHelper(data[a][prop], data[b][prop], desc);\n          };\n        })(propname, isdesc, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * rs.compoundsort(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * rs.compoundsort(['age', ['name', true]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.compoundsort = function (properties) {\n      if (properties.length === 0) {\n        throw new Error(\"Invalid call to compoundsort, need at least one property\");\n      }\n\n      var prop;\n      if (properties.length === 1) {\n        prop = properties[0];\n        if (Array.isArray(prop)) {\n          return this.simplesort(prop[0], prop[1]);\n        }\n        return this.simplesort(prop, false);\n      }\n\n      // unify the structure of 'properties' to avoid checking it repeatedly while sorting\n      for (var i = 0, len = properties.length; i < len; i += 1) {\n        prop = properties[i];\n        if (!Array.isArray(prop)) {\n          properties[i] = [prop, false];\n        }\n      }\n\n      // if this is chained resultset with no filters applied, just we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (props, data) {\n          return function (a, b) {\n            return compoundeval(props, data[a], data[b]);\n          };\n        })(properties, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * findOr() - oversee the operation of OR'ed query expressions.\n     *    OR'ed expression evaluation runs each expression individually against the full collection,\n     *    and finally does a set OR on each expression's results.\n     *    Each evaluation can utilize a binary index to prevent multiple linear array scans.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findOr = function (expressionArray) {\n      var fr = null,\n        fri = 0,\n        frlen = 0,\n        docset = [],\n        idxset = [],\n        idx = 0,\n        origCount = this.count();\n\n      // If filter is already initialized, then we query against only those items already in filter.\n      // This means no index utilization for fields, so hopefully its filtered to a smallish filteredrows.\n      for (var ei = 0, elen = expressionArray.length; ei < elen; ei++) {\n        // we need to branch existing query to run each filter separately and combine results\n        fr = this.branch().find(expressionArray[ei]).filteredrows;\n        frlen = fr.length;\n        // if the find operation did not reduce the initial set, then the initial set is the actual result\n        if (frlen === origCount) {\n          return this;\n        }\n\n        // add any document 'hits'\n        for (fri = 0; fri < frlen; fri++) {\n          idx = fr[fri];\n          if (idxset[idx] === undefined) {\n            idxset[idx] = true;\n            docset.push(idx);\n          }\n        }\n      }\n\n      this.filteredrows = docset;\n      this.filterInitialized = true;\n\n      return this;\n    };\n    Resultset.prototype.$or = Resultset.prototype.findOr;\n\n    /**\n     * findAnd() - oversee the operation of AND'ed query expressions.\n     *    AND'ed expression evaluation runs each expression progressively against the full collection,\n     *    internally utilizing existing chained resultset functionality.\n     *    Only the first filter can utilize a binary index.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findAnd = function (expressionArray) {\n      // we have already implementing method chaining in this (our Resultset class)\n      // so lets just progressively apply user supplied and filters\n      for (var i = 0, len = expressionArray.length; i < len; i++) {\n        if (this.count() === 0) {\n          return this;\n        }\n        this.find(expressionArray[i]);\n      }\n      return this;\n    };\n    Resultset.prototype.$and = Resultset.prototype.findAnd;\n\n    /**\n     * Used for querying via a mongo-style query object.\n     *\n     * @param {object} query - A mongo-style query object used for filtering current results.\n     * @param {boolean=} firstOnly - (Optional) Used by collection.findOne()\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.find = function (query, firstOnly) {\n      if (this.collection.data.length === 0) {\n        if (this.searchIsChained) {\n          this.filteredrows = [];\n          this.filterInitialized = true;\n          return this;\n        }\n        return [];\n      }\n\n      var queryObject = query || 'getAll',\n        p,\n        property,\n        queryObjectOp,\n        operator,\n        value,\n        key,\n        searchByIndex = false,\n        result = [],\n        index = null;\n\n      // if this was note invoked via findOne()\n      firstOnly = firstOnly || false;\n\n      if (typeof queryObject === 'object') {\n        for (p in queryObject) {\n          if (hasOwnProperty.call(queryObject, p)) {\n            property = p;\n            queryObjectOp = queryObject[p];\n            break;\n          }\n        }\n      }\n\n      // apply no filters if they want all\n      if (!property || queryObject === 'getAll') {\n        // coll.find(), coll.findOne(), coll.chain().find().data() all path here\n\n        if (firstOnly) {\n          return (this.collection.data.length > 0)?this.collection.data[0]: null;\n        }\n\n        return (this.searchIsChained) ? (this) : (this.collection.data.slice());\n      }\n\n      // injecting $and and $or expression tree evaluation here.\n      if (property === '$and' || property === '$or') {\n        if (this.searchIsChained) {\n          this[property](queryObjectOp);\n\n          // for chained find with firstonly,\n          if (firstOnly && this.filteredrows.length > 1) {\n            this.filteredrows = this.filteredrows.slice(0, 1);\n          }\n\n          return this;\n        } else {\n          // our $and operation internally chains filters\n          result = this.collection.chain()[property](queryObjectOp).data();\n\n          // if this was coll.findOne() return first object or empty array if null\n          // since this is invoked from a constructor we can't return null, so we will\n          // make null in coll.findOne();\n          if (firstOnly) {\n            return (result.length === 0) ? ([]) : (result[0]);\n          }\n\n          // not first only return all results\n          return result;\n        }\n      }\n\n      // see if query object is in shorthand mode (assuming eq operator)\n      if (queryObjectOp === null || (typeof queryObjectOp !== 'object' || queryObjectOp instanceof Date)) {\n        operator = '$eq';\n        value = queryObjectOp;\n      } else if (typeof queryObjectOp === 'object') {\n        for (key in queryObjectOp) {\n          if (hasOwnProperty.call(queryObjectOp, key)) {\n            operator = key;\n            value = queryObjectOp[key];\n            break;\n          }\n        }\n      } else {\n        throw new Error('Do not know what you want to do.');\n      }\n\n      // for regex ops, precompile\n      if (operator === '$regex') {\n        if (Array.isArray(value)) {\n          value = new RegExp(value[0], value[1]);\n        } else if (!(value instanceof RegExp)) {\n          value = new RegExp(value);\n        }\n      }\n\n      // if user is deep querying the object such as find('name.first': 'odin')\n      var usingDotNotation = (property.indexOf('.') !== -1);\n\n      // if an index exists for the property being queried against, use it\n      // for now only enabling for non-chained query (who's set of docs matches index)\n      // or chained queries where it is the first filter applied and prop is indexed\n      var doIndexCheck = !usingDotNotation &&\n        (!this.searchIsChained || !this.filterInitialized);\n\n      if (doIndexCheck && this.collection.binaryIndices[property] &&\n        indexedOpsList.indexOf(operator) !== -1) {\n        // this is where our lazy index rebuilding will take place\n        // basically we will leave all indexes dirty until we need them\n        // so here we will rebuild only the index tied to this property\n        // ensureIndex() will only rebuild if flagged as dirty since we are not passing force=true param\n        if (this.collection.adaptiveBinaryIndices !== true) {\n          this.collection.ensureIndex(property);\n        }\n\n        searchByIndex = true;\n        index = this.collection.binaryIndices[property];\n      }\n\n      // the comparison function\n      var fun = LokiOps[operator];\n\n      // \"shortcut\" for collection data\n      var t = this.collection.data;\n      // filter data length\n      var i = 0;\n\n      // Query executed differently depending on :\n      //    - whether it is chained or not\n      //    - whether the property being queried has an index defined\n      //    - if chained, we handle first pass differently for initial filteredrows[] population\n      //\n      // For performance reasons, each case has its own if block to minimize in-loop calculations\n\n      // If not a chained query, bypass filteredrows and work directly against data\n      if (!this.searchIsChained) {\n        if (!searchByIndex) {\n          i = t.length;\n\n          if (firstOnly) {\n            if (usingDotNotation) {\n              property = property.split('.');\n              while (i--) {\n                if (dotSubScan(t[i], property, fun, value)) {\n                  return (t[i]);\n                }\n              }\n            } else {\n              while (i--) {\n                if (fun(t[i][property], value)) {\n                  return (t[i]);\n                }\n              }\n            }\n\n            return [];\n          }\n\n          // if using dot notation then treat property as keypath such as 'name.first'.\n          // currently supporting dot notation for non-indexed conditions only\n          if (usingDotNotation) {\n            property = property.split('.');\n            while (i--) {\n              if (dotSubScan(t[i], property, fun, value)) {\n                result.push(t[i]);\n              }\n            }\n          } else {\n            while (i--) {\n              if (fun(t[i][property], value)) {\n                result.push(t[i]);\n              }\n            }\n          }\n        } else {\n          // searching by binary index via calculateRange() utility method\n          var seg = this.collection.calculateRange(operator, property, value);\n\n          // not chained so this 'find' was designated in Resultset constructor\n          // so return object itself\n          if (firstOnly) {\n            if (seg[1] !== -1) {\n              return t[index.values[seg[0]]];\n            }\n            return [];\n          }\n\n          for (i = seg[0]; i <= seg[1]; i++) {\n            result.push(t[index.values[i]]);\n          }\n        }\n\n        // not a chained query so return result as data[]\n        return result;\n      }\n\n\n      // Otherwise this is a chained query\n\n      var filter, rowIdx = 0;\n\n      // If the filteredrows[] is already initialized, use it\n      if (this.filterInitialized) {\n        filter = this.filteredrows;\n        i = filter.length;\n\n        // currently supporting dot notation for non-indexed conditions only\n        if (usingDotNotation) {\n          property = property.split('.');\n          while (i--) {\n            rowIdx = filter[i];\n            if (dotSubScan(t[rowIdx], property, fun, value)) {\n              result.push(rowIdx);\n            }\n          }\n        } else {\n          while (i--) {\n            rowIdx = filter[i];\n            if (fun(t[rowIdx][property], value)) {\n              result.push(rowIdx);\n            }\n          }\n        }\n      }\n      // first chained query so work against data[] but put results in filteredrows\n      else {\n        // if not searching by index\n        if (!searchByIndex) {\n          i = t.length;\n\n          if (usingDotNotation) {\n            property = property.split('.');\n            while (i--) {\n              if (dotSubScan(t[i], property, fun, value)) {\n                result.push(i);\n              }\n            }\n          } else {\n            while (i--) {\n              if (fun(t[i][property], value)) {\n                result.push(i);\n              }\n            }\n          }\n        } else {\n          // search by index\n          var segm = this.collection.calculateRange(operator, property, value);\n\n          for (i = segm[0]; i <= segm[1]; i++) {\n            result.push(index.values[i]);\n          }\n        }\n\n        this.filterInitialized = true; // next time work against filteredrows[]\n      }\n\n      this.filteredrows = result;\n      return this;\n    };\n\n\n    /**\n     * where() - Used for filtering via a javascript filter function.\n     *\n     * @param {function} fun - A javascript function used for filtering current results by.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.where = function (fun) {\n      var viewFunction,\n        result = [];\n\n      if ('function' === typeof fun) {\n        viewFunction = fun;\n      } else {\n        throw new TypeError('Argument is not a stored view or a function');\n      }\n      try {\n        // if not a chained query then run directly against data[] and return object []\n        if (!this.searchIsChained) {\n          var i = this.collection.data.length;\n\n          while (i--) {\n            if (viewFunction(this.collection.data[i]) === true) {\n              result.push(this.collection.data[i]);\n            }\n          }\n\n          // not a chained query so returning result as data[]\n          return result;\n        }\n        // else chained query, so run against filteredrows\n        else {\n          // If the filteredrows[] is already initialized, use it\n          if (this.filterInitialized) {\n            var j = this.filteredrows.length;\n\n            while (j--) {\n              if (viewFunction(this.collection.data[this.filteredrows[j]]) === true) {\n                result.push(this.filteredrows[j]);\n              }\n            }\n\n            this.filteredrows = result;\n\n            return this;\n          }\n          // otherwise this is initial chained op, work against data, push into filteredrows[]\n          else {\n            var k = this.collection.data.length;\n\n            while (k--) {\n              if (viewFunction(this.collection.data[k]) === true) {\n                result.push(k);\n              }\n            }\n\n            this.filteredrows = result;\n            this.filterInitialized = true;\n\n            return this;\n          }\n        }\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * count() - returns the number of documents in the resultset.\n     *\n     * @returns {number} The number of documents in the resultset.\n     * @memberof Resultset\n     */\n    Resultset.prototype.count = function () {\n      if (this.searchIsChained && this.filterInitialized) {\n        return this.filteredrows.length;\n      }\n      return this.collection.count();\n    };\n\n    /**\n     * Terminates the chain and returns array of filtered documents\n     *\n     * @param {object=} options - allows specifying 'forceClones' and 'forceCloneMethod' options.\n     * @param {boolean} options.forceClones - Allows forcing the return of cloned objects even when\n     *        the collection is not configured for clone object.\n     * @param {string} options.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     *        Possible values include 'parse-stringify', 'jquery-extend-deep', and 'shallow'\n     *\n     * @returns {array} Array of documents in the resultset\n     * @memberof Resultset\n     */\n    Resultset.prototype.data = function (options) {\n      var result = [],\n        data = this.collection.data,\n        len,\n        i,\n        method;\n\n      options = options || {};\n\n      // if this is chained resultset with no filters applied, just return collection.data\n      if (this.searchIsChained && !this.filterInitialized) {\n        if (this.filteredrows.length === 0) {\n          // determine whether we need to clone objects or not\n          if (this.collection.cloneObjects || options.forceClones) {\n            len = data.length;\n            method = options.forceCloneMethod || this.collection.cloneMethod;\n\n            for (i = 0; i < len; i++) {\n              result.push(clone(data[i], method));\n            }\n            return result;\n          }\n          // otherwise we are not cloning so return sliced array with same object references\n          else {\n            return data.slice();\n          }\n        } else {\n          // filteredrows must have been set manually, so use it\n          this.filterInitialized = true;\n        }\n      }\n\n      var fr = this.filteredrows;\n      len = fr.length;\n\n      if (this.collection.cloneObjects || options.forceClones) {\n        method = options.forceCloneMethod || this.collection.cloneMethod;\n        for (i = 0; i < len; i++) {\n          result.push(clone(data[fr[i]], method));\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          result.push(data[fr[i]]);\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Used to run an update operation on all documents currently in the resultset.\n     *\n     * @param {function} updateFunction - User supplied updateFunction(obj) will be executed for each document object.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.update = function (updateFunction) {\n\n      if (typeof (updateFunction) !== \"function\") {\n        throw new TypeError('Argument is not a function');\n      }\n\n      // if this is chained resultset with no filters applied, we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var len = this.filteredrows.length,\n        rcd = this.collection.data;\n\n      for (var idx = 0; idx < len; idx++) {\n        // pass in each document object currently in resultset to user supplied updateFunction\n        updateFunction(rcd[this.filteredrows[idx]]);\n\n        // notify collection we have changed this object so it can update meta and allow DynamicViews to re-evaluate\n        this.collection.update(rcd[this.filteredrows[idx]]);\n      }\n\n      return this;\n    };\n\n    /**\n     * Removes all document objects which are currently in resultset from collection (as well as resultset)\n     *\n     * @returns {Resultset} this (empty) resultset for further chain ops.\n     * @memberof Resultset\n     */\n    Resultset.prototype.remove = function () {\n\n      // if this is chained resultset with no filters applied, we need to populate filteredrows first\n      if (this.searchIsChained && !this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      this.collection.remove(this.data());\n\n      this.filteredrows = [];\n\n      return this;\n    };\n\n    /**\n     * data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns {value} The output of your reduceFunction\n     * @memberof Resultset\n     */\n    Resultset.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * eqJoin() - Left joining two sets of data. Join keys can be defined or calculated properties\n     * eqJoin expects the right join key values to be unique.  Otherwise left data will be joined on the last joinData object with that key\n     * @param {Array} joinData - Data array to join to.\n     * @param {(string|function)} leftJoinKey - Property name in this result set to join on or a function to produce a value to join on\n     * @param {(string|function)} rightJoinKey - Property name in the joinData to join on or a function to produce a value to join on\n     * @param {function=} mapFun - (Optional) A function that receives each matching pair and maps them into output objects - function(left,right){return joinedObject}\n     * @returns {Resultset} A resultset with data in the format [{left: leftObj, right: rightObj}]\n     * @memberof Resultset\n     */\n    Resultset.prototype.eqJoin = function (joinData, leftJoinKey, rightJoinKey, mapFun) {\n\n      var leftData = [],\n        leftDataLength,\n        rightData = [],\n        rightDataLength,\n        key,\n        result = [],\n        leftKeyisFunction = typeof leftJoinKey === 'function',\n        rightKeyisFunction = typeof rightJoinKey === 'function',\n        joinMap = {};\n\n      //get the left data\n      leftData = this.data();\n      leftDataLength = leftData.length;\n\n      //get the right data\n      if (joinData instanceof Resultset) {\n        rightData = joinData.data();\n      } else if (Array.isArray(joinData)) {\n        rightData = joinData;\n      } else {\n        throw new TypeError('joinData needs to be an array or result set');\n      }\n      rightDataLength = rightData.length;\n\n      //construct a lookup table\n\n      for (var i = 0; i < rightDataLength; i++) {\n        key = rightKeyisFunction ? rightJoinKey(rightData[i]) : rightData[i][rightJoinKey];\n        joinMap[key] = rightData[i];\n      }\n\n      if (!mapFun) {\n        mapFun = function (left, right) {\n          return {\n            left: left,\n            right: right\n          };\n        };\n      }\n\n      //Run map function over each object in the resultset\n      for (var j = 0; j < leftDataLength; j++) {\n        key = leftKeyisFunction ? leftJoinKey(leftData[j]) : leftData[j][leftJoinKey];\n        result.push(mapFun(leftData[j], joinMap[key] || {}));\n      }\n\n      //return return a new resultset with no filters\n      this.collection = new Collection('joinData');\n      this.collection.insert(result);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    Resultset.prototype.map = function (mapFun) {\n      var data = this.data().map(mapFun);\n      //return return a new resultset with no filters\n      this.collection = new Collection('mappedData');\n      this.collection.insert(data);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    /**\n     * DynamicView class is a versatile 'live' view class which can have filters and sorts applied.\n     *    Collection.addDynamicView(name) instantiates this DynamicView object and notifies it\n     *    whenever documents are add/updated/removed so it can remain up-to-date. (chainable)\n     *\n     * @example\n     * var mydv = mycollection.addDynamicView('test');  // default is non-persistent\n     * mydv.applyFind({ 'doors' : 4 });\n     * mydv.applyWhere(function(obj) { return obj.name === 'Toyota'; });\n     * var results = mydv.data();\n     *\n     * @constructor DynamicView\n     * @implements LokiEventEmitter\n     * @param {Collection} collection - A reference to the collection to work against\n     * @param {string} name - The name of this dynamic view\n     * @param {object=} options - (Optional) Pass in object with 'persistent' and/or 'sortPriority' options.\n     * @param {boolean} options.persistent - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} options.sortPriority - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @see {@link Collection#addDynamicView} to construct instances of DynamicView\n     */\n    function DynamicView(collection, name, options) {\n      this.collection = collection;\n      this.name = name;\n      this.rebuildPending = false;\n      this.options = options || {};\n\n      if (!this.options.hasOwnProperty('persistent')) {\n        this.options.persistent = false;\n      }\n\n      // 'persistentSortPriority':\n      // 'passive' will defer the sort phase until they call data(). (most efficient overall)\n      // 'active' will sort async whenever next idle. (prioritizes read speeds)\n      if (!this.options.hasOwnProperty('sortPriority')) {\n        this.options.sortPriority = 'passive';\n      }\n\n      if (!this.options.hasOwnProperty('minRebuildInterval')) {\n        this.options.minRebuildInterval = 1;\n      }\n\n      this.resultset = new Resultset(collection);\n      this.resultdata = [];\n      this.resultsdirty = false;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortDirty = false;\n\n      // for now just have 1 event for when we finally rebuilt lazy view\n      // once we refactor transactions, i will tie in certain transactional events\n\n      this.events = {\n        'rebuild': []\n      };\n    }\n\n    DynamicView.prototype = new LokiEventEmitter();\n\n\n    /**\n     * rematerialize() - intended for use immediately after deserialization (loading)\n     *    This will clear out and reapply filterPipeline ops, recreating the view.\n     *    Since where filters do not persist correctly, this method allows\n     *    restoring the view to state where user can re-apply those where filters.\n     *\n     * @param {Object=} options - (Optional) allows specification of 'removeWhereFilters' option\n     * @returns {DynamicView} This dynamic view for further chained ops.\n     * @memberof DynamicView\n     * @fires DynamicView.rebuild\n     */\n    DynamicView.prototype.rematerialize = function (options) {\n      var fpl,\n        fpi,\n        idx;\n\n      options = options || {};\n\n      this.resultdata = [];\n      this.resultsdirty = true;\n      this.resultset = new Resultset(this.collection);\n\n      if (this.sortFunction || this.sortCriteria) {\n        this.sortDirty = true;\n      }\n\n      if (options.hasOwnProperty('removeWhereFilters')) {\n        // for each view see if it had any where filters applied... since they don't\n        // serialize those functions lets remove those invalid filters\n        fpl = this.filterPipeline.length;\n        fpi = fpl;\n        while (fpi--) {\n          if (this.filterPipeline[fpi].type === 'where') {\n            if (fpi !== this.filterPipeline.length - 1) {\n              this.filterPipeline[fpi] = this.filterPipeline[this.filterPipeline.length - 1];\n            }\n\n            this.filterPipeline.length--;\n          }\n        }\n      }\n\n      // back up old filter pipeline, clear filter pipeline, and reapply pipeline ops\n      var ofp = this.filterPipeline;\n      this.filterPipeline = [];\n\n      // now re-apply 'find' filterPipeline ops\n      fpl = ofp.length;\n      for (idx = 0; idx < fpl; idx++) {\n        this.applyFind(ofp[idx].val);\n      }\n\n      // during creation of unit tests, i will remove this forced refresh and leave lazy\n      this.data();\n\n      // emit rebuild event in case user wants to be notified\n      this.emit('rebuild', this);\n\n      return this;\n    };\n\n    /**\n     * branchResultset() - Makes a copy of the internal resultset for branched queries.\n     *    Unlike this dynamic view, the branched resultset will not be 'live' updated,\n     *    so your branched query should be immediately resolved and not held for future evaluation.\n     *\n     * @param {(string|array=)} transform - Optional name of collection transform, or an array of transform steps\n     * @param {object=} parameters - optional parameters (if optional transform requires them)\n     * @returns {Resultset} A copy of the internal resultset for branched queries.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.branchResultset = function (transform, parameters) {\n      var rs = this.resultset.branch();\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    DynamicView.prototype.toJSON = function () {\n      var copy = new DynamicView(this.collection, this.name, this.options);\n\n      copy.resultset = this.resultset;\n      copy.resultdata = []; // let's not save data (copy) to minimize size\n      copy.resultsdirty = true;\n      copy.filterPipeline = this.filterPipeline;\n      copy.sortFunction = this.sortFunction;\n      copy.sortCriteria = this.sortCriteria;\n      copy.sortDirty = this.sortDirty;\n\n      // avoid circular reference, reapply in db.loadJSON()\n      copy.collection = null;\n\n      return copy;\n    };\n\n    /**\n     * removeFilters() - Used to clear pipeline and reset dynamic view to initial state.\n     *     Existing options should be retained.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilters = function () {\n      this.rebuildPending = false;\n      this.resultset.reset();\n      this.resultdata = [];\n      this.resultsdirty = false;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortDirty = false;\n    };\n\n    /**\n     * applySort() - Used to apply a sort to the dynamic view\n     * @example\n     * dv.applySort(function(obj1, obj2) {\n     *   if (obj1.name === obj2.name) return 0;\n     *   if (obj1.name > obj2.name) return 1;\n     *   if (obj1.name < obj2.name) return -1;\n     * });\n     *\n     * @param {function} comparefun - a javascript compare function used for sorting\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySort = function (comparefun) {\n      this.sortFunction = comparefun;\n      this.sortCriteria = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySimpleSort() - Used to specify a property used for view translation.\n     * @example\n     * dv.applySimpleSort(\"name\");\n     *\n     * @param {string} propname - Name of property by which to sort.\n     * @param {boolean=} isdesc - (Optional) If true, the sort will be in descending order.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySimpleSort = function (propname, isdesc) {\n      this.sortCriteria = [\n        [propname, isdesc || false]\n      ];\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySortCriteria() - Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * dv.applySortCriteria(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * dv.applySortCriteria(['age', ['name', true]);\n     * // to sort by age (descending) and then by name (descending)\n     * dv.applySortCriteria(['age', true], ['name', true]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {DynamicView} Reference to this DynamicView, sorted, for future chain operations.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySortCriteria = function (criteria) {\n      this.sortCriteria = criteria;\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * startTransaction() - marks the beginning of a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.startTransaction = function () {\n      this.cachedresultset = this.resultset.copy();\n\n      return this;\n    };\n\n    /**\n     * commit() - commits a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.commit = function () {\n      this.cachedresultset = null;\n\n      return this;\n    };\n\n    /**\n     * rollback() - rolls back a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.rollback = function () {\n      this.resultset = this.cachedresultset;\n\n      if (this.options.persistent) {\n        // for now just rebuild the persistent dynamic view data in this worst case scenario\n        // (a persistent view utilizing transactions which get rolled back), we already know the filter so not too bad.\n        this.resultdata = this.resultset.data();\n\n        this.emit('rebuild', this);\n      }\n\n      return this;\n    };\n\n\n    /**\n     * Implementation detail.\n     * _indexOfFilterWithId() - Find the index of a filter in the pipeline, by that filter's ID.\n     *\n     * @param {(string|number)} uid - The unique ID of the filter.\n     * @returns {number}: index of the referenced filter in the pipeline; -1 if not found.\n     */\n    DynamicView.prototype._indexOfFilterWithId = function (uid) {\n      if (typeof uid === 'string' || typeof uid === 'number') {\n        for (var idx = 0, len = this.filterPipeline.length; idx < len; idx += 1) {\n          if (uid === this.filterPipeline[idx].uid) {\n            return idx;\n          }\n        }\n      }\n      return -1;\n    };\n\n    /**\n     * Implementation detail.\n     * _addFilter() - Add the filter object to the end of view's filter pipeline and apply the filter to the resultset.\n     *\n     * @param {object} filter - The filter object. Refer to applyFilter() for extra details.\n     */\n    DynamicView.prototype._addFilter = function (filter) {\n      this.filterPipeline.push(filter);\n      this.resultset[filter.type](filter.val);\n    };\n\n    /**\n     * reapplyFilters() - Reapply all the filters in the current pipeline.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.reapplyFilters = function () {\n      this.resultset.reset();\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      var filters = this.filterPipeline;\n      this.filterPipeline = [];\n\n      for (var idx = 0, len = filters.length; idx < len; idx += 1) {\n        this._addFilter(filters[idx]);\n      }\n\n      if (this.sortFunction || this.sortCriteria) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFilter() - Adds or updates a filter in the DynamicView filter pipeline\n     *\n     * @param {object} filter - A filter object to add to the pipeline.\n     *    The object is in the format { 'type': filter_type, 'val', filter_param, 'uid', optional_filter_id }\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFilter = function (filter) {\n      var idx = this._indexOfFilterWithId(filter.uid);\n      if (idx >= 0) {\n        this.filterPipeline[idx] = filter;\n        return this.reapplyFilters();\n      }\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      this._addFilter(filter);\n\n      if (this.sortFunction || this.sortCriteria) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFind() - Adds or updates a mongo-style query option in the DynamicView filter pipeline\n     *\n     * @param {object} query - A mongo-style query object to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFind = function (query, uid) {\n      this.applyFilter({\n        type: 'find',\n        val: query,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * applyWhere() - Adds or updates a javascript filter function in the DynamicView filter pipeline\n     *\n     * @param {function} fun - A javascript filter function to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyWhere = function (fun, uid) {\n      this.applyFilter({\n        type: 'where',\n        val: fun,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * removeFilter() - Remove the specified filter from the DynamicView filter pipeline\n     *\n     * @param {(string|number)} uid - The unique ID of the filter to be removed.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilter = function (uid) {\n      var idx = this._indexOfFilterWithId(uid);\n      if (idx < 0) {\n        throw new Error(\"Dynamic view does not contain a filter with ID: \" + uid);\n      }\n\n      this.filterPipeline.splice(idx, 1);\n      this.reapplyFilters();\n      return this;\n    };\n\n    /**\n     * count() - returns the number of documents representing the current DynamicView contents.\n     *\n     * @returns {number} The number of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.count = function () {\n      if (this.options.persistent) {\n        return this.resultdata.length;\n      }\n      return this.resultset.count();\n    };\n\n    /**\n     * data() - resolves and pending filtering and sorting, then returns document array as result.\n     *\n     * @returns {array} An array of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.data = function () {\n      // using final sort phase as 'catch all' for a few use cases which require full rebuild\n      if (this.sortDirty || this.resultsdirty) {\n        this.performSortPhase({\n          suppressRebuildEvent: true\n        });\n      }\n      return (this.options.persistent) ? (this.resultdata) : (this.resultset.data());\n    };\n\n    /**\n     * queueRebuildEvent() - When the view is not sorted we may still wish to be notified of rebuild events.\n     *     This event will throttle and queue a single rebuild event when batches of updates affect the view.\n     */\n    DynamicView.prototype.queueRebuildEvent = function () {\n      if (this.rebuildPending) {\n        return;\n      }\n      this.rebuildPending = true;\n\n      var self = this;\n      setTimeout(function () {\n        if (self.rebuildPending) {\n          self.rebuildPending = false;\n          self.emit('rebuild', self);\n        }\n      }, this.options.minRebuildInterval);\n    };\n\n    /**\n     * queueSortPhase : If the view is sorted we will throttle sorting to either :\n     *    (1) passive - when the user calls data(), or\n     *    (2) active - once they stop updating and yield js thread control\n     */\n    DynamicView.prototype.queueSortPhase = function () {\n      // already queued? exit without queuing again\n      if (this.sortDirty) {\n        return;\n      }\n      this.sortDirty = true;\n\n      var self = this;\n      if (this.options.sortPriority === \"active\") {\n        // active sorting... once they are done and yield js thread, run async performSortPhase()\n        setTimeout(function () {\n          self.performSortPhase();\n        }, this.options.minRebuildInterval);\n      } else {\n        // must be passive sorting... since not calling performSortPhase (until data call), lets use queueRebuildEvent to\n        // potentially notify user that data has changed.\n        this.queueRebuildEvent();\n      }\n    };\n\n    /**\n     * performSortPhase() - invoked synchronously or asynchronously to perform final sort phase (if needed)\n     *\n     */\n    DynamicView.prototype.performSortPhase = function (options) {\n      // async call to this may have been pre-empted by synchronous call to data before async could fire\n      if (!this.sortDirty && !this.resultsdirty) {\n        return;\n      }\n\n      options = options || {};\n\n      if (this.sortDirty) {\n        if (this.sortFunction) {\n          this.resultset.sort(this.sortFunction);\n        } else if (this.sortCriteria) {\n          this.resultset.compoundsort(this.sortCriteria);\n        }\n\n        this.sortDirty = false;\n      }\n\n      if (this.options.persistent) {\n        // persistent view, rebuild local resultdata array\n        this.resultdata = this.resultset.data();\n        this.resultsdirty = false;\n      }\n\n      if (!options.suppressRebuildEvent) {\n        this.emit('rebuild', this);\n      }\n    };\n\n    /**\n     * evaluateDocument() - internal method for (re)evaluating document inclusion.\n     *    Called by : collection.insert() and collection.update().\n     *\n     * @param {int} objIndex - index of document to (re)run through filter pipeline.\n     * @param {bool} isNew - true if the document was just added to the collection.\n     */\n    DynamicView.prototype.evaluateDocument = function (objIndex, isNew) {\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      var ofr = this.resultset.filteredrows;\n      var oldPos = (isNew) ? (-1) : (ofr.indexOf(+objIndex));\n      var oldlen = ofr.length;\n\n      // creating a 1-element resultset to run filter chain ops on to see if that doc passes filters;\n      // mostly efficient algorithm, slight stack overhead price (this function is called on inserts and updates)\n      var evalResultset = new Resultset(this.collection);\n      evalResultset.filteredrows = [objIndex];\n      evalResultset.filterInitialized = true;\n      var filter;\n      for (var idx = 0, len = this.filterPipeline.length; idx < len; idx++) {\n        filter = this.filterPipeline[idx];\n        evalResultset[filter.type](filter.val);\n      }\n\n      // not a true position, but -1 if not pass our filter(s), 0 if passed filter(s)\n      var newPos = (evalResultset.filteredrows.length === 0) ? -1 : 0;\n\n      // wasn't in old, shouldn't be now... do nothing\n      if (oldPos === -1 && newPos === -1) return;\n\n      // wasn't in resultset, should be now... add\n      if (oldPos === -1 && newPos !== -1) {\n        ofr.push(objIndex);\n\n        if (this.options.persistent) {\n          this.resultdata.push(this.collection.data[objIndex]);\n        }\n\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, shouldn't be now... delete\n      if (oldPos !== -1 && newPos === -1) {\n        if (oldPos < oldlen - 1) {\n          ofr.splice(oldPos, 1);\n\n          if (this.options.persistent) {\n            this.resultdata.splice(oldPos, 1);\n          }\n        } else {\n          ofr.length = oldlen - 1;\n\n          if (this.options.persistent) {\n            this.resultdata.length = oldlen - 1;\n          }\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, should still be now... (update persistent only?)\n      if (oldPos !== -1 && newPos !== -1) {\n        if (this.options.persistent) {\n          // in case document changed, replace persistent view data with the latest collection.data document\n          this.resultdata[oldPos] = this.collection.data[objIndex];\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n    };\n\n    /**\n     * removeDocument() - internal function called on collection.delete()\n     */\n    DynamicView.prototype.removeDocument = function (objIndex) {\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      var ofr = this.resultset.filteredrows;\n      var oldPos = ofr.indexOf(+objIndex);\n      var oldlen = ofr.length;\n      var idx;\n\n      if (oldPos !== -1) {\n        // if not last row in resultdata, swap last to hole and truncate last row\n        if (oldPos < oldlen - 1) {\n          ofr[oldPos] = ofr[oldlen - 1];\n          ofr.length = oldlen - 1;\n\n          if (this.options.persistent) {\n            this.resultdata[oldPos] = this.resultdata[oldlen - 1];\n            this.resultdata.length = oldlen - 1;\n          }\n        }\n        // last row, so just truncate last row\n        else {\n          ofr.length = oldlen - 1;\n\n          if (this.options.persistent) {\n            this.resultdata.length = oldlen - 1;\n          }\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n      }\n\n      // since we are using filteredrows to store data array positions\n      // if they remove a document (whether in our view or not),\n      // we need to adjust array positions -1 for all document array references after that position\n      oldlen = ofr.length;\n      for (idx = 0; idx < oldlen; idx++) {\n        if (ofr[idx] > objIndex) {\n          ofr[idx]--;\n        }\n      }\n    };\n\n    /**\n     * mapReduce() - data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns The output of your reduceFunction\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n\n    /**\n     * Collection class that handles documents of same type\n     * @constructor Collection\n     * @implements LokiEventEmitter\n     * @param {string} name - collection name\n     * @param {(array|object)=} options - (optional) array of property names to be indicized OR a configuration object\n     * @param {array} options.unique - array of property names to define unique constraints for\n     * @param {array} options.exact - array of property names to define exact constraints for\n     * @param {array} options.indices - array property names to define binary indexes for\n     * @param {boolean} options.adaptiveBinaryIndices - collection indices will be actively rebuilt rather than lazily (default: true)\n     * @param {boolean} options.asyncListeners - default is false\n     * @param {boolean} options.disableChangesApi - default is true\n     * @param {boolean} options.autoupdate - use Object.observe to update objects automatically (default: false)\n     * @param {boolean} options.clone - specify whether inserts and queries clone to/from user\n     * @param {string} options.cloneMethod - 'parse-stringify' (default), 'jquery-extend-deep', 'shallow'\n     * @param {int} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @see {@link Loki#addCollection} for normal creation of collections\n     */\n    function Collection(name, options) {\n      // the name of the collection\n\n      this.name = name;\n      // the data held by the collection\n      this.data = [];\n      this.idIndex = []; // index of id\n      this.binaryIndices = {}; // user defined indexes\n      this.constraints = {\n        unique: {},\n        exact: {}\n      };\n\n      // unique contraints contain duplicate object references, so they are not persisted.\n      // we will keep track of properties which have unique contraint applied here, and regenerate on load\n      this.uniqueNames = [];\n\n      // transforms will be used to store frequently used query chains as a series of steps\n      // which itself can be stored along with the database.\n      this.transforms = {};\n\n      // the object type of the collection\n      this.objType = name;\n\n      // in autosave scenarios we will use collection level dirty flags to determine whether save is needed.\n      // currently, if any collection is dirty we will autosave the whole database if autosave is configured.\n      // defaulting to true since this is called from addCollection and adding a collection should trigger save\n      this.dirty = true;\n\n      // private holders for cached data\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      var self = this;\n\n      /* OPTIONS */\n      options = options || {};\n\n      // exact match and unique constraints\n      if (options.hasOwnProperty('unique')) {\n        if (!Array.isArray(options.unique)) {\n          options.unique = [options.unique];\n        }\n        options.unique.forEach(function (prop) {\n          self.uniqueNames.push(prop); // used to regenerate on subsequent database loads\n          self.constraints.unique[prop] = new UniqueIndex(prop);\n        });\n      }\n\n      if (options.hasOwnProperty('exact')) {\n        options.exact.forEach(function (prop) {\n          self.constraints.exact[prop] = new ExactIndex(prop);\n        });\n      }\n\n      // if set to true we will optimally keep indices 'fresh' during insert/update/remove ops (never dirty/never needs rebuild)\n      // if you frequently intersperse insert/update/remove ops between find ops this will likely be significantly faster option.\n      this.adaptiveBinaryIndices = options.hasOwnProperty('adaptiveBinaryIndices') ? options.adaptiveBinaryIndices : true;\n\n      // is collection transactional\n      this.transactional = options.hasOwnProperty('transactional') ? options.transactional : false;\n\n      // options to clone objects when inserting them\n      this.cloneObjects = options.hasOwnProperty('clone') ? options.clone : false;\n\n      // default clone method (if enabled) is parse-stringify\n      this.cloneMethod = options.hasOwnProperty('cloneMethod') ? options.cloneMethod : \"parse-stringify\";\n\n      // option to make event listeners async, default is sync\n      this.asyncListeners = options.hasOwnProperty('asyncListeners') ? options.asyncListeners : false;\n\n      // disable track changes\n      this.disableChangesApi = options.hasOwnProperty('disableChangesApi') ? options.disableChangesApi : true;\n\n      // option to observe objects and update them automatically, ignored if Object.observe is not supported\n      this.autoupdate = options.hasOwnProperty('autoupdate') ? options.autoupdate : false;\n\n      //option to activate a cleaner daemon - clears \"aged\" documents at set intervals.\n      this.ttl = {\n        age: null,\n        ttlInterval: null,\n        daemon: null\n      };\n      this.setTTL(options.ttl || -1, options.ttlInterval);\n\n      // currentMaxId - change manually at your own peril!\n      this.maxId = 0;\n\n      this.DynamicViews = [];\n\n      // events\n      this.events = {\n        'insert': [],\n        'update': [],\n        'pre-insert': [],\n        'pre-update': [],\n        'close': [],\n        'flushbuffer': [],\n        'error': [],\n        'delete': [],\n        'warning': []\n      };\n\n      // changes are tracked by collection and aggregated by the db\n      this.changes = [];\n\n      // initialize the id index\n      this.ensureId();\n      var indices = [];\n      // initialize optional user-supplied indices array ['age', 'lname', 'zip']\n      if (options && options.indices) {\n        if (Object.prototype.toString.call(options.indices) === '[object Array]') {\n          indices = options.indices;\n        } else if (typeof options.indices === 'string') {\n          indices = [options.indices];\n        } else {\n          throw new TypeError('Indices needs to be a string or an array of strings');\n        }\n      }\n\n      for (var idx = 0; idx < indices.length; idx++) {\n        this.ensureIndex(indices[idx]);\n      }\n\n      function observerCallback(changes) {\n\n        var changedObjects = typeof Set === 'function' ? new Set() : [];\n\n        if (!changedObjects.add)\n          changedObjects.add = function (object) {\n            if (this.indexOf(object) === -1)\n              this.push(object);\n            return this;\n          };\n\n        changes.forEach(function (change) {\n          changedObjects.add(change.object);\n        });\n\n        changedObjects.forEach(function (object) {\n          if (!hasOwnProperty.call(object, '$loki'))\n            return self.removeAutoUpdateObserver(object);\n          try {\n            self.update(object);\n          } catch (err) {}\n        });\n      }\n\n      this.observerCallback = observerCallback;\n\n      /*\n       * This method creates a clone of the current status of an object and associates operation and collection name,\n       * so the parent db can aggregate and generate a changes object for the entire db\n       */\n      function createChange(name, op, obj) {\n        self.changes.push({\n          name: name,\n          operation: op,\n          obj: JSON.parse(JSON.stringify(obj))\n        });\n      }\n\n      // clear all the changes\n      function flushChanges() {\n        self.changes = [];\n      }\n\n      this.getChanges = function () {\n        return self.changes;\n      };\n\n      this.flushChanges = flushChanges;\n\n      /**\n       * If the changes API is disabled make sure only metadata is added without re-evaluating everytime if the changesApi is enabled\n       */\n      function insertMeta(obj) {\n        if (!obj) {\n          return;\n        }\n        if (!obj.meta) {\n          obj.meta = {};\n        }\n\n        obj.meta.created = (new Date()).getTime();\n        obj.meta.revision = 0;\n      }\n\n      function updateMeta(obj) {\n        if (!obj) {\n          return;\n        }\n        obj.meta.updated = (new Date()).getTime();\n        obj.meta.revision += 1;\n      }\n\n      function createInsertChange(obj) {\n        createChange(self.name, 'I', obj);\n      }\n\n      function createUpdateChange(obj) {\n        createChange(self.name, 'U', obj);\n      }\n\n      function insertMetaWithChange(obj) {\n        insertMeta(obj);\n        createInsertChange(obj);\n      }\n\n      function updateMetaWithChange(obj) {\n        updateMeta(obj);\n        createUpdateChange(obj);\n      }\n\n\n      /* assign correct handler based on ChangesAPI flag */\n      var insertHandler, updateHandler;\n\n      function setHandlers() {\n        insertHandler = self.disableChangesApi ? insertMeta : insertMetaWithChange;\n        updateHandler = self.disableChangesApi ? updateMeta : updateMetaWithChange;\n      }\n\n      setHandlers();\n\n      this.setChangesApi = function (enabled) {\n        self.disableChangesApi = !enabled;\n        setHandlers();\n      };\n      /**\n       * built-in events\n       */\n      this.on('insert', function insertCallback(obj) {\n        insertHandler(obj);\n      });\n\n      this.on('update', function updateCallback(obj) {\n        updateHandler(obj);\n      });\n\n      this.on('delete', function deleteCallback(obj) {\n        if (!self.disableChangesApi) {\n          createChange(self.name, 'R', obj);\n        }\n      });\n\n      this.on('warning', function (warning) {\n        self.console.warn(warning);\n      });\n      // for de-serialization purposes\n      flushChanges();\n    }\n\n    Collection.prototype = new LokiEventEmitter();\n\n    Collection.prototype.console = {\n      log: function () {},\n      warn: function () {},\n      error: function () {},\n    };\n\n    Collection.prototype.addAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.observe(object, this.observerCallback, ['add', 'update', 'delete', 'reconfigure', 'setPrototype']);\n    };\n\n    Collection.prototype.removeAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.unobserve(object, this.observerCallback);\n    };\n\n    /**\n     * Adds a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {array} transform - an array of transformation 'step' objects to save into the collection\n     * @memberof Collection\n     */\n    Collection.prototype.addTransform = function (name, transform) {\n      if (this.transforms.hasOwnProperty(name)) {\n        throw new Error(\"a transform by that name already exists\");\n      }\n\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Updates a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {object} transform - a transformation object to save into collection\n     * @memberof Collection\n     */\n    Collection.prototype.setTransform = function (name, transform) {\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Removes a named collection transform from the collection\n     * @param {string} name - name of collection transform to remove\n     * @memberof Collection\n     */\n    Collection.prototype.removeTransform = function (name) {\n      delete this.transforms[name];\n    };\n\n    Collection.prototype.byExample = function (template) {\n      var k, obj, query;\n      query = [];\n      for (k in template) {\n        if (!template.hasOwnProperty(k)) continue;\n        query.push((\n          obj = {},\n          obj[k] = template[k],\n          obj\n        ));\n      }\n      return {\n        '$and': query\n      };\n    };\n\n    Collection.prototype.findObject = function (template) {\n      return this.findOne(this.byExample(template));\n    };\n\n    Collection.prototype.findObjects = function (template) {\n      return this.find(this.byExample(template));\n    };\n\n    /*----------------------------+\n    | TTL daemon                  |\n    +----------------------------*/\n    Collection.prototype.ttlDaemonFuncGen = function () {\n      var collection = this;\n      var age = this.ttl.age;\n      return function ttlDaemon() {\n        var now = Date.now();\n        var toRemove = collection.chain().where(function daemonFilter(member) {\n          var timestamp = member.meta.updated || member.meta.created;\n          var diff = now - timestamp;\n          return age < diff;\n        });\n        toRemove.remove();\n      };\n    };\n\n    Collection.prototype.setTTL = function (age, interval) {\n      if (age < 0) {\n        clearInterval(this.ttl.daemon);\n      } else {\n        this.ttl.age = age;\n        this.ttl.ttlInterval = interval;\n        this.ttl.daemon = setInterval(this.ttlDaemonFuncGen(), interval);\n      }\n    };\n\n    /*----------------------------+\n    | INDEXING                    |\n    +----------------------------*/\n\n    /**\n     * create a row filter that covers all documents in the collection\n     */\n    Collection.prototype.prepareFullDocIndex = function () {\n      var len = this.data.length;\n      var indexes = new Array(len);\n      for (var i = 0; i < len; i += 1) {\n        indexes[i] = i;\n      }\n      return indexes;\n    };\n\n    /**\n     * Will allow reconfiguring certain collection options.\n     * @param {boolean} options.adaptiveBinaryIndices - collection indices will be actively rebuilt rather than lazily\n     * @memberof Collection\n     */\n    Collection.prototype.configureOptions = function (options) {\n      options = options || {};\n\n      if (options.hasOwnProperty('adaptiveBinaryIndices')) {\n        this.adaptiveBinaryIndices = options.adaptiveBinaryIndices;\n\n        // if switching to adaptive binary indices, make sure none are 'dirty'\n        if (this.adaptiveBinaryIndices) {\n          this.ensureAllIndexes();\n        }\n      }\n    };\n\n    /**\n     * Ensure binary index on a certain field\n     * @param {string} property - name of property to create binary index on\n     * @param {boolean=} force - (Optional) flag indicating whether to construct index immediately\n     * @memberof Collection\n     */\n    Collection.prototype.ensureIndex = function (property, force) {\n      // optional parameter to force rebuild whether flagged as dirty or not\n      if (typeof (force) === 'undefined') {\n        force = false;\n      }\n\n      if (property === null || property === undefined) {\n        throw new Error('Attempting to set index without an associated property');\n      }\n\n      if (this.binaryIndices[property] && !force) {\n        if (!this.binaryIndices[property].dirty) return;\n      }\n\n      var index = {\n        'name': property,\n        'dirty': true,\n        'values': this.prepareFullDocIndex()\n      };\n      this.binaryIndices[property] = index;\n\n      var wrappedComparer =\n        (function (p, data) {\n          return function (a, b) {\n            var objAp = data[a][p],\n              objBp = data[b][p];\n            if (objAp !== objBp) {\n              if (ltHelper(objAp, objBp, false)) return -1;\n              if (gtHelper(objAp, objBp, false)) return 1;\n            }\n            return 0;\n          };\n        })(property, this.data);\n\n      index.values.sort(wrappedComparer);\n      index.dirty = false;\n\n      this.dirty = true; // for autosave scenarios\n    };\n\n    Collection.prototype.getSequencedIndexValues = function (property) {\n      var idx, idxvals = this.binaryIndices[property].values;\n      var result = \"\";\n\n      for (idx = 0; idx < idxvals.length; idx++) {\n        result += \" [\" + idx + \"] \" + this.data[idxvals[idx]][property];\n      }\n\n      return result;\n    };\n\n    Collection.prototype.ensureUniqueIndex = function (field) {\n      var index = this.constraints.unique[field];\n      if (!index) {\n        // keep track of new unique index for regenerate after database (re)load.\n        if (this.uniqueNames.indexOf(field) == -1) {\n          this.uniqueNames.push(field);\n        }\n      }\n\n      // if index already existed, (re)loading it will likely cause collisions, rebuild always\n      this.constraints.unique[field] = index = new UniqueIndex(field);\n      this.data.forEach(function (obj) {\n        index.set(obj);\n      });\n      return index;\n    };\n\n    /**\n     * Ensure all binary indices\n     */\n    Collection.prototype.ensureAllIndexes = function (force) {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          this.ensureIndex(key, force);\n        }\n      }\n    };\n\n    Collection.prototype.flagBinaryIndexesDirty = function () {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          bIndices[key].dirty = true;\n        }\n      }\n    };\n\n    Collection.prototype.flagBinaryIndexDirty = function (index) {\n      if (this.binaryIndices[index])\n        this.binaryIndices[index].dirty = true;\n    };\n\n    /**\n     * Quickly determine number of documents in collection (or query)\n     * @param {object=} query - (optional) query object to count results of\n     * @returns {number} number of documents in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.count = function (query) {\n      if (!query) {\n        return this.data.length;\n      }\n\n      return this.chain().find(query).filteredrows.length;\n    };\n\n    /**\n     * Rebuild idIndex\n     */\n    Collection.prototype.ensureId = function () {\n      var len = this.data.length,\n        i = 0;\n\n      this.idIndex = [];\n      for (i; i < len; i += 1) {\n        this.idIndex.push(this.data[i].$loki);\n      }\n    };\n\n    /**\n     * Add a dynamic view to the collection\n     * @param {string} name - name of dynamic view to add\n     * @param {object=} options - (optional) options to configure dynamic view with\n     * @param {boolean} options.persistent - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} options.sortPriority - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @returns {DynamicView} reference to the dynamic view added\n     * @memberof Collection\n     **/\n\n    Collection.prototype.addDynamicView = function (name, options) {\n      var dv = new DynamicView(this, name, options);\n      this.DynamicViews.push(dv);\n\n      return dv;\n    };\n\n    /**\n     * Remove a dynamic view from the collection\n     * @param {string} name - name of dynamic view to remove\n     * @memberof Collection\n     **/\n    Collection.prototype.removeDynamicView = function (name) {\n      for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n        if (this.DynamicViews[idx].name === name) {\n          this.DynamicViews.splice(idx, 1);\n        }\n      }\n    };\n\n    /**\n     * Look up dynamic view reference from within the collection\n     * @param {string} name - name of dynamic view to retrieve reference of\n     * @returns {DynamicView} A reference to the dynamic view with that name\n     * @memberof Collection\n     **/\n    Collection.prototype.getDynamicView = function (name) {\n      for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n        if (this.DynamicViews[idx].name === name) {\n          return this.DynamicViews[idx];\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * find and update: pass a filtering function to select elements to be updated\n     * and apply the updatefunctino to those elements iteratively\n     * @param {function} filterFunction - filter function whose results will execute update\n     * @param {function} updateFunction - update function to run against filtered documents\n     * @memberof Collection\n     */\n    Collection.prototype.findAndUpdate = function (filterFunction, updateFunction) {\n      var results = this.where(filterFunction),\n        i = 0,\n        obj;\n      try {\n        for (i; i < results.length; i++) {\n          obj = updateFunction(results[i]);\n          this.update(obj);\n        }\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n      }\n    };\n\n    /**\n     * Adds object(s) to collection, ensure object(s) have meta properties, clone it if necessary, etc.\n     * @param {(object|array)} doc - the document (or array of documents) to be inserted\n     * @returns {(object|array)} document or documents inserted\n     * @memberof Collection\n     */\n    Collection.prototype.insert = function (doc) {\n      if (!Array.isArray(doc)) {\n        return this.insertOne(doc);\n      }\n\n      // holder to the clone of the object inserted if collections is set to clone objects\n      var obj;\n      var results = [];\n\n      this.emit('pre-insert', doc);\n      for (var i = 0, len = doc.length; i < len; i++) {\n        obj = this.insertOne(doc[i], true);\n        if (!obj) {\n          return undefined;\n        }\n        results.push(obj);\n      }\n      this.emit('insert', doc);\n      return results.length === 1 ? results[0] : results;\n    };\n\n    /**\n     * Adds a single object, ensures it has meta properties, clone it if necessary, etc.\n     * @param {object} doc - the document to be inserted\n     * @param {boolean} bulkInsert - quiet pre-insert and insert event emits\n     * @returns {object} document or 'undefined' if there was a problem inserting it\n     * @memberof Collection\n     */\n    Collection.prototype.insertOne = function (doc, bulkInsert) {\n      var err = null;\n      var returnObj;\n\n      if (typeof doc !== 'object') {\n        err = new TypeError('Document needs to be an object');\n      } else if (doc === null) {\n        err = new TypeError('Object cannot be null');\n      }\n\n      if (err !== null) {\n        this.emit('error', err);\n        throw err;\n      }\n\n      // if configured to clone, do so now... otherwise just use same obj reference\n      var obj = this.cloneObjects ? clone(doc, this.cloneMethod) : doc;\n\n      if (typeof obj.meta === 'undefined') {\n        obj.meta = {\n          revision: 0,\n          created: 0\n        };\n      }\n\n      // if cloning, give user back clone of 'cloned' object with $loki and meta\n      returnObj = this.cloneObjects ? clone(obj, this.cloneMethod) : obj;\n\n      // allow pre-insert to modify actual collection reference even if cloning\n      if (!bulkInsert) {\n        this.emit('pre-insert', obj);\n      }\n      if (!this.add(obj)) {\n        return undefined;\n      }\n\n      this.addAutoUpdateObserver(returnObj);\n      if (!bulkInsert) {\n        this.emit('insert', returnObj);\n      }\n      return returnObj;\n    };\n\n    /**\n     * Empties the collection.\n     * @memberof Collection\n     */\n    Collection.prototype.clear = function () {\n      this.data = [];\n      this.idIndex = [];\n      this.binaryIndices = {};\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      this.maxId = 0;\n      this.DynamicViews = [];\n      this.dirty = true;\n    };\n\n    /**\n     * Updates an object and notifies collection that the document has changed.\n     * @param {object} doc - document to update within the collection\n     * @memberof Collection\n     */\n    Collection.prototype.update = function (doc) {\n      if (Array.isArray(doc)) {\n        var k = 0,\n          len = doc.length;\n        for (k; k < len; k += 1) {\n          this.update(doc[k]);\n        }\n        return;\n      }\n\n      // verify object is a properly formed document\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Trying to update unsynced document. Please save the document first by using insert() or addMany()');\n      }\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          oldInternal,   // ref to existing obj\n          newInternal, // ref to new internal obj\n          position,\n          self = this;\n\n        oldInternal = arr[0]; // -internal- obj ref\n        position = arr[1]; // position in data array\n\n        // if configured to clone, do so now... otherwise just use same obj reference\n        newInternal = this.cloneObjects ? clone(doc, this.cloneMethod) : doc;\n\n        if (!arr) {\n          throw new Error('Trying to update a document not in collection.');\n        }\n        this.emit('pre-update', doc);\n\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          self.constraints.unique[key].update(oldInternal, newInternal);\n        });\n\n        // operate the update\n        this.data[position] = newInternal;\n\n        if (newInternal !== doc) {\n          this.addAutoUpdateObserver(doc);\n        }\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].evaluateDocument(position, false);\n        }\n\n        var key;\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexUpdate(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.idIndex[position] = newInternal.$loki;\n        //this.flagBinaryIndexesDirty();\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        this.emit('update', doc, this.cloneObjects ? clone(oldInternal, this.cloneMethod) : null);\n        return doc;\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Add object to collection\n     */\n    Collection.prototype.add = function (obj) {\n      // if parameter isn't object exit with throw\n      if ('object' !== typeof obj) {\n        throw new TypeError('Object being added needs to be an object');\n      }\n      // if object you are adding already has id column it is either already in the collection\n      // or the object is carrying its own 'id' property.  If it also has a meta property,\n      // then this is already in collection so throw error, otherwise rename to originalId and continue adding.\n      if (typeof (obj.$loki) !== 'undefined') {\n        throw new Error('Document is already in collection, please use update()');\n      }\n\n      /*\n       * try adding object to collection\n       */\n      try {\n        this.startTransaction();\n        this.maxId++;\n\n        if (isNaN(this.maxId)) {\n          this.maxId = (this.data[this.data.length - 1].$loki + 1);\n        }\n\n        obj.$loki = this.maxId;\n        obj.meta.version = 0;\n\n        var key, constrUnique = this.constraints.unique;\n        for (key in constrUnique) {\n          if (hasOwnProperty.call(constrUnique, key)) {\n            constrUnique[key].set(obj);\n          }\n        }\n\n        // add new obj id to idIndex\n        this.idIndex.push(obj.$loki);\n\n        // add the object\n        this.data.push(obj);\n\n        var addedPos = this.data.length - 1;\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        var dvlen = this.DynamicViews.length;\n        for (var i = 0; i < dvlen; i++) {\n          this.DynamicViews[i].evaluateDocument(addedPos, true);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexInsert(addedPos, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        return (this.cloneObjects) ? (clone(obj, this.cloneMethod)) : (obj);\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Remove all documents matching supplied filter object\n     * @param {object} query - query object to filter on\n     * @memberof Collection\n     */\n    Collection.prototype.removeWhere = function (query) {\n      var list;\n      if (typeof query === 'function') {\n        list = this.data.filter(query);\n      } else {\n        list = new Resultset(this, {\n          queryObj: query\n        });\n      }\n      this.remove(list);\n    };\n\n    Collection.prototype.removeDataOnly = function () {\n      this.remove(this.data.slice());\n    };\n\n    /**\n     * Remove a document from the collection\n     * @param {object} doc - document to remove from collection\n     * @memberof Collection\n     */\n    Collection.prototype.remove = function (doc) {\n      if (typeof doc === 'number') {\n        doc = this.get(doc);\n      }\n\n      if ('object' !== typeof doc) {\n        throw new Error('Parameter is not an object');\n      }\n      if (Array.isArray(doc)) {\n        var k = 0,\n          len = doc.length;\n        for (k; k < len; k += 1) {\n          this.remove(doc[k]);\n        }\n        return;\n      }\n\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Object is not a document stored in the collection');\n      }\n\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          // obj = arr[0],\n          position = arr[1];\n        var self = this;\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          if (doc[key] !== null && typeof doc[key] !== 'undefined') {\n            self.constraints.unique[key].remove(doc[key]);\n          }\n        });\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to remove\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].removeDocument(position);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var key, bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexRemove(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.data.splice(position, 1);\n        this.removeAutoUpdateObserver(doc);\n\n        // remove id from idIndex\n        this.idIndex.splice(position, 1);\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n        this.emit('delete', arr[0]);\n        delete doc.$loki;\n        delete doc.meta;\n        return doc;\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        return null;\n      }\n    };\n\n    /*---------------------+\n    | Finding methods     |\n    +----------------------*/\n\n    /**\n     * Get by Id - faster than other methods because of the searching algorithm\n     * @param {int} id - $loki id of document you want to retrieve\n     * @param {boolean} returnPosition - if 'true' we will return [object, position]\n     * @returns {(object|array|null)} Object reference if document was found, null if not,\n     *     or an array if 'returnPosition' was passed.\n     * @memberof Collection\n     */\n    Collection.prototype.get = function (id, returnPosition) {\n      var retpos = returnPosition || false,\n        data = this.idIndex,\n        max = data.length - 1,\n        min = 0,\n        mid = (min + max) >> 1;\n\n      id = typeof id === 'number' ? id : parseInt(id, 10);\n\n      if (isNaN(id)) {\n        throw new TypeError('Passed id is not an integer');\n      }\n\n      while (data[min] < data[max]) {\n        mid = (min + max) >> 1;\n\n        if (data[mid] < id) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      if (max === min && data[min] === id) {\n        if (retpos) {\n          return [this.data[min], min];\n        }\n        return this.data[min];\n      }\n      return null;\n\n    };\n\n    /**\n     * Perform binary range lookup for the data[dataPosition][binaryIndexName] property value\n     *    Since multiple documents may contain the same value (which the index is sorted on),\n     *    we hone in on range and then linear scan range to find exact index array position.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.getBinaryIndexPosition = function(dataPosition, binaryIndexName) {\n      var val = this.data[dataPosition][binaryIndexName];\n      var index = this.binaryIndices[binaryIndexName].values;\n\n      // i think calculateRange can probably be moved to collection\n      // as it doesn't seem to need resultset.  need to verify\n      //var rs = new Resultset(this, null, null);\n      var range = this.calculateRange(\"$eq\", binaryIndexName, val);\n\n      if (range[0] === 0 && range[1] === -1) {\n        // uhoh didn't find range\n        return null;\n      }\n\n      var min = range[0];\n      var max = range[1];\n\n      // narrow down the sub-segment of index values\n      // where the indexed property value exactly matches our\n      // value and then linear scan to find exact -index- position\n      for(var idx = min; idx <= max; idx++) {\n        if (index[idx] === dataPosition) return idx;\n      }\n\n      // uhoh\n      return null;\n    };\n\n    /**\n     * Adaptively insert a selected item to the index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexInsert = function(dataPosition, binaryIndexName) {\n      var index = this.binaryIndices[binaryIndexName].values;\n      var val = this.data[dataPosition][binaryIndexName];\n      //var rs = new Resultset(this, null, null);\n      var idxPos = this.calculateRangeStart(binaryIndexName, val);\n\n      // insert new data index into our binary index at the proper sorted location for relevant property calculated by idxPos.\n      // doing this after adjusting dataPositions so no clash with previous item at that position.\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 0, dataPosition);\n    };\n\n    /**\n     * Adaptively update a selected item within an index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexUpdate = function(dataPosition, binaryIndexName) {\n      // linear scan needed to find old position within index unless we optimize for clone scenarios later\n      // within (my) node 5.6.0, the following for() loop with strict compare is -much- faster than indexOf()\n      var idxPos,\n        index = this.binaryIndices[binaryIndexName].values,\n        len=index.length;\n\n      for(idxPos=0; idxPos < len; idxPos++) {\n        if (index[idxPos] === dataPosition) break;\n      }\n\n      //var idxPos = this.binaryIndices[binaryIndexName].values.indexOf(dataPosition);\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 1);\n\n      //this.adaptiveBinaryIndexRemove(dataPosition, binaryIndexName, true);\n      this.adaptiveBinaryIndexInsert(dataPosition, binaryIndexName);\n    };\n\n    /**\n     * Adaptively remove a selected item from the index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexRemove = function(dataPosition, binaryIndexName, removedFromIndexOnly) {\n      var idxPos = this.getBinaryIndexPosition(dataPosition, binaryIndexName);\n      var index = this.binaryIndices[binaryIndexName].values;\n      var len,\n        idx;\n\n      if (idxPos === null) {\n        // throw new Error('unable to determine binary index position');\n        return null;\n      }\n\n      // remove document from index\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 1);\n\n      // if we passed this optional flag parameter, we are calling from adaptiveBinaryIndexUpdate,\n      // in which case data positions stay the same.\n      if (removedFromIndexOnly === true) {\n        return;\n      }\n\n      // since index stores data array positions, if we remove a document\n      // we need to adjust array positions -1 for all document positions greater than removed position\n      len = index.length;\n      for (idx = 0; idx < len; idx++) {\n        if (index[idx] > dataPosition) {\n          index[idx]--;\n        }\n      }\n    };\n\n    /**\n     * Internal method used for index maintenance.  Given a prop (index name), and a value\n     * (which may or may not yet exist) this will find the proper location where it can be added.\n     */\n    Collection.prototype.calculateRangeStart = function (prop, val) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      if (index.length === 0) {\n        return 0;\n      }\n\n      var minVal = rcd[index[min]][prop];\n      var maxVal = rcd[index[max]][prop];\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (ltHelper(rcd[index[mid]][prop], val, false)) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      var lbound = min;\n\n      if (ltHelper(rcd[index[lbound]][prop], val, false)) {\n        return lbound+1;\n      }\n      else {\n        return lbound;\n      }\n    };\n\n    /**\n     * calculateRange() - Binary Search utility method to find range/segment of values matching criteria.\n     *    this is used for collection.find() and first find filter of resultset/dynview\n     *    slightly different than get() binary search in that get() hones in on 1 value,\n     *    but we have to hone in on many (range)\n     * @param {string} op - operation, such as $eq\n     * @param {string} prop - name of property to calculate range for\n     * @param {object} val - value to use for range calculation.\n     * @returns {array} [start, end] index array positions\n     */\n    Collection.prototype.calculateRange = function (op, prop, val) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      // when no documents are in collection, return empty range condition\n      if (rcd.length === 0) {\n        return [0, -1];\n      }\n\n      var minVal = rcd[index[min]][prop];\n      var maxVal = rcd[index[max]][prop];\n\n      // if value falls outside of our range return [0, -1] to designate no results\n      switch (op) {\n      case '$eq':\n      case '$aeq':\n        if (ltHelper(val, minVal, false) || gtHelper(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$dteq':\n        if (ltHelper(val, minVal, false) || gtHelper(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$gt':\n        if (gtHelper(val, maxVal, true)) {\n          return [0, -1];\n        }\n        break;\n      case '$gte':\n        if (gtHelper(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$lt':\n        if (ltHelper(val, minVal, true)) {\n          return [0, -1];\n        }\n        if (ltHelper(maxVal, val, false)) {\n          return [0, rcd.length - 1];\n        }\n        break;\n      case '$lte':\n        if (ltHelper(val, minVal, false)) {\n          return [0, -1];\n        }\n        if (ltHelper(maxVal, val, true)) {\n          return [0, rcd.length - 1];\n        }\n        break;\n      }\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (ltHelper(rcd[index[mid]][prop], val, false)) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      var lbound = min;\n\n      // do not reset min, as the upper bound cannot be prior to the found low bound\n      max = index.length - 1;\n\n      // hone in on end position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (ltHelper(val, rcd[index[mid]][prop], false)) {\n          max = mid;\n        } else {\n          min = mid + 1;\n        }\n      }\n\n      var ubound = max;\n\n      var lval = rcd[index[lbound]][prop];\n      var uval = rcd[index[ubound]][prop];\n\n      switch (op) {\n      case '$eq':\n        if (lval !== val) {\n          return [0, -1];\n        }\n        if (uval !== val) {\n          ubound--;\n        }\n\n        return [lbound, ubound];\n      case '$dteq':\n        if (lval > val || lval < val) {\n          return [0, -1];\n        }\n        if (uval > val || uval < val) {\n          ubound--;\n        }\n\n        return [lbound, ubound];\n\n\n      case '$gt':\n        if (ltHelper(uval, val, true)) {\n          return [0, -1];\n        }\n\n        return [ubound, rcd.length - 1];\n\n      case '$gte':\n        if (ltHelper(lval, val, false)) {\n          return [0, -1];\n        }\n\n        return [lbound, rcd.length - 1];\n\n      case '$lt':\n        if (lbound === 0 && ltHelper(lval, val, false)) {\n          return [0, 0];\n        }\n        return [0, lbound - 1];\n\n      case '$lte':\n        if (uval !== val) {\n          ubound--;\n        }\n\n        if (ubound === 0 && ltHelper(uval, val, false)) {\n          return [0, 0];\n        }\n        return [0, ubound];\n\n      default:\n        return [0, rcd.length - 1];\n      }\n    };\n\n    /**\n     * Retrieve doc by Unique index\n     * @param {string} field - name of uniquely indexed property to use when doing lookup\n     * @param {value} value - unique value to search for\n     * @returns {object} document matching the value passed\n     * @memberof Collection\n     */\n    Collection.prototype.by = function (field, value) {\n      var self;\n      if (value === undefined) {\n        self = this;\n        return function (value) {\n          return self.by(field, value);\n        };\n      }\n\n      var result = this.constraints.unique[field].get(value);\n      if (!this.cloneObjects) {\n        return result;\n      } else {\n        return clone(result, this.cloneMethod);\n      }\n    };\n\n    /**\n     * Find one object by index property, by property equal to value\n     * @param {object} query - query object used to perform search with\n     * @returns {(object|null)} First matching document, or null if none\n     * @memberof Collection\n     */\n    Collection.prototype.findOne = function (query) {\n      query = query || {};\n\n      // Instantiate Resultset and exec find op passing firstOnly = true param\n      var result = new Resultset(this, {\n        queryObj: query,\n        firstOnly: true\n      });\n\n      if (Array.isArray(result) && result.length === 0) {\n        return null;\n      } else {\n        if (!this.cloneObjects) {\n          return result;\n        } else {\n          return clone(result, this.cloneMethod);\n        }\n      }\n    };\n\n    /**\n     * Chain method, used for beginning a series of chained find() and/or view() operations\n     * on a collection.\n     *\n     * @param {array} transform - Ordered array of transform step objects similar to chain\n     * @param {object} parameters - Object containing properties representing parameters to substitute\n     * @returns {Resultset} (this) resultset, or data array if any map or join functions where called\n     * @memberof Collection\n     */\n    Collection.prototype.chain = function (transform, parameters) {\n      var rs = new Resultset(this);\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * Find method, api is similar to mongodb.\n     * for more complex queries use [chain()]{@link Collection#chain} or [where()]{@link Collection#where}.\n     * @example {@tutorial Query Examples}\n     * @param {object} query - 'mongo-like' query object\n     * @returns {array} Array of matching documents\n     * @memberof Collection\n     */\n    Collection.prototype.find = function (query) {\n      if (typeof (query) === 'undefined') {\n        query = 'getAll';\n      }\n\n      var results = new Resultset(this, {\n        queryObj: query\n      });\n      if (!this.cloneObjects) {\n        return results;\n      } else {\n        return cloneObjectArray(results, this.cloneMethod);\n      }\n    };\n\n    /**\n     * Find object by unindexed field by property equal to value,\n     * simply iterates and returns the first element matching the query\n     */\n    Collection.prototype.findOneUnindexed = function (prop, value) {\n      var i = this.data.length,\n        doc;\n      while (i--) {\n        if (this.data[i][prop] === value) {\n          doc = this.data[i];\n          return doc;\n        }\n      }\n      return null;\n    };\n\n    /**\n     * Transaction methods\n     */\n\n    /** start the transation */\n    Collection.prototype.startTransaction = function () {\n      if (this.transactional) {\n        this.cachedData = clone(this.data, this.cloneMethod);\n        this.cachedIndex = this.idIndex;\n        this.cachedBinaryIndex = this.binaryIndices;\n\n        // propagate startTransaction to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].startTransaction();\n        }\n      }\n    };\n\n    /** commit the transation */\n    Collection.prototype.commit = function () {\n      if (this.transactional) {\n        this.cachedData = null;\n        this.cachedIndex = null;\n        this.cachedBinaryIndex = null;\n\n        // propagate commit to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].commit();\n        }\n      }\n    };\n\n    /** roll back the transation */\n    Collection.prototype.rollback = function () {\n      if (this.transactional) {\n        if (this.cachedData !== null && this.cachedIndex !== null) {\n          this.data = this.cachedData;\n          this.idIndex = this.cachedIndex;\n          this.binaryIndices = this.cachedBinaryIndex;\n        }\n\n        // propagate rollback to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].rollback();\n        }\n      }\n    };\n\n    /**\n     * Query the collection by supplying a javascript filter function.\n     * @example\n     * var results = coll.where(function(obj) {\n     *   return obj.legs === 8;\n     * });\n     *\n     * @param {function} fun - filter function to run against all collection docs\n     * @returns {array} all documents which pass your filter function\n     * @memberof Collection\n     */\n    Collection.prototype.where = function (fun) {\n      var results = new Resultset(this, {\n        queryFunc: fun\n      });\n      if (!this.cloneObjects) {\n        return results;\n      } else {\n        return cloneObjectArray(results, this.cloneMethod);\n      }\n    };\n\n    /**\n     * Map Reduce operation\n     *\n     * @param {function} mapFunction - function to use as map function\n     * @param {function} reduceFunction - function to use as reduce function\n     * @returns {data} The result of your mapReduce operation\n     * @memberof Collection\n     */\n    Collection.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data.map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * Join two collections on specified properties\n     *\n     * @param {array} joinData - array of documents to 'join' to this collection\n     * @param {string} leftJoinProp - property name in collection\n     * @param {string} rightJoinProp - property name in joinData\n     * @param {function=} mapFun - (Optional) map function to use\n     * @returns {Resultset} Result of the mapping operation\n     * @memberof Collection\n     */\n    Collection.prototype.eqJoin = function (joinData, leftJoinProp, rightJoinProp, mapFun) {\n      // logic in Resultset class\n      return new Resultset(this).eqJoin(joinData, leftJoinProp, rightJoinProp, mapFun);\n    };\n\n    /* ------ STAGING API -------- */\n    /**\n     * stages: a map of uniquely identified 'stages', which hold copies of objects to be\n     * manipulated without affecting the data in the original collection\n     */\n    Collection.prototype.stages = {};\n\n    /**\n     * (Staging API) create a stage and/or retrieve it\n     * @memberof Collection\n     */\n    Collection.prototype.getStage = function (name) {\n      if (!this.stages[name]) {\n        this.stages[name] = {};\n      }\n      return this.stages[name];\n    };\n    /**\n     * a collection of objects recording the changes applied through a commmitStage\n     */\n    Collection.prototype.commitLog = [];\n\n    /**\n     * (Staging API) create a copy of an object and insert it into a stage\n     * @memberof Collection\n     */\n    Collection.prototype.stage = function (stageName, obj) {\n      var copy = JSON.parse(JSON.stringify(obj));\n      this.getStage(stageName)[obj.$loki] = copy;\n      return copy;\n    };\n\n    /**\n     * (Staging API) re-attach all objects to the original collection, so indexes and views can be rebuilt\n     * then create a message to be inserted in the commitlog\n     * @param {string} stageName - name of stage\n     * @param {string} message\n     * @memberof Collection\n     */\n    Collection.prototype.commitStage = function (stageName, message) {\n      var stage = this.getStage(stageName),\n        prop,\n        timestamp = new Date().getTime();\n\n      for (prop in stage) {\n\n        this.update(stage[prop]);\n        this.commitLog.push({\n          timestamp: timestamp,\n          message: message,\n          data: JSON.parse(JSON.stringify(stage[prop]))\n        });\n      }\n      this.stages[stageName] = {};\n    };\n\n    Collection.prototype.no_op = function () {\n      return;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extract = function (field) {\n      var i = 0,\n        len = this.data.length,\n        isDotNotation = isDeepProperty(field),\n        result = [];\n      for (i; i < len; i += 1) {\n        result.push(deepProperty(this.data[i], field, isDotNotation));\n      }\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.max = function (field) {\n      return Math.max.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.min = function (field) {\n      return Math.min.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.maxRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        max;\n\n      for (i; i < len; i += 1) {\n        if (max !== undefined) {\n          if (max < deepProperty(this.data[i], field, deep)) {\n            max = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          max = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = max;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.minRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        min;\n\n      for (i; i < len; i += 1) {\n        if (min !== undefined) {\n          if (min > deepProperty(this.data[i], field, deep)) {\n            min = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          min = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = min;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extractNumerical = function (field) {\n      return this.extract(field).map(parseBase10).filter(Number).filter(function (n) {\n        return !(isNaN(n));\n      });\n    };\n\n    /**\n     * Calculates the average numerical value of a property\n     *\n     * @param {string} field - name of property in docs to average\n     * @returns {number} average of property in all docs in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.avg = function (field) {\n      return average(this.extractNumerical(field));\n    };\n\n    /**\n     * Calculate standard deviation of a field\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.stdDev = function (field) {\n      return standardDeviation(this.extractNumerical(field));\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.mode = function (field) {\n      var dict = {},\n        data = this.extract(field);\n      data.forEach(function (obj) {\n        if (dict[obj]) {\n          dict[obj] += 1;\n        } else {\n          dict[obj] = 1;\n        }\n      });\n      var max,\n        prop, mode;\n      for (prop in dict) {\n        if (max) {\n          if (max < dict[prop]) {\n            mode = prop;\n          }\n        } else {\n          mode = prop;\n          max = dict[prop];\n        }\n      }\n      return mode;\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field - property name\n     */\n    Collection.prototype.median = function (field) {\n      var values = this.extractNumerical(field);\n      values.sort(sub);\n\n      var half = Math.floor(values.length / 2);\n\n      if (values.length % 2) {\n        return values[half];\n      } else {\n        return (values[half - 1] + values[half]) / 2.0;\n      }\n    };\n\n    /**\n     * General utils, including statistical functions\n     */\n    function isDeepProperty(field) {\n      return field.indexOf('.') !== -1;\n    }\n\n    function parseBase10(num) {\n      return parseFloat(num, 10);\n    }\n\n    function isNotUndefined(obj) {\n      return obj !== undefined;\n    }\n\n    function add(a, b) {\n      return a + b;\n    }\n\n    function sub(a, b) {\n      return a - b;\n    }\n\n    function median(values) {\n      values.sort(sub);\n      var half = Math.floor(values.length / 2);\n      return (values.length % 2) ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n    }\n\n    function average(array) {\n      return (array.reduce(add, 0)) / array.length;\n    }\n\n    function standardDeviation(values) {\n      var avg = average(values);\n      var squareDiffs = values.map(function (value) {\n        var diff = value - avg;\n        var sqrDiff = diff * diff;\n        return sqrDiff;\n      });\n\n      var avgSquareDiff = average(squareDiffs);\n\n      var stdDev = Math.sqrt(avgSquareDiff);\n      return stdDev;\n    }\n\n    function deepProperty(obj, property, isDeep) {\n      if (isDeep === false) {\n        // pass without processing\n        return obj[property];\n      }\n      var pieces = property.split('.'),\n        root = obj;\n      while (pieces.length > 0) {\n        root = root[pieces.shift()];\n      }\n      return root;\n    }\n\n    function binarySearch(array, item, fun) {\n      var lo = 0,\n        hi = array.length,\n        compared,\n        mid;\n      while (lo < hi) {\n        mid = (lo + hi) >> 1;\n        compared = fun.apply(null, [item, array[mid]]);\n        if (compared === 0) {\n          return {\n            found: true,\n            index: mid\n          };\n        } else if (compared < 0) {\n          hi = mid;\n        } else {\n          lo = mid + 1;\n        }\n      }\n      return {\n        found: false,\n        index: hi\n      };\n    }\n\n    function BSonSort(fun) {\n      return function (array, item) {\n        return binarySearch(array, item, fun);\n      };\n    }\n\n    function KeyValueStore() {}\n\n    KeyValueStore.prototype = {\n      keys: [],\n      values: [],\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      set: function (key, value) {\n        var pos = this.bs(this.keys, key);\n        if (pos.found) {\n          this.values[pos.index] = value;\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, value);\n        }\n      },\n      get: function (key) {\n        return this.values[binarySearch(this.keys, key, this.sort).index];\n      }\n    };\n\n    function UniqueIndex(uniqueField) {\n      this.field = uniqueField;\n      this.keyMap = {};\n      this.lokiMap = {};\n    }\n    UniqueIndex.prototype.keyMap = {};\n    UniqueIndex.prototype.lokiMap = {};\n    UniqueIndex.prototype.set = function (obj) {\n      var fieldValue = obj[this.field];\n      if (fieldValue !== null && typeof (fieldValue) !== 'undefined') {\n        if (this.keyMap[fieldValue]) {\n          throw new Error('Duplicate key for property ' + this.field + ': ' + fieldValue);\n        } else {\n          this.keyMap[fieldValue] = obj;\n          this.lokiMap[obj.$loki] = fieldValue;\n        }\n      }\n    };\n    UniqueIndex.prototype.get = function (key) {\n      return this.keyMap[key];\n    };\n\n    UniqueIndex.prototype.byId = function (id) {\n      return this.keyMap[this.lokiMap[id]];\n    };\n    /**\n     * Updates a document's unique index given an updated object.\n     * @param  {Object} obj Original document object\n     * @param  {Object} doc New document object (likely the same as obj)\n     */\n    UniqueIndex.prototype.update = function (obj, doc) {\n      if (this.lokiMap[obj.$loki] !== doc[this.field]) {\n        var old = this.lokiMap[obj.$loki];\n        this.set(doc);\n        // make the old key fail bool test, while avoiding the use of delete (mem-leak prone)\n        this.keyMap[old] = undefined;\n      } else {\n        this.keyMap[obj[this.field]] = doc;\n      }\n    };\n    UniqueIndex.prototype.remove = function (key) {\n      var obj = this.keyMap[key];\n      if (obj !== null && typeof obj !== 'undefined') {\n        this.keyMap[key] = undefined;\n        this.lokiMap[obj.$loki] = undefined;\n      } else {\n        throw new Error('Key is not in unique index: ' + this.field);\n      }\n    };\n    UniqueIndex.prototype.clear = function () {\n      this.keyMap = {};\n      this.lokiMap = {};\n    };\n\n    function ExactIndex(exactField) {\n      this.index = {};\n      this.field = exactField;\n    }\n\n    // add the value you want returned to the key in the index\n    ExactIndex.prototype = {\n      set: function add(key, val) {\n        if (this.index[key]) {\n          this.index[key].push(val);\n        } else {\n          this.index[key] = [val];\n        }\n      },\n\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function remove(key, val) {\n        var idxSet = this.index[key];\n        for (var i in idxSet) {\n          if (idxSet[i] == val) {\n            idxSet.splice(i, 1);\n          }\n        }\n        if (idxSet.length < 1) {\n          this.index[key] = undefined;\n        }\n      },\n\n      // get the values related to the key, could be more than one\n      get: function get(key) {\n        return this.index[key];\n      },\n\n      // clear will zap the index\n      clear: function clear(key) {\n        this.index = {};\n      }\n    };\n\n    function SortedIndex(sortedField) {\n      this.field = sortedField;\n    }\n\n    SortedIndex.prototype = {\n      keys: [],\n      values: [],\n      // set the default sort\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      // and allow override of the default sort\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      // add the value you want returned  to the key in the index\n      set: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort);\n        if (pos.found) {\n          this.values[pos.index].push(value);\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, [value]);\n        }\n      },\n      // get all values which have a key == the given key\n      get: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        if (bsr.found) {\n          return this.values[bsr.index];\n        } else {\n          return [];\n        }\n      },\n      // get all values which have a key < the given key\n      getLt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos--;\n        return this.getAll(key, 0, pos);\n      },\n      // get all values which have a key > the given key\n      getGt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos++;\n        return this.getAll(key, pos, this.keys.length);\n      },\n\n      // get all vals from start to end\n      getAll: function (key, start, end) {\n        var results = [];\n        for (var i = start; i < end; i++) {\n          results = results.concat(this.values[i]);\n        }\n        return results;\n      },\n      // just in case someone wants to do something smart with ranges\n      getPos: function (key) {\n        return binarySearch(this.keys, key, this.sort);\n      },\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort).index;\n        var idxSet = this.values[pos];\n        for (var i in idxSet) {\n          if (idxSet[i] == value) idxSet.splice(i, 1);\n        }\n        if (idxSet.length < 1) {\n          this.keys.splice(pos, 1);\n          this.values.splice(pos, 1);\n        }\n      },\n      // clear will zap the index\n      clear: function () {\n        this.keys = [];\n        this.values = [];\n      }\n    };\n\n\n    Loki.LokiOps = LokiOps;\n    Loki.Collection = Collection;\n    Loki.KeyValueStore = KeyValueStore;\n    Loki.persistenceAdapters = {\n      fs: LokiFsAdapter,\n      localStorage: LokiLocalStorageAdapter\n    };\n    return Loki;\n  }());\n\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/lokijs.js","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 14\n// module chunks = 1"],"sourceRoot":""}