{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e0526ee6a9b5de539a99","webpack:///./src/inverted_index/full_text_search.js","webpack:///./src/inverted_index/inverted_index.js","webpack:///./src/inverted_index/tokenizer.js","webpack:///./src/inverted_index/index_searcher.js","webpack:///./src/inverted_index/scorer.js","webpack:///./src/inverted_index/queries.js"],"names":["FullTextSearch","constructor","options","undefined","SyntaxError","_invIdxs","Object","prototype","toString","call","fields","i","length","TypeError","_docs","Set","_idxSearcher","addDocument","doc","boosts","hasOwnProperty","Error","fieldNames","keys","fieldName","boost","insert","$loki","add","setDirty","removeDocument","remove","delete","updateDocument","search","query","toJSON","serialized","loadJSON","db","JSON","parse","InvertedIndex","_fieldName","_docCount","_docStore","_totalFieldLength","_tokenizer","_root","docId","fieldTokens","tokenize","termRefs","fieldLength","defineProperties","enumerable","configurable","writable","value","term","tf","j","branch","c","child","parent","docs","df","push","String","docStore","index","k","key","getDocumentCount","getDocumentStore","getTotalFieldLength","getFieldName","getTokenizer","getTermIndex","root","start","getNextTermIndex","termIndices","extendTermIndex","stack","treeStack","pop","treeTermn","dbObject","self","regenerate","docIds","ref","Tokenizer","_splitter","_queue","_symbol","Symbol","setSplitter","_defaultSplitter","label","func","_addFunction","addBefore","labelFunc","pos","_getPosition","addAfter","splice","reset","str","tokens","splitter","queue","functions","trimmedTokens","split","toLowerCase","indexOf","f1","f1_5","f2","f2_5","f3","tkz","console","log","IndexSearcher","invIdxs","_scorer","docResults","_recursive","finalScoring","final_scoring","finalScore","doScoring","field","tokenizer","type","_getUnique","must","values","filter","shouldDocs","_getAll","should","empty","msm","minimum_should_match","notDocs","not","termIdx","prepare","f","FuzzySearch","b","w","WildcardSearch","a","scoreConstant","terms","operator","tmpQuery","bool","minimumShouldMatch","startShould","startMust","prefixLength","prefix_length","fuzzy","fuzziness","endShould","endMust","build","currDocs","_fuzzy","_fuzziness","_prefixLength","levenshtein_distance","tmp","prev","val","row","Array","Math","min","pre","slice","similarTokens","treeTerms","abs","distance","_wildcard","wildcard","_result","idx","escaped","others","Scorer","_cache","idf","_idf","result","k1","scoring","docScore","docResult","res","pow","avgFieldLength","_avgFieldLength","tfNorm","_getCache","idfs","docFreq","cache","BoostQuery","data","_data","TermQuery","TermsQuery","isArray","WildcardQuery","FuzzyQuery","PrefixQuery","prefix","ExistsQuery","MatchQuery","minShouldMatch","MatchAll","ArrayQuery","callbackName","callback","_callbackName","_prepare","queryType","args","constantScore","match","matchAll","exists","BoolQuery","ConstantScoreQuery","_callback","startFilter","startNot","QueryBuilder","_child","enableFinalScoring","enabled","useBM25"],"mappings":"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","file":"lokijs.inv.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inv\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inv\"] = factory();\n\telse\n\t\troot[\"lokijs\"] = root[\"lokijs\"] || {}, root[\"lokijs\"][\"inv\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e0526ee6a9b5de539a99","import {InvertedIndex} from './inverted_index';\nimport {IndexSearcher} from './index_searcher';\n\nexport class FullTextSearch {\n\tconstructor(options) {\n\t\tif (options === undefined) {\n\t\t\tthrow new SyntaxError('Options needs to be defined!');\n\t\t}\n\n\t\tthis._invIdxs = {};\n\t\t// Get field names.\n\t\tswitch (Object.prototype.toString.call(options.fields)) {\n\t\t\tcase '[object Array]':\n\t\t\t\tfor (let i = 0; i < options.fields.length; i++) {\n\t\t\t\t\tif (typeof options.fields[i] !== 'string') {\n\t\t\t\t\t\tthrow new TypeError('Fields needs to be a string or an array of strings');\n\t\t\t\t\t}\n\t\t\t\t\tthis._invIdxs[options.fields[i]] = new InvertedIndex(options.fields[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '[object String]':\n\t\t\t\tthis._invIdxs[options.fields] = new InvertedIndex(options.fields);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new TypeError('Fields needs to be a string or an array of strings');\n\t\t}\n\n\t\tthis._docs = new Set();\n\t\tthis._idxSearcher = new IndexSearcher(this._invIdxs, this._docs);\n\t}\n\n\taddDocument(doc, boosts = {}) {\n\t\tif (!doc.hasOwnProperty('$loki')) {\n\t\t\tthrow new Error('Document is not stored in the collection.');\n\t\t}\n\n\t\tlet fieldNames = Object.keys(doc);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tif (this._invIdxs.hasOwnProperty(fieldName)) {\n\t\t\t\tlet boost = boosts.hasOwnProperty(fieldName) ? boosts[fieldName] : 1;\n\t\t\t\tthis._invIdxs[fieldName].insert(doc[fieldName], doc.$loki, boost);\n\t\t\t}\n\t\t}\n\n\t\tthis._docs.add(doc.$loki);\n\t\tthis.setDirty();\n\t}\n\n\tremoveDocument(doc) {\n\t\tif (!doc.hasOwnProperty('$loki')) {\n\t\t\tthrow new Error('Document is not stored in the collection.');\n\t\t}\n\n\t\tlet fieldNames = Object.keys(this._invIdxs);\n\t\tfor (let i = 0; i < fieldNames.length; i++) {\n\t\t\tthis._invIdxs[fieldNames[i]].remove(doc.$loki);\n\t\t}\n\n\t\tthis._docs.delete(doc.$loki);\n\t\tthis.setDirty();\n\t}\n\n\tupdateDocument(doc, boosts = {}) {\n\t\tthis.removeDocument(doc);\n\t\tthis.addDocument(doc, boosts);\n\t}\n\n\tsearch(query) {\n\t\treturn this._idxSearcher.search(query);\n\t}\n\n\ttoJSON() {\n\t\tlet serialized = {};\n\t\tlet fieldNames = Object.keys(this._invIdxs);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tserialized[fieldName] = this._invIdxs[fieldName].toJSON();\n\t\t}\n\t\treturn serialized;\n\t}\n\n\tloadJSON(serialized) {\n\t\tlet db = JSON.parse(serialized);\n\t\tlet fieldNames = Object.keys(db);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tthis._invIdxs[fieldName] = new InvertedIndex({});\n\t\t\tthis._invIdxs[fieldName].loadJSON(db[fieldName]);\n\t\t}\n\t}\n\n\tsetDirty() {\n\t\tthis._idxSearcher.setDirty();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/full_text_search.js","import {Tokenizer} from './tokenizer';\n\n/**\n * Inverted index class handles featured text search for specific document fields.\n * @constructor InvertedIndex\n * @param {object} options - a configuration object\n * @param {string|string[]} options.fields - string or array of field names to define featured text search for\n * @param {boolean} [options.store=true] - inverted index will be stored at serialization rather than rebuilt on load.\n */\nexport class InvertedIndex {\n\tconstructor(fieldName) {\n\t\tthis._fieldName = fieldName;\n\t\tthis._docCount = 0;\n\t\tthis._docStore = {};\n\t\tthis._totalFieldLength = 0;\n\t\tthis._tokenizer = new Tokenizer();\n\t\tthis._root = {};\n\t}\n\n\t/**\n\t * Adds defined fields of a document to the inverted index.\n\t * @param {object} doc - the document to add\n\t * @param {number} [boost=1] - object with field (key) specific boost (value)\n\t */\n\tinsert(doc, docId, boost = 1) {\n\t\tif (this._docStore.hasOwnProperty(docId)) {\n\t\t\tthrow new Error('Document already added.');\n\t\t}\n\n\t\tthis._docCount += 1;\n\t\tthis._docStore[docId] = {};\n\n\t\t// Tokenize document field.\n\t\tlet fieldTokens = this._tokenizer.tokenize(doc);\n\t\tthis._totalFieldLength += fieldTokens.length;\n\n\t\tlet termRefs = [];\n\t\tthis._docStore[docId] = {fieldLength: fieldTokens.length, boost: boost};\n\t\tObject.defineProperties(this._docStore[docId], {\n\t\t\ttermRefs: {enumerable: false, configurable: true, writable: true, value: termRefs}\n\t\t});\n\n\t\t// Iterate over all unique field terms.\n\t\tfor (let term of new Set(fieldTokens)) {\n\t\t\tif (term == '') {\n\t\t\t\tthrow Error('Term cannot be empty!');\n\t\t\t}\n\t\t\t// Calculate term frequency.\n\t\t\tlet tf = 0;\n\t\t\tfor (let j = 0; j < fieldTokens.length; j++) {\n\t\t\t\tif (fieldTokens[j] == term) {\n\t\t\t\t\ttf++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add term to index tree.\n\t\t\tlet branch = this._root;\n\t\t\tfor (let i = 0; i < term.length; i++) {\n\t\t\t\tlet c = term[i];\n\t\t\t\tif (!branch.hasOwnProperty(c)) {\n\t\t\t\t\tlet child = {};\n\t\t\t\t\tObject.defineProperties(child, {\n\t\t\t\t\t\tparent: {enumerable: false, configurable: true, writable: true, value: branch}\n\t\t\t\t\t});\n\t\t\t\t\tbranch[c] = child;\n\t\t\t\t}\n\t\t\t\tbranch = branch[c];\n\t\t\t}\n\t\t\t// Add term info to index leaf.\n\t\t\tif (!branch.hasOwnProperty('docs')) {\n\t\t\t\tbranch.docs = {};\n\t\t\t\tbranch.df = 0;\n\t\t\t}\n\t\t\tbranch.docs[docId] = tf;\n\t\t\tbranch.df += 1;\n\n\t\t\t// Store index leaf for deletion.\n\t\t\ttermRefs.push(branch);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all relevant terms of a document from the inverted index.\n\t * @param {number} docId - the document.\n\t */\n\tremove(docId) {\n\t\tif (!this._docStore.hasOwnProperty(String(docId))) {\n\t\t\treturn;\n\t\t}\n\t\tlet docStore = this._docStore[docId];\n\t\t// Remove document.\n\t\tdelete this._docStore[docId];\n\t\tthis._docCount -= 1;\n\n\t\t// Reduce total field length.\n\t\tthis._totalFieldLength -= docStore.fieldLength;\n\n\t\t// Iterate over all term references.\n\t\t// Remove docId from docs and decrement document frequency.\n\t\tlet termRefs = docStore.termRefs;\n\t\tfor (let j = 0; j < termRefs.length; j++) {\n\t\t\tlet index = termRefs[j];\n\t\t\tindex.df -= 1;\n\t\t\tdelete index.docs[docId];\n\n\t\t\t// Delete term branch if not used anymore.\n\t\t\tif (index.df === 0) {\n\t\t\t\tdo {\n\t\t\t\t\t// Go tree upwards.\n\t\t\t\t\tlet parent = index.parent;\n\t\t\t\t\t// Delete parent reference for preventing memory leak (cycle reference)\n\t\t\t\t\tdelete index.parent;\n\n\t\t\t\t\t// Iterate over all children.\n\t\t\t\t\tvar keys = Object.keys(parent);\n\t\t\t\t\tfor (let k = 0; k < keys.length; k++) {\n\t\t\t\t\t\tlet key = keys[k];\n\t\t\t\t\t\tif (key === 'df' || key === 'docs') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Remove previous child form parent.\n\t\t\t\t\t\tif (parent[key] === index) {\n\t\t\t\t\t\t\tdelete parent[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tindex = parent;\n\t\t\t\t} while (index.hasOwnProperty('parent') && keys.length === 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDocumentCount() {\n\t\treturn this._docCount;\n\t}\n\n\tgetDocumentStore() {\n\t\treturn this._docStore;\n\t}\n\n\tgetTotalFieldLength() {\n\t\treturn this._totalFieldLength;\n\t}\n\n\tgetFieldName() {\n\t\treturn this._fieldName;\n\t}\n\n\tgetTokenizer() {\n\t\treturn this._tokenizer;\n\t}\n\n\t/**\n\t * Gets the term index of a term.\n\t * @param {string} term - the term.\n\t * @param {object} root - the term index to start from\n\t * @param {number} start - the position of the term string to start from\n\t * @return {object} - The term index or null if the term is not in the term tree.\n\t */\n\tstatic getTermIndex(term, root, start = 0) {\n\t\tif (start >= term.length) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = start; i < term.length; i++) {\n\t\t\tif (!root.hasOwnProperty(term[i])) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\troot = root[term[i]];\n\t\t}\n\t\treturn root;\n\t}\n\n\t/**\n\t * Extends a term index for the one branch.\n\t * @param {object} root - the term index to start from\n\t * @return {Array} - array with term indices and extension\n\t */\n\tstatic getNextTermIndex(root) {\n\t\tlet termIndices = [];\n\t\tlet keys = Object.keys(root);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\ttermIndices.push({index: root[keys[i]], term: keys[i]});\n\t\t\t}\n\t\t}\n\t\treturn termIndices;\n\t}\n\n\t/**\n\t * Extends a term index to all available term leafs.\n\t * @param {object} root - the term index to start from\n\t * @returns {Array} - Array with term indices and extension\n\t */\n\tstatic extendTermIndex(root) {\n\t\tlet termIndices = [];\n\t\tlet stack = [root];\n\t\tlet treeStack = [''];\n\t\tdo {\n\t\t\tlet root = stack.pop();\n\t\t\tlet treeTermn = treeStack.pop();\n\n\t\t\tif (root.hasOwnProperty('df')) {\n\t\t\t\ttermIndices.push({index: root, term: treeTermn});\n\t\t\t}\n\n\t\t\tlet keys = Object.keys(root);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\t\tstack.push(root[keys[i]]);\n\t\t\t\t\ttreeStack.push(treeTermn + keys[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (stack.length !== 0);\n\n\t\treturn termIndices;\n\t}\n\n\t/**\n\t * Serialize the inverted index.\n\t * @returns {{docStore: *, _fields: *, index: *}}\n\t */\n\ttoJSON() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Deserialize the inverted index.\n\t * @param {string} serialized - The serialized inverted index.\n\t */\n\tloadJSON(serialized) {\n\t\tlet dbObject = serialized;\n\n\t\tthis._fieldName = dbObject._fieldName;\n\t\tthis._docCount = dbObject._docCount;\n\t\tthis._docStore = dbObject._docStore;\n\t\tthis._totalFieldLength = dbObject._totalFieldLength;\n\t\tthis._tokenizer = dbObject._tokenizer;\n\t\tthis._root = dbObject._root;\n\n\t\tlet self = this;\n\n\t\tfunction regenerate(index, parent) {\n\t\t\t// Set parent.\n\t\t\tif (parent !== null) {\n\t\t\t\tObject.defineProperties(index, {\n\t\t\t\t\tparent: {enumerable: false, configurable: true, writable: false, value: parent}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Iterate over all keys.\n\t\t\tlet keys = Object.keys(index);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t// Found term, save in document store.\n\t\t\t\tif (keys[i] == 'docs') {\n\t\t\t\t\t// Get documents of term.\n\t\t\t\t\tlet docIds = Object.keys(index.docs);\n\t\t\t\t\tfor (let j = 0; j < docIds.length; j++) {\n\t\t\t\t\t\t// Get document store at specific document/field.\n\t\t\t\t\t\tlet ref = self._docStore[docIds[j]];\n\t\t\t\t\t\tif (!ref.hasOwnProperty('termRefs')) {\n\t\t\t\t\t\t\tObject.defineProperties(ref, {\n\t\t\t\t\t\t\t\ttermRefs: {enumerable: false, configurable: true, writable: true, value: []}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Set reference to term index.\n\t\t\t\t\t\tref.termRefs.push(index);\n\t\t\t\t\t}\n\t\t\t\t} else if (keys[i] != 'df') {\n\t\t\t\t\t// Iterate over subtree.\n\t\t\t\t\tregenerate(index[keys[i]], index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tregenerate(this._root, null);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/inverted_index.js","/**\n * The tokenizer is used to prepare the string content of a document field for the inverted index.\n * Firstly the string gets split into tokens.\n * After that the tokens will be trimmed/stemmed with defined functions from the queue.\n *\n * * To change the splitter function, use {@link Tokenizer#setSplitter}.\n * * To add functions to the queue, use {@link Tokenizer#add}, {@link Tokenizer#addBefore} and\n *   {@link Tokenizer#addAfter}.\n * * To remove a function from the queue, use {@link Tokenizer#remove}.\n * * To reset the tokenizer, use {@link Tokenizer#reset}.\n */\nclass Tokenizer {\n\t/**\n\t * Initializes the tokenizer with a splitter, which splits a string at non-alphanumeric characters.\n\t * The queue is empty.\n\t */\n\tconstructor() {\n\t\tthis._splitter = null;\n\t\tthis._queue = [];\n\t\tthis._symbol = Symbol('label');\n\t\t// Set default splitter.\n\t\tthis.setSplitter(\"default\", Tokenizer._defaultSplitter);\n\t}\n\n\t/**\n\t * Sets a function with defined label as the splitter function.\n\t * The function must take a string as argument and return an array of tokens.\n\t *\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\tsetSplitter(label, func) {\n\t\tif (typeof label !== 'string') {\n\t\t\tthrow TypeError(\"Function label must be string.\");\n\t\t}\n\t\tif (typeof func !== 'function') {\n\t\t\tthrow TypeError(\"Splitter must be a function.\");\n\t\t}\n\t\tfunc[this._symbol] = label;\n\t\tthis._splitter = func;\n\t}\n\n\t/**\n\t * Adds a function with defined label to the end of the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\tadd(label, func) {\n\t\tthis._addFunction(label, func, this._queue.length);\n\t}\n\n\t/**\n\t * Adds a function with defined label before an existing function to the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\taddBefore(labelFunc, label, func) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow new Error('Cannot find existing function.');\n\t\t}\n\t\tthis._addFunction(label, func, pos);\n\t}\n\n\t/**\n\t * Adds a function with defined label after an existing function to the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\taddAfter(labelFunc, label, func) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow new Error('Cannot find existing function.');\n\t\t}\n\t\tthis._addFunction(label, func, pos + 1);\n\t}\n\n\t/**\n\t * Removes a function from the queue.\n\t * @param {string|function} labelFunc - an existing label or function\n\t */\n\tremove(labelFunc) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._queue.splice(pos, 1);\n\t}\n\n\t/**\n\t * Resets the splitter and tokenize queue to default.\n\t */\n\treset() {\n\t\tthis._splitter = Tokenizer._defaultSplitter;\n\t\tthis._queue = [];\n\t}\n\n\t/**\n\t * Tokenizes a string into tokens.\n\t * @param {string} str - the string\n\t * @return {string[]} the tokens\n\t * @protected\n\t */\n\ttokenize(str) {\n\t\tlet tokens = this._splitter(str);\n\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\ttokens = this._queue[i](tokens);\n\t\t}\n\t\treturn tokens;\n\t}\n\n\t/**\n\t * Serializes the tokenizer by returning the labels of the used functions.\n\t * @returns {{splitter: string, queue: string[]}} - the serialization\n\t * @protected\n\t */\n\ttoJSON() {\n\t\tlet serialized = {splitter: this._splitter[this._symbol], queue: []};\n\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\tserialized.queue.push(this._queue[i][this._symbol]);\n\t\t}\n\t\treturn serialized;\n\t}\n\n\t/**\n\t * Deserializes the tokenizer by reassign the correct function to each label.\n\t * @param {{splitter: string, queue: string[]}} serialized - the serialized labels\n\t * @param {{splitter: function, queue: function[]}} functions - the depending functions\n\t * @protected\n\t */\n\tloadJSON(serialized, functions) {\n\t\tthis.setSplitter(serialized.splitter, functions.splitter);\n\t\tfor (let i = 0; i < serialized.queue.length; i++) {\n\t\t\tthis.add(serialized.queue[i], functions.queue[serialized.queue[i]]);\n\t\t}\n\t}\n\n\t/**\n\t * Splits a string at non-alphanumeric characters into lower case tokens.\n\t * @param {string} str - the string\n\t * @returns {string[]} - the tokens\n\t * @private\n\t */\n\tstatic _defaultSplitter(str) {\n\t\tlet trimmedTokens = [];\n\t\tlet tokens = str.split(/[^\\w]/);\n\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\tif (tokens[i] !== '') {\n\t\t\t\ttrimmedTokens.push(tokens[i].toLowerCase());\n\t\t\t}\n\t\t}\n\t\treturn trimmedTokens;\n\t}\n\n\t/**\n\t * Returns the position of a function inside the queue.\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @return {number} the position\n\t * @private\n\t */\n\t_getPosition(labelFunc) {\n\t\tif (typeof labelFunc === 'function') {\n\t\t\treturn this._queue.indexOf(labelFunc);\n\t\t} else if (typeof labelFunc === 'string') {\n\t\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\t\tif (this._queue[i][this._symbol] === labelFunc) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow TypeError(\"Type of labelFunc must be string or function.\");\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Adds a function with defined label at a specific position to the queue.\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t * @param {number} pos - the position\n\t * @private\n\t */\n\t_addFunction(label, func, pos) {\n\t\tif (typeof label !== 'string') {\n\t\t\tthrow TypeError(\"Function label must be string.\");\n\t\t}\n\t\tif (typeof func !== 'function') {\n\t\t\tthrow TypeError(\"Type of func must be function.\");\n\t\t}\n\t\tif (typeof pos !== 'number') {\n\t\t\tthrow TypeError(\"Type of pos must be number.\");\n\t\t}\n\t\tfunc[this._symbol] = label;\n\t\tthis._queue.splice(pos, 0, func);\n\t}\n}\n\n\n\nfunction f1() {\n\n}\n\nfunction f1_5() {\n\n}\n\nfunction f2() {\n\n}\n\nfunction f2_5() {\n\n}\n\nfunction f3() {\n\n}\n\nlet tkz = new Tokenizer();\ntkz.add(\"2\", f2);\ntkz.add(\"2.5\", f2_5);\ntkz.addAfter(\"2.5\", \"3\", f3);\ntkz.addBefore(f2, \"1\", f1);\ntkz.addAfter(\"1\", \"1.5\", f1_5);\ntkz.remove(f2_5);\ntkz.remove(\"1.5\");\nconsole.log(tkz._queue, tkz.toJSON());\n\ntkz = new Tokenizer();\nconsole.log(tkz.tokenize(\"hello world ho1w ar,e you toda?y.\"));\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/tokenizer.js","import {Scorer} from './scorer';\nimport {InvertedIndex} from './inverted_index';\nimport {QueryBuilder} from './queries';\n\nexport class IndexSearcher {\n\t/**\n\t *\n\t * @param {object} invIdxs\n\t */\n\tconstructor(invIdxs, docs) {\n\t\tthis._invIdxs = invIdxs;\n\t\tthis._docs = docs;\n\t\tthis._scorer = new Scorer(this._invIdxs);\n\t}\n\n\tsearch(query) {\n\t\tlet docResults = this._recursive(query.query, true);\n\n\t\t// Final scoring.\n\t\tlet finalScoring = query.hasOwnProperty(\"final_scoring\") ? query.final_scoring : true;\n\t\tif (finalScoring) {\n\t\t\treturn this._scorer.finalScore(query, docResults);\n\t\t}\n\t\treturn docResults;\n\t}\n\n\tsetDirty() {\n\t\tthis._scorer.setDirty();\n\t}\n\n\t_recursive(query, doScoring) {\n\t\tlet docResults = {};\n\t\tlet boost = query.hasOwnProperty('boost') ? query.boost : 1;\n\t\tlet fieldName = query.hasOwnProperty(\"field\") ? query.field : null;\n\n\t\tlet root = null;\n\t\tlet tokenizer = null;\n\t\tif (this._invIdxs.hasOwnProperty(fieldName)) {\n\t\t\troot = this._invIdxs[fieldName]._root;\n\t\t\ttokenizer = this._invIdxs[fieldName]._tokenizer;\n\t\t}\n\n\t\tswitch (query.type) {\n\t\t\tcase \"bool\": {\n\t\t\t\tdocResults = null;\n\t\t\t\tif (query.hasOwnProperty(\"must\")) {\n\t\t\t\t\tdocResults = this._getUnique(query.must.values, doScoring, docResults);\n\t\t\t\t}\n\t\t\t\tif (query.hasOwnProperty(\"filter\")) {\n\t\t\t\t\tdocResults = this._getUnique(query.filter.values, false, docResults);\n\t\t\t\t}\n\n\t\t\t\tif (query.hasOwnProperty(\"should\")) {\n\t\t\t\t\tlet shouldDocs = this._getAll(query.should.values, doScoring);\n\n\t\t\t\t\tlet empty = false;\n\t\t\t\t\tif (docResults === null) {\n\t\t\t\t\t\tdocResults = {};\n\t\t\t\t\t\tempty = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet msm = query.hasOwnProperty(\"minimum_should_match\") ? query.minimum_should_match : 1;\n\t\t\t\t\t// Remove all docs with fewer matches.\n\t\t\t\t\t// TODO: Enable percent, negative values and ranges.\n\t\t\t\t\tlet docs = Object.keys(shouldDocs);\n\t\t\t\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\t\t\t\tif (shouldDocs[docId].length >= msm) {\n\t\t\t\t\t\t\tif (docResults.hasOwnProperty(docId)) {\n\t\t\t\t\t\t\t\tdocResults[docId].push(...shouldDocs[docId]);\n\t\t\t\t\t\t\t} else if (empty) {\n\t\t\t\t\t\t\t\tdocResults[docId] = shouldDocs[docId];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (query.hasOwnProperty(\"not\")) {\n\t\t\t\t\tlet notDocs = this._getAll(query.not.values, false);\n\t\t\t\t\t// Remove all docs.\n\t\t\t\t\tlet docs = Object.keys(notDocs);\n\t\t\t\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\t\t\t\tif (docResults.hasOwnProperty(docId)) {\n\t\t\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"term\": {\n\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.value, root);\n\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx, doScoring, docResults, query.value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"terms\": {\n\t\t\t\tfor (let i = 0; i < query.values.length; i++) {\n\t\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.values[i], root);\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx, doScoring, docResults, query.values[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"fuzzy\": {\n\t\t\t\tlet f = new FuzzySearch(query);\n\t\t\t\tlet b = f.search(root);\n\t\t\t\tfor (let i = 0; i < b.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost * b[i].boost, b[i].index, doScoring, docResults, b[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"wildcard\": {\n\t\t\t\tlet w = new WildcardSearch(query);\n\t\t\t\tlet a = w.search(root);\n\t\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, a[i].index, doScoring, docResults, a[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"match_all\": {\n\t\t\t\tfor (let docId of this._docs) {\n\t\t\t\t\tthis._scorer.scoreConstant(boost, docId, docResults);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"constant_score\": {\n\t\t\t\tdocResults = this._getAll(query.filter.values, false);\n\t\t\t\tlet docs = Object.keys(docResults);\n\t\t\t\t// Add to each document a constant score.\n\t\t\t\tfor (let i = 0; i < docs.length; i++) {\n\t\t\t\t\tthis._scorer.scoreConstant(boost, docs[i], docResults);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"prefix\": {\n\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.value, root);\n\t\t\t\tif (termIdx != null) {\n\t\t\t\t\ttermIdx = InvertedIndex.extendTermIndex(termIdx);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < termIdx.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx[i].index, doScoring, docResults, query.value + termIdx[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"exists\": {\n\t\t\t\tif (root != null) {\n\t\t\t\t\tlet docs = Object.keys(this._invIdxs[fieldName].getDocumentStore());\n\t\t\t\t\tfor (let i = 0; i < docs.length; i++) {\n\t\t\t\t\t\tthis._scorer.scoreConstant(boost, docs[i], docResults);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"match\": {\n\t\t\t\tlet terms = tokenizer.tokenize(query.query);\n\t\t\t\tlet operator = query.hasOwnProperty(\"operator\") ? query.operator : \"or\";\n\n\t\t\t\tlet tmpQuery = new QueryBuilder().bool();\n\t\t\t\tif (operator === \"or\") {\n\t\t\t\t\tif (query.hasOwnProperty(\"minimum_should_match\")) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.minimumShouldMatch(query.minimum_should_match);\n\t\t\t\t\t}\n\t\t\t\t\t// Build a should query.\n\t\t\t\t\ttmpQuery = tmpQuery.startShould();\n\t\t\t\t} else {\n\t\t\t\t\t// Build a must query.\n\t\t\t\t\ttmpQuery = tmpQuery.startMust();\n\t\t\t\t}\n\t\t\t\ttmpQuery = tmpQuery.boost(boost);\n\n\t\t\t\tif (query.hasOwnProperty(\"fuzziness\")) {\n\t\t\t\t\tlet prefixLength = query.hasOwnProperty(\"prefix_length\") ? query.prefix_length : 2;\n\t\t\t\t\t// Add each fuzzy.\n\t\t\t\t\tfor (let i = 0; i < terms.length; i++) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.fuzzy(fieldName, terms[i]).fuzziness(query.fuzziness).prefixLength(prefixLength);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Add each term.\n\t\t\t\t\tfor (let i = 0; i < terms.length; i++) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.term(fieldName, terms[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operator === \"or\") {\n\t\t\t\t\ttmpQuery = tmpQuery.endShould();\n\t\t\t\t} else {\n\t\t\t\t\ttmpQuery = tmpQuery.endMust();\n\t\t\t\t}\n\n\t\t\t\tdocResults = this._recursive(tmpQuery.build(), doScoring);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn docResults;\n\t}\n\n\t_getUnique(values, doScoring, docResults) {\n\t\tif (values.length === 0) {\n\t\t\treturn docResults;\n\t\t}\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tlet currDocs = this._recursive(values[i], doScoring);\n\t\t\tif (docResults === null) {\n\t\t\t\tdocResults = this._recursive(values[0], doScoring);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet docs = Object.keys(docResults);\n\t\t\tfor (let j = 0, docId; j < docs.length, docId = docs[j]; j++) {\n\t\t\t\tif (!currDocs.hasOwnProperty(docId)) {\n\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t} else {\n\t\t\t\t\tdocResults[docId].push(...currDocs[docId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn docResults;\n\t}\n\n\t_getAll(values, doScoring) {\n\t\tlet docResults = {};\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tlet currDocs = this._recursive(values[i], doScoring);\n\t\t\tlet docs = Object.keys(currDocs);\n\t\t\tfor (let j = 0, docId; j < docs.length, docId = docs[j]; j++) {\n\t\t\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\t\t\tdocResults[docId] = currDocs[docId];\n\t\t\t\t} else {\n\t\t\t\t\tdocResults[docId].push(...currDocs[docId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn docResults;\n\t}\n}\n\n\nclass FuzzySearch {\n\tconstructor(query) {\n\t\tthis._fuzzy = query.value;\n\t\tthis._fuzziness = query.hasOwnProperty('fuzziness') ? query.fuzziness : 2;\n\t\tthis._prefixLength = query.hasOwnProperty('prefix_length') ? query.prefix_length : 2;\n\t}\n\n\t/**\n\t * Copyright Kigiri: https://github.com/kigiri\n\t *                     Milot Mirdita: https://github.com/milot-mirdita\n\t *                     Toni Neubert:  https://github.com/Viatorus/\n\t */\n\tlevenshtein_distance(a, b) {\n\t\tif (a.length === 0) return b.length;\n\t\tif (b.length === 0) return a.length;\n\t\tlet tmp, i, j, prev, val;\n\t\t// swap to save some memory O(min(a,b)) instead of O(a)\n\t\tif (a.length > b.length) {\n\t\t\ttmp = a;\n\t\t\ta = b;\n\t\t\tb = tmp;\n\t\t}\n\n\t\tvar row = Array(a.length + 1);\n\t\t// init the row\n\t\tfor (i = 0; i <= a.length; i++) {\n\t\t\trow[i] = i;\n\t\t}\n\n\t\t// fill in the rest\n\t\tfor (i = 1; i <= b.length; i++) {\n\t\t\tprev = i;\n\t\t\tfor (j = 1; j <= a.length; j++) {\n\t\t\t\tif (b[i - 1] === a[j - 1]) {\t// match\n\t\t\t\t\tval = row[j - 1];\n\t\t\t\t} else {\n\t\t\t\t\tval = Math.min(row[j - 1] + 1, // substitution\n\t\t\t\t\t\tMath.min(prev + 1,         // insertion\n\t\t\t\t\t\t\trow[j] + 1));          // deletion\n\n\t\t\t\t\t// transposition.\n\t\t\t\t\tif (i > 1 && j > 1 && b[i - 2] === a[j - 1] && a[j - 2] === b[i - 1]) {\n\t\t\t\t\t\tval = Math.min(val, row[j - 1] - (a[j - 1] === b[i - 1] ? 1 : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trow[j - 1] = prev;\n\t\t\t\tprev = val;\n\t\t\t}\n\t\t\trow[a.length] = prev;\n\t\t}\n\t\treturn row[a.length];\n\t}\n\n\t/**\n\t * Performs a fuzzy search for a given term.\n\t * @param {string} query - a fuzzy term to match.\n\t * @param {number} [maxDistance=2] - maximal edit distance between terms\n\t * @returns {Array} - array with all matching term indices.\n\t */\n\tsearch(root) {\n\t\t// Todo: Include levenshtein to reduce similar iterations.\n\t\t// Tree tokens at same depth share same row until depth (should works if recursive).\n\t\t// Pregenerate tree token ?\n\t\t//var treeToken = Array(token.length + maxDistance);\n\n\t\tlet start = root;\n\t\tlet pre = this._fuzzy.slice(0, this._prefixLength);\n\t\tlet fuzzy = this._fuzzy;\n\t\tif (this._prefixLength != 0) {\n\t\t\tstart = InvertedIndex.getTermIndex(pre, start);\n\t\t\tfuzzy = fuzzy.slice(this._prefixLength);\n\t\t}\n\t\tif (start === null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet similarTokens = [];\n\n\t\tlet stack = [start];\n\t\tlet treeStack = [''];\n\t\tdo {\n\t\t\tlet root = stack.pop();\n\t\t\tlet treeTerms = treeStack.pop();\n\n\t\t\t// Compare tokens if they are in near distance.\n\t\t\tif (root.hasOwnProperty('df') && Math.abs(fuzzy.length - treeTerms.length) <= this._fuzziness) {\n\t\t\t\tvar distance = this.levenshtein_distance(fuzzy, treeTerms);\n\t\t\t\tif (distance <= this._fuzziness) {\n\t\t\t\t\t// Calculate boost.\n\t\t\t\t\tlet boost = 1 - distance / (pre.length + treeTerms.length);\n\t\t\t\t\tsimilarTokens.push({term: pre + treeTerms, index: root, boost: boost});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Iterate over all subtrees.\n\t\t\t// If token from tree is not longer than maximal distance.\n\t\t\tif (treeTerms.length - fuzzy.length <= this._fuzziness) {\n\t\t\t\t// Iterate over all subtrees.\n\t\t\t\tlet keys = Object.keys(root);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\t\t\tstack.push(root[keys[i]]);\n\t\t\t\t\t\ttreeStack.push(treeTerms + keys[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} while (stack.length !== 0);\n\n\t\treturn similarTokens;\n\t}\n}\n\nclass WildcardSearch {\n\n\tconstructor(query) {\n\t\tthis._wildcard = query.wildcard;\n\t\tthis._result = [];\n\t}\n\n\t/**\n\t * Performs a wild card search for a given query term.\n\t * @param {string} query - a wild card query to match.\n\t * @returns {Array} - array with all matching term indices.\n\t */\n\tsearch(root) {\n\t\t// Todo: Need an implementation for star operator.\n\t\tthis._result = [];\n\t\tthis._recursive(root);\n\t\treturn this._result;\n\t}\n\n\t/**\n\t *\n\t * @param root\n\t * @param idx\n\t * @param term\n\t * @param escaped\n\t * @private\n\t */\n\t_recursive(root, idx = 0, term = '', escaped = false) {\n\t\tif (root === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (idx === this._wildcard.length) {\n\t\t\tif (root.hasOwnProperty('df')) {\n\t\t\t\tthis._result.push({index: root, term: term});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!escaped && this._wildcard[idx] === '\\\\') {\n\t\t\tthis._recursive(root, idx + 1, term, true);\n\t\t} else if (!escaped && this._wildcard[idx] === '?') {\n\t\t\tlet others = InvertedIndex.getNextTermIndex(root);\n\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\tthis._recursive(others[i].index, idx + 1, term + others[i].term);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._recursive(InvertedIndex.getTermIndex(this._wildcard[idx], root), idx + 1, term + this._wildcard[idx]);\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/index_searcher.js","export class Scorer {\n\tconstructor(invIdxs) {\n\t\tthis._invIdxs = invIdxs;\n\t\tthis._cache = {};\n\t}\n\n\tsetDirty() {\n\t\tthis._cache = {};\n\t}\n\n\tprepare(fieldName, boost, termIdx, doScoring, docResults = {}, term = null) {\n\t\tif (termIdx == null || !termIdx.hasOwnProperty('docs')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet idf = this._idf(fieldName, termIdx.df);\n\t\tlet docIds = Object.keys(termIdx.docs);\n\t\tfor (let j = 0; j < docIds.length; j++) {\n\t\t\tlet docId = docIds[j];\n\t\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\t\tdocResults[docId] = [];\n\t\t\t}\n\n\t\t\tif (doScoring) {\n\t\t\t\tlet tf = termIdx.docs[docId];\n\t\t\t\tdocResults[docId].push({\n\t\t\t\t\ttype: 'BM25',\n\t\t\t\t\ttf: tf,\n\t\t\t\t\tidf: idf,\n\t\t\t\t\tboost: boost,\n\t\t\t\t\tfieldName: fieldName,\n\t\t\t\t\tterm: term\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// TODO: Maybe only 1 constant store per document\n\t\t\t\tdocResults[docId].push({\n\t\t\t\t\ttype: \"constant\", value: 1, boost: boost, fieldName: fieldName,\n\t\t\t\t\tterm: term\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn docResults;\n\t}\n\n\tscoreConstant(boost, docId, docResults = {}) {\n\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\tdocResults[docId] = [];\n\t\t}\n\t\tdocResults[docId].push({type: \"constant\", value: 1, boost: boost});\n\t\treturn docResults;\n\t}\n\n\tfinalScore(query, docResults = {}) {\n\n\t\tlet result = {};\n\t\tlet k1 = 1.2;\n\t\tlet b = 0.75;\n\n\t\tif (query.hasOwnProperty(\"scoring\")) {\n\t\t\tif (query.scoring.hasOwnProperty(\"k1\")) {\n\t\t\t\tk1 = query.scoring.k1;\n\t\t\t}\n\t\t\tif (query.scoring.hasOwnProperty(\"b\")) {\n\t\t\t\tb = query.scoring.b;\n\t\t\t}\n\t\t}\n\n\t\tlet docs = Object.keys(docResults);\n\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\tlet docScore = 0;\n\t\t\tfor (let j = 0; j < docResults[docId].length; j++) {\n\t\t\t\tlet docResult = docResults[docId][j];\n\n\t\t\t\tlet res = 0;\n\t\t\t\tswitch (docResult.type) {\n\t\t\t\t\tcase 'BM25': {\n\t\t\t\t\t\tlet fieldLength = this._invIdxs[docResult.fieldName].getDocumentStore()[docId].fieldLength /\n\t\t\t\t\t\t\tMath.pow(this._invIdxs[docResult.fieldName].getDocumentStore()[docId].boost, 2);\n\t\t\t\t\t\tlet avgFieldLength = this._avgFieldLength(docResult.fieldName);\n\t\t\t\t\t\tlet tfNorm = ((k1 + 1) * docResult.tf) / (k1 * ((1 - b)\n\t\t\t\t\t\t\t+ b * (fieldLength / avgFieldLength)) + docResult.tf);\n\t\t\t\t\t\tres = docResult.idf * tfNorm * docResult.boost;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\tdocId + \":\" + docResult.fieldName + \":\" + docResult.term + \" = \" + res,\n\t\t\t\t\t\t\t\"\\n\\ttype: BM25\",\n\t\t\t\t\t\t\t\"\\n\\tboost: \" + docResult.boost,\n\t\t\t\t\t\t\t\"\\n\\tidf : \" + docResult.idf,\n\t\t\t\t\t\t\t\"\\n\\ttfNorm : \" + tfNorm,\n\t\t\t\t\t\t\t\"\\n\\ttf : \" + docResult.tf,\n\t\t\t\t\t\t\t\"\\n\\tavg : \" + avgFieldLength,\n\t\t\t\t\t\t\t\"\\n\\tfl : \" + fieldLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\t\tres = docResult.value * docResult.boost;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"Constant: \" + res,\n\t\t\t\t\t\t\t\"\\n\\tboost: \" + docResult.boost,\n\t\t\t\t\t\t\t\"\\n\\tvalue : \" + docResult.value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdocScore += res;\n\t\t\t}\n\t\t\tconsole.log(docId, \" === \", docScore);\n\t\t\tresult[docId] = docScore;\n\t\t}\n\t\treturn result;\n\t}\n\n\t_getCache(fieldName) {\n\t\tif (!this._cache.hasOwnProperty(fieldName)) {\n\t\t\tlet avgFieldLength = this._invIdxs[fieldName].getTotalFieldLength() / this._invIdxs[fieldName].getDocumentCount();\n\t\t\tthis._cache[fieldName] = {idfs: {}, avgFieldLength: avgFieldLength};\n\t\t}\n\t\treturn this._cache[fieldName];\n\t}\n\n\t/**\n\t * Returns the idf by either calculate it or use a cached one.\n\t * @param {number} docFreq - the doc frequency of the term\n\t * @returns {number} the idf\n\t * @private\n\t */\n\t_idf(fieldName, docFreq) {\n\t\tlet cache = this._getCache(fieldName);\n\t\tif (cache.idfs.hasOwnProperty(String(docFreq))) {\n\t\t\treturn cache.idfs[docFreq];\n\t\t}\n\t\treturn cache.idfs[docFreq] = Math.log(1 + (this._invIdxs[fieldName].getDocumentCount() - docFreq + 0.5) / (docFreq + 0.5));\n\t}\n\n\t_avgFieldLength(fieldName) {\n\t\treturn this._getCache(fieldName).avgFieldLength;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/scorer.js","class BoostQuery {\n\tconstructor(type, data = {}) {\n\t\tthis._data = data;\n\t\tthis._data.type = type;\n\t}\n\n\tboost(value) {\n\t\tif (typeof(value) !== \"number\" || value < 0) {\n\t\t\tthrow TypeError(\"Boost must be a positive number.\");\n\t\t}\n\t\tthis._data.boost = value;\n\t\treturn this;\n\t}\n\n\tbuild() {\n\t\treturn this._data;\n\t}\n}\n\nclass TermQuery extends BoostQuery {\n\t/**\n\t * Constructs a term query.\n\t * @param {string} field - the field name where the term should be searched\n\t * @param {string} term - the term\n\t */\n\tconstructor(field, term, data = {}) {\n\t\tsuper(\"term\", data);\n\t\tthis._data.field = field;\n\t\tthis._data.value = term;\n\t}\n}\n\nclass TermsQuery extends BoostQuery {\n\t/**\n\t * Constructs a term query.\n\t * @param {string} field - the field name where the term should be searched\n\t * @param {string} term - the term\n\t */\n\tconstructor(field, terms, data = {}) {\n\t\tsuper(\"terms\", data);\n\t\tthis._data.field = field;\n\t\tif (!Array.isArray(terms)) {\n\t\t\tthrow TypeError(\"Value for terms must be an array.\");\n\t\t}\n\t\tthis._data.values = terms;\n\t}\n}\n\n\nclass WildcardQuery extends BoostQuery {\n\tconstructor(field, wildcard, data = {}) {\n\t\tsuper(\"wildcard\", data);\n\t\tthis._data.field = field;\n\t\tthis._data.wildcard = wildcard;\n\t}\n}\n\nclass FuzzyQuery extends BoostQuery {\n\tconstructor(field, fuzzy, data = {}) {\n\t\tsuper(\"fuzzy\", data);\n\t\tthis._data.field = field;\n\t\tthis._data.value = fuzzy;\n\t}\n\n\tfuzziness(fuzziness) {\n\t\tif (typeof(fuzziness) !== \"number\" || fuzziness < 0) {\n\t\t\tthrow TypeError(\"Fuzziness must be a positive number.\");\n\t\t}\n\t\tthis._data.fuzziness = fuzziness;\n\t\treturn this;\n\t}\n\n\tprefixLength(prefixLength) {\n\t\tif (typeof(prefixLength) !== \"number\" || prefixLength < 0) {\n\t\t\tthrow TypeError(\"Prefix length must be a positive number.\");\n\t\t}\n\t\tthis._data.prefix_length = prefixLength;\n\t\treturn this;\n\t}\n}\n\nclass PrefixQuery extends BoostQuery {\n\tconstructor(field, prefix, data = {}) {\n\t\tsuper(\"prefix\", data);\n\t\tthis._data.field = field;\n\t\tthis._data.value = prefix;\n\t}\n}\n\nclass ExistsQuery extends BoostQuery {\n\tconstructor(field, data = {}) {\n\t\tsuper(\"exists\", data);\n\t\tthis._data.field = field;\n\t}\n}\n\nclass MatchQuery extends BoostQuery {\n\tconstructor(field, query, data = {}) {\n\t\tsuper(\"match\", data);\n\t\tthis._data.field = field;\n\t\tthis._data.query = query;\n\t}\n\n\tminimumShouldMatch(minShouldMatch) {\n\t\tif (typeof(minShouldMatch) !== \"number\") {\n\t\t\tthrow TypeError(\"Value for minimum should match must be a number.\");\n\t\t}\n\t\tif (this._data.hasOwnProperty(\"operator\") && this._data.operator == \"and\") {\n\t\t\tthrow SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n\t\t}\n\t\tthis._data.minimum_should_match = minShouldMatch;\n\t\treturn this;\n\t}\n\n\toperator(value) {\n\t\tif (typeof(value) !== \"string\") {\n\t\t\tthrow TypeError(\"Value for operator must be a string.\");\n\t\t}\n\t\tif (value != 'and' && value != 'or') {\n\t\t\tthrow SyntaxError(\"Unknown operator.\");\n\t\t}\n\t\tthis._data.operator = value;\n\t\tif (this._data.hasOwnProperty(\"minimum_should_match\") && this._data.operator == \"and\") {\n\t\t\tthrow SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n\t\t}\n\t\treturn this;\n\t}\n\n\tfuzziness(fuzziness) {\n\t\tif (typeof(fuzziness) !== \"number\" || fuzziness < 0) {\n\t\t\tthrow TypeError(\"Fuzziness must be a positive number.\");\n\t\t}\n\t\tthis._data.fuzziness = fuzziness;\n\t\treturn this;\n\t}\n\n\tprefixLength(prefixLength) {\n\t\tif (typeof(prefixLength) !== \"number\" || prefixLength < 0) {\n\t\t\tthrow TypeError(\"Prefix length must be a positive number.\");\n\t\t}\n\t\tthis._data.prefix_length = prefixLength;\n\t\treturn this;\n\t}\n}\n\nclass MatchAll extends BoostQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"match_all\", data);\n\t}\n}\n\nclass ArrayQuery extends BoostQuery {\n\tconstructor(callbackName, callback, data = {}) {\n\t\tsuper(\"array\", data);\n\t\tthis._data.values = [];\n\t\tthis._callbackName = callbackName;\n\t\tthis[callbackName] = callback;\n\n\t\tlet self = this;\n\t\tthis._prepare = (queryType, ...args) => {\n\t\t\tlet data = {};\n\t\t\tlet query = new queryType(...args, data);\n\t\t\tself._data.values.push(data);\n\t\t\tquery.bool = self.bool;\n\t\t\tquery.constantScore = self.constantScore;\n\t\t\tquery.term = self.term;\n\t\t\tquery.terms = self.terms;\n\t\t\tquery.wildcard = self.wildcard;\n\t\t\tquery.fuzzy = self.fuzzy;\n\t\t\tquery.match = self.match;\n\t\t\tquery.matchAll = self.matchAll;\n\t\t\tquery.prefix = self.prefix;\n\t\t\tquery.exists = self.exists;\n\t\t\tquery._prepare = self._prepare;\n\t\t\tquery[self._callbackName] = self[self._callbackName];\n\t\t\treturn query;\n\t\t};\n\t}\n\n\tbool() {\n\t\treturn this._prepare(BoolQuery);\n\t}\n\n\tconstantScore() {\n\t\treturn this._prepare(ConstantScoreQuery);\n\t}\n\n\tterm(field, term) {\n\t\treturn this._prepare(TermQuery, field, term);\n\t}\n\n\tterms(field, terms) {\n\t\treturn this._prepare(TermsQuery, field, terms);\n\t}\n\n\twildcard(field, wildcard) {\n\t\treturn this._prepare(WildcardQuery, field, wildcard);\n\t}\n\n\tfuzzy(field, fuzzy) {\n\t\treturn this._prepare(FuzzyQuery, field, fuzzy);\n\t}\n\n\tmatch(field, query) {\n\t\treturn this._prepare(MatchQuery, field, query);\n\t}\n\n\tmatchAll() {\n\t\treturn this._prepare(MatchAll);\n\t}\n\n\tprefix(field, prefix) {\n\t\treturn this._prepare(PrefixQuery, field, prefix);\n\t}\n\n\texists(field) {\n\t\treturn this._prepare(ExistsQuery, field);\n\t}\n}\n\nclass ConstantScoreQuery extends BoostQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"constant_score\", data);\n\n\t\tlet self = this;\n\t\tthis._callback = () => {\n\t\t\treturn self;\n\t\t};\n\t}\n\n\tstartFilter() {\n\t\tthis._data.filter = {};\n\t\treturn new ArrayQuery(\"endFilter\", this._callback, this._data.filter);\n\t}\n}\n\nclass BoolQuery extends BoostQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"bool\", data);\n\n\t\tlet self = this;\n\t\tthis._callback = () => {\n\t\t\treturn self;\n\t\t};\n\t}\n\n\tstartMust() {\n\t\tthis._data.must = {};\n\t\treturn new ArrayQuery(\"endMust\", this._callback, this._data.must);\n\t}\n\n\tstartFilter() {\n\t\tthis._data.filter = {};\n\t\treturn new ArrayQuery(\"endFilter\", this._callback, this._data.filter);\n\t}\n\n\tstartShould() {\n\t\tthis._data.should = {};\n\t\treturn new ArrayQuery(\"endShould\", this._callback, this._data.should);\n\t}\n\n\tstartNot() {\n\t\tthis._data.not = {};\n\t\treturn new ArrayQuery(\"endNot\", this._callback, this._data.not);\n\t}\n\n\tminimumShouldMatch(minShouldMatch) {\n\t\tif (typeof(minShouldMatch) !== \"number\" || minShouldMatch < 0) {\n\t\t\tthrow TypeError(\"Minimum should match must be a number greater than zero.\");\n\t\t}\n\t\tthis._data.minimum_should_match = minShouldMatch;\n\t\treturn this;\n\t}\n}\n\nexport class QueryBuilder {\n\tconstructor() {\n\t\tthis._data = {query: {}};\n\n\t\tlet self = this;\n\t\tlet callback = () => {\n\t\t\treturn self._data;\n\t\t};\n\n\t\tthis._prepare = (queryType, ...args) => {\n\t\t\tthis._child = new queryType(...args, this._data.query);\n\t\t\tthis._child.build = callback;\n\t\t\treturn this._child;\n\t\t};\n\t}\n\n\tenableFinalScoring(enabled) {\n\t\tif (typeof(enabled) !== \"boolean\") {\n\t\t\tthrow TypeError(\"Enable scoring must a boolean.\");\n\t\t}\n\t\tthis._data.final_scoring = enabled;\n\t\treturn this;\n\t}\n\n\tuseBM25(k1, b) {\n\t\tif (typeof(k1) !== \"number\" || k1 < 0) {\n\t\t\tthrow TypeError(\"BM25s k1 must be a positive number.\");\n\t\t}\n\t\tif (typeof(b) !== \"number\" || b < 0 || b > 1) {\n\t\t\tthrow TypeError(\"BM25s b must be a number between 0 and 1 inclusive.\");\n\t\t}\n\n\t\tthis._data.scoring = {\n\t\t\ttype: \"BM25\",\n\t\t\tk1: k1,\n\t\t\tb: b\n\t\t};\n\t\treturn this;\n\t}\n\n\tbool() {\n\t\treturn this._prepare(BoolQuery);\n\t}\n\n\tconstantScore() {\n\t\treturn this._prepare(ConstantScoreQuery);\n\t}\n\n\tterm(field, term) {\n\t\treturn this._prepare(TermQuery, field, term);\n\t}\n\n\tterms(field, terms) {\n\t\treturn this._prepare(TermsQuery, field, terms);\n\t}\n\n\twildcard(field, wildcard) {\n\t\treturn this._prepare(WildcardQuery, field, wildcard);\n\t}\n\n\tfuzzy(field, fuzzy) {\n\t\treturn this._prepare(FuzzyQuery, field, fuzzy);\n\t}\n\n\tmatch(field, query) {\n\t\treturn this._prepare(MatchQuery, field, query);\n\t}\n\n\tmatchAll() {\n\t\treturn this._prepare(MatchAll);\n\t}\n\n\tprefix(field, prefix) {\n\t\treturn this._prepare(PrefixQuery, field, prefix);\n\t}\n\n\texists(field) {\n\t\treturn this._prepare(ExistsQuery, field);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/queries.js"],"sourceRoot":""}