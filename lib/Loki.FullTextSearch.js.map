{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c5f9ab4be85ceeae80cc","webpack:///./src/inverted_index/index.js","webpack:///./src/inverted_index/full_text_search.js","webpack:///./src/inverted_index/inverted_index.js","webpack:///./src/inverted_index/tokenizer.js","webpack:///./src/inverted_index/utils.js","webpack:///./src/inverted_index/index_searcher.js","webpack:///./src/inverted_index/scorer.js","webpack:///./src/inverted_index/queries.js","webpack:///external \"Loki\""],"names":["Tokenizer","Plugins","FullTextSearch","module","exports","Utils","constructor","fields","undefined","SyntaxError","_invIdxs","Array","isArray","i","length","field","name","asString","TypeError","tokenizer","_docs","Set","_idxSearcher","addDocument","doc","boosts","hasOwnProperty","Error","fieldNames","Object","keys","fieldName","boost","insert","$loki","add","setDirty","removeDocument","remove","delete","updateDocument","search","query","toJSON","serialized","loadJSON","db","JSON","parse","InvertedIndex","_fieldName","_docCount","_docStore","_totalFieldLength","_tokenizer","_root","documentCount","documentStore","totalFieldLength","root","docId","fieldTokens","tokenize","termRefs","fieldLength","defineProperties","enumerable","configurable","writable","value","term","tf","j","branch","c","child","parent","docs","df","push","String","docStore","index","k","key","getTermIndex","start","getNextTermIndex","termIndices","extendTermIndex","stack","treeStack","pop","treeTermn","dbObject","self","regenerate","docIds","ref","defaultSplitter","str","trimmedTokens","tokens","split","toLowerCase","_splitter","_queue","_symbol","Symbol","reset","setSplitter","label","func","isFunction","getSplitter","resetSplitter","get","labelFunc","pos","_getPosition","_addFunction","addBefore","addAfter","splice","tokenizers","splitter","functions","splitters","indexOf","isConvertibleToString","isObject","isNumber","isBoolean","isString","asBoolean","asArrayOfString","x","prototype","toString","call","error","Boolean","array","IndexSearcher","invIdxs","_scorer","docResults","_recursive","finalScoring","final_scoring","finalScore","doScoring","type","_getUnique","must","values","filter","shouldDocs","_getAll","should","empty","msm","minimum_should_match","notDocs","not","termIdx","prepare","f","FuzzySearch","b","w","WildcardSearch","a","scoreConstant","terms","operator","tmpQuery","bool","minimumShouldMatch","startShould","startMust","prefixLength","prefix_length","fuzzy","fuzziness","endShould","endMust","build","currDocs","_fuzzy","_fuzziness","_prefixLength","levenshtein_distance","tmp","prev","val","row","Math","min","pre","slice","similarTokens","treeTerms","abs","distance","_wildcard","_result","idx","escaped","others","all","Scorer","_cache","idf","_idf","result","k1","scoring","docScore","docResult","res","pow","avgFieldLength","_avgFieldLength","tfNorm","_getCache","idfs","docFreq","cache","log","BaseQuery","data","_data","TermQuery","TermsQuery","WildcardQuery","wildcard","FuzzyQuery","PrefixQuery","prefix","ExistsQuery","MatchQuery","minShouldMatch","op","MatchAllQuery","ArrayQuery","callbackName","callback","_callbackName","_prepare","queryType","args","constantScore","match","matchAll","exists","BoolQuery","ConstantScoreQuery","startFilter","startNot","QueryBuilder","useBM25","enableFinalScoring","enabled","_child"],"mappings":"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","file":"Loki.FullTextSearch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Loki\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Loki.FullTextSearch\", [\"Loki\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Loki.FullTextSearch\"] = factory(require(\"Loki\"));\n\telse\n\t\troot[\"Loki.FullTextSearch\"] = factory(root[\"Loki\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c5f9ab4be85ceeae80cc","import {FullTextSearch} from './full_text_search';\nimport {Tokenizer} from './tokenizer';\nimport Loki from '../core/loki';\n\nLoki.Tokenizer = Tokenizer;\nLoki.Plugins.FullTextSearch = FullTextSearch;\n\nmodule.exports = FullTextSearch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/index.js","import {InvertedIndex} from './inverted_index';\nimport {IndexSearcher} from './index_searcher';\nimport {Tokenizer} from './tokenizer';\nimport * as Utils from './utils.js';\n\nexport class FullTextSearch {\n\t/**\n\t *\n\t * @param options\n\t */\n\tconstructor(fields) {\n\t\tif (fields === undefined) {\n\t\t\tthrow new SyntaxError('Fields needs to be defined!');\n\t\t}\n\n\t\tthis._invIdxs = {};\n\t\t// Get field names and tokenizers.\n\t\tif (Array.isArray(fields)) {\n\t\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\t\tlet field = fields[i];\n\t\t\t\tlet name = Utils.asString(field.name, TypeError('Field name needs to be a string.'));\n\t\t\t\tlet tokenizer = field.tokenizer;\n\t\t\t\tif (tokenizer !== undefined) {\n\t\t\t\t\tif (!(tokenizer instanceof Tokenizer)) {\n\t\t\t\t\t\tthrow new TypeError(\"Field tokenizer needs to be a instance of tokenizer.\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttokenizer = new Tokenizer();\n\t\t\t\t}\n\t\t\t\tthis._invIdxs[field.name] = new InvertedIndex(name, tokenizer);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('fields needs to be an array with field name and a tokenizer (optional).');\n\t\t}\n\n\t\tthis._docs = new Set();\n\t\tthis._idxSearcher = new IndexSearcher(this._invIdxs, this._docs);\n\t}\n\n\taddDocument(doc, boosts = {}) {\n\t\tif (!doc.hasOwnProperty('$loki')) {\n\t\t\tthrow new Error('Document is not stored in the collection.');\n\t\t}\n\n\t\tlet fieldNames = Object.keys(doc);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tif (this._invIdxs.hasOwnProperty(fieldName)) {\n\t\t\t\tlet boost = boosts.hasOwnProperty(fieldName) ? boosts[fieldName] : 1;\n\t\t\t\tthis._invIdxs[fieldName].insert(doc[fieldName], doc.$loki, boost);\n\t\t\t}\n\t\t}\n\n\t\tthis._docs.add(doc.$loki);\n\t\tthis.setDirty();\n\t}\n\n\tremoveDocument(doc) {\n\t\tif (!doc.hasOwnProperty('$loki')) {\n\t\t\tthrow new Error('Document is not stored in the collection.');\n\t\t}\n\n\t\tlet fieldNames = Object.keys(this._invIdxs);\n\t\tfor (let i = 0; i < fieldNames.length; i++) {\n\t\t\tthis._invIdxs[fieldNames[i]].remove(doc.$loki);\n\t\t}\n\n\t\tthis._docs.delete(doc.$loki);\n\t\tthis.setDirty();\n\t}\n\n\tupdateDocument(doc, boosts = {}) {\n\t\tthis.removeDocument(doc);\n\t\tthis.addDocument(doc, boosts);\n\t}\n\n\tsearch(query) {\n\t\treturn this._idxSearcher.search(query);\n\t}\n\n\ttoJSON() {\n\t\tlet serialized = {};\n\t\tlet fieldNames = Object.keys(this._invIdxs);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tserialized[fieldName] = this._invIdxs[fieldName].toJSON();\n\t\t}\n\t\treturn serialized;\n\t}\n\n\tloadJSON(serialized) {\n\t\tlet db = JSON.parse(serialized);\n\t\tlet fieldNames = Object.keys(db);\n\t\tfor (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n\t\t\tthis._invIdxs[fieldName] = new InvertedIndex({});\n\t\t\tthis._invIdxs[fieldName].loadJSON(db[fieldName]);\n\t\t}\n\t}\n\n\tsetDirty() {\n\t\tthis._idxSearcher.setDirty();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/full_text_search.js","import {Tokenizer} from './tokenizer';\n\n/**\n * Inverted index class handles featured text search for specific document fields.\n * @constructor InvertedIndex\n * @param {boolean} [options.store=true] - inverted index will be stored at serialization rather than rebuilt on load.\n */\nexport class InvertedIndex {\n\t/**\n\t *\n\t * @param {string} fieldName\n\t * @param {Tokenizer} tokenizer\n\t */\n\tconstructor(fieldName, tokenizer = new Tokenizer) {\n\t\tthis._fieldName = fieldName;\n\t\tthis._docCount = 0;\n\t\tthis._docStore = {};\n\t\tthis._totalFieldLength = 0;\n\t\tthis._tokenizer = tokenizer;\n\t\tthis._root = {};\n\t}\n\n\tget documentCount() {\n\t\treturn this._docCount;\n\t}\n\n\tget documentStore() {\n\t\treturn this._docStore;\n\t}\n\n\tget totalFieldLength() {\n\t\treturn this._totalFieldLength;\n\t}\n\n\tget fieldName() {\n\t\treturn this._fieldName;\n\t}\n\n\tget tokenizer() {\n\t\treturn this._tokenizer;\n\t}\n\n\tget root() {\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Adds defined fields of a document to the inverted index.\n\t * @param {object} field - the field to add\n\t * @param {number} docId - the doc id of the field\n\t * @param {number} [boost=1] - object with field (key) specific boost (value)\n\t */\n\tinsert(field, docId, boost = 1) {\n\t\tif (this._docStore.hasOwnProperty(docId)) {\n\t\t\tthrow Error('Field already added.');\n\t\t}\n\n\t\tthis._docCount += 1;\n\t\tthis._docStore[docId] = {};\n\n\t\t// Tokenize document field.\n\t\tlet fieldTokens = this._tokenizer.tokenize(field);\n\t\tthis._totalFieldLength += fieldTokens.length;\n\n\t\tlet termRefs = [];\n\t\tthis._docStore[docId] = {fieldLength: fieldTokens.length, boost: boost};\n\t\tObject.defineProperties(this._docStore[docId], {\n\t\t\ttermRefs: {enumerable: false, configurable: true, writable: true, value: termRefs}\n\t\t});\n\n\t\t// Iterate over all unique field terms.\n\t\tfor (let term of new Set(fieldTokens)) {\n\t\t\tif (term === '') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Calculate term frequency.\n\t\t\tlet tf = 0;\n\t\t\tfor (let j = 0; j < fieldTokens.length; j++) {\n\t\t\t\tif (fieldTokens[j] === term) {\n\t\t\t\t\ttf++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add term to index tree.\n\t\t\tlet branch = this._root;\n\t\t\tfor (let i = 0; i < term.length; i++) {\n\t\t\t\tlet c = term[i];\n\t\t\t\tif (!branch.hasOwnProperty(c)) {\n\t\t\t\t\tlet child = {};\n\t\t\t\t\tObject.defineProperties(child, {\n\t\t\t\t\t\tparent: {enumerable: false, configurable: true, writable: true, value: branch}\n\t\t\t\t\t});\n\t\t\t\t\tbranch[c] = child;\n\t\t\t\t}\n\t\t\t\tbranch = branch[c];\n\t\t\t}\n\t\t\t// Add term info to index leaf.\n\t\t\tif (!branch.hasOwnProperty('docs')) {\n\t\t\t\tbranch.docs = {};\n\t\t\t\tbranch.df = 0;\n\t\t\t}\n\t\t\tbranch.docs[docId] = tf;\n\t\t\tbranch.df += 1;\n\n\t\t\t// Store index leaf for deletion.\n\t\t\ttermRefs.push(branch);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all relevant terms of a document from the inverted index.\n\t * @param {number} docId - the document.\n\t */\n\tremove(docId) {\n\t\tif (!this._docStore.hasOwnProperty(String(docId))) {\n\t\t\treturn;\n\t\t}\n\t\tlet docStore = this._docStore[docId];\n\t\t// Remove document.\n\t\tdelete this._docStore[docId];\n\t\tthis._docCount -= 1;\n\n\t\t// Reduce total field length.\n\t\tthis._totalFieldLength -= docStore.fieldLength;\n\n\t\t// Iterate over all term references.\n\t\t// Remove docId from docs and decrement document frequency.\n\t\tlet termRefs = docStore.termRefs;\n\t\tfor (let j = 0; j < termRefs.length; j++) {\n\t\t\tlet index = termRefs[j];\n\t\t\tindex.df -= 1;\n\t\t\tdelete index.docs[docId];\n\n\t\t\t// Delete term branch if not used anymore.\n\t\t\tif (index.df === 0) {\n\t\t\t\tlet keys = [];\n\t\t\t\tdo {\n\t\t\t\t\t// Go tree upwards.\n\t\t\t\t\tlet parent = index.parent;\n\t\t\t\t\t// Delete parent reference for preventing memory leak (cycle reference)\n\t\t\t\t\tdelete index.parent;\n\n\t\t\t\t\t// Iterate over all children.\n\t\t\t\t\tkeys = Object.keys(parent);\n\t\t\t\t\tfor (let k = 0; k < keys.length; k++) {\n\t\t\t\t\t\tlet key = keys[k];\n\t\t\t\t\t\tif (key === 'df' || key === 'docs') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Remove previous child form parent.\n\t\t\t\t\t\tif (parent[key] === index) {\n\t\t\t\t\t\t\tdelete parent[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tindex = parent;\n\t\t\t\t} while (index.hasOwnProperty('parent') && keys.length === 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the term index of a term.\n\t * @param {string} term - the term.\n\t * @param {object} root - the term index to start from\n\t * @param {number} start - the position of the term string to start from\n\t * @return {object} - The term index or null if the term is not in the term tree.\n\t */\n\tstatic getTermIndex(term, root, start = 0) {\n\t\tif (start >= term.length) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = start; i < term.length; i++) {\n\t\t\tif (!root.hasOwnProperty(term[i])) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\troot = root[term[i]];\n\t\t}\n\t\treturn root;\n\t}\n\n\t/**\n\t * Extends a term index for the one branch.\n\t * @param {object} root - the term index to start from\n\t * @return {Array} - array with term indices and extension\n\t */\n\tstatic getNextTermIndex(root) {\n\t\tlet termIndices = [];\n\t\tlet keys = Object.keys(root);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\ttermIndices.push({index: root[keys[i]], term: keys[i]});\n\t\t\t}\n\t\t}\n\t\treturn termIndices;\n\t}\n\n\t/**\n\t * Extends a term index to all available term leafs.\n\t * @param {object} root - the term index to start from\n\t * @returns {Array} - Array with term indices and extension\n\t */\n\tstatic extendTermIndex(root) {\n\t\tlet termIndices = [];\n\t\tlet stack = [root];\n\t\tlet treeStack = [''];\n\t\tdo {\n\t\t\tlet root = stack.pop();\n\t\t\tlet treeTermn = treeStack.pop();\n\n\t\t\tif (root.hasOwnProperty('df')) {\n\t\t\t\ttermIndices.push({index: root, term: treeTermn});\n\t\t\t}\n\n\t\t\tlet keys = Object.keys(root);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\t\tstack.push(root[keys[i]]);\n\t\t\t\t\ttreeStack.push(treeTermn + keys[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (stack.length !== 0);\n\n\t\treturn termIndices;\n\t}\n\n\t/**\n\t * Serialize the inverted index.\n\t * @returns {{docStore: *, _fields: *, index: *}}\n\t */\n\ttoJSON() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Deserialize the inverted index.\n\t * @param {{docStore: *, _fields: *, index: *}} serialized - The serialized inverted index.\n\t */\n\tloadJSON(serialized) {\n\t\tlet dbObject = serialized;\n\n\t\tthis._fieldName = dbObject._fieldName;\n\t\tthis._docCount = dbObject._docCount;\n\t\tthis._docStore = dbObject._docStore;\n\t\tthis._totalFieldLength = dbObject._totalFieldLength;\n\t\tthis._tokenizer = dbObject._tokenizer;\n\t\tthis._root = dbObject._root;\n\n\t\tlet self = this;\n\n\t\tfunction regenerate(index, parent) {\n\t\t\t// Set parent.\n\t\t\tif (parent !== null) {\n\t\t\t\tObject.defineProperties(index, {\n\t\t\t\t\tparent: {enumerable: false, configurable: true, writable: false, value: parent}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Iterate over all keys.\n\t\t\tlet keys = Object.keys(index);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t// Found term, save in document store.\n\t\t\t\tif (keys[i] === 'docs') {\n\t\t\t\t\t// Get documents of term.\n\t\t\t\t\tlet docIds = Object.keys(index.docs);\n\t\t\t\t\tfor (let j = 0; j < docIds.length; j++) {\n\t\t\t\t\t\t// Get document store at specific document/field.\n\t\t\t\t\t\tlet ref = self._docStore[docIds[j]];\n\t\t\t\t\t\tif (!ref.hasOwnProperty('termRefs')) {\n\t\t\t\t\t\t\tObject.defineProperties(ref, {\n\t\t\t\t\t\t\t\ttermRefs: {enumerable: false, configurable: true, writable: true, value: []}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Set reference to term index.\n\t\t\t\t\t\tref.termRefs.push(index);\n\t\t\t\t\t}\n\t\t\t\t} else if (keys[i] !== 'df') {\n\t\t\t\t\t// Iterate over subtree.\n\t\t\t\t\tregenerate(index[keys[i]], index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tregenerate(this._root, null);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/inverted_index.js","import * as Utils from './utils.js';\n\n/**\n * Splits a string at non-alphanumeric characters into lower case tokens.\n * @param {string} str - the string\n * @returns {string[]} - the tokens\n * @private\n */\nfunction defaultSplitter(str) {\n\tlet trimmedTokens = [];\n\tlet tokens = str.split(/[^\\w]/);\n\tfor (let i = 0; i < tokens.length; i++) {\n\t\tif (tokens[i] !== '') {\n\t\t\ttrimmedTokens.push(tokens[i].toLowerCase());\n\t\t}\n\t}\n\treturn trimmedTokens;\n}\n\n/**\n * The tokenizer is used to prepare the string content of a document field for the inverted index.\n * Firstly the string gets split into tokens.\n * After that the tokens will be trimmed/stemmed with defined functions from the queue.\n *\n * * To change the splitter function, use {@link Tokenizer#setSplitter}.\n * * To add functions to the queue, use {@link Tokenizer#add}, {@link Tokenizer#addBefore} and\n *   {@link Tokenizer#addAfter}.\n * * To remove a function from the queue, use {@link Tokenizer#remove}.\n * * To reset the tokenizer, use {@link Tokenizer#reset}.\n */\nexport class Tokenizer {\n\t/**\n\t * Initializes the tokenizer with a splitter, which splits a string at non-alphanumeric characters.\n\t * The queue is empty.\n\t */\n\tconstructor() {\n\t\tthis._splitter = null;\n\t\tthis._queue = [];\n\t\tthis._symbol = Symbol('label');\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Sets a function with defined label as the splitter function.\n\t * The function must take a string as argument and return an array of tokens.\n\t *\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\tsetSplitter(label, func) {\n\t\tlabel = Utils.asString(label);\n\t\tif (!Utils.isFunction(func)) {\n\t\t\tthrow TypeError(\"Splitter must be a function.\");\n\t\t}\n\t\tif (label === \"\") {\n\t\t\tthrow Error(\"Label cannot be empty.\");\n\t\t}\n\t\tfunc[this._symbol] = label;\n\t\tthis._splitter = func;\n\t}\n\n\t/**\n\t * Gets the splitter.\n\t * @return {Array.<label, function>} - tuple with label and function\n\t */\n\tgetSplitter() {\n\t\treturn [this._splitter[this._symbol], this._splitter];\n\t}\n\n\t/**\n\t * Resets the splitter to default.\n\t */\n\tresetSplitter() {\n\t\tthis._splitter = defaultSplitter;\n\t}\n\n\t/**\n\t * Gets a functionthrow new  from the queue.\n\t * Only the first found function gets returned if a label or a function is multiple used.\n\t *\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @return {Array.<label, function>} - tuple with label and function\n\t */\n\tget(labelFunc) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow Error('Cannot find existing function.');\n\t\t}\n\t\treturn [this._queue[pos][this._symbol], this._queue[pos]];\n\t}\n\n\t/**\n\t * Adds a function with defined label to the end of the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\tadd(label, func) {\n\t\tthis._addFunction(label, func, this._queue.length);\n\t}\n\n\t/**\n\t * Adds a function with defined label before an existing function to the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\taddBefore(labelFunc, label, func) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow Error('Cannot find existing function.');\n\t\t}\n\t\tthis._addFunction(label, func, pos);\n\t}\n\n\t/**\n\t * Adds a function with defined label after an existing function to the queue.\n\t * The function must take an array of tokens as argument and return an array of tokens.\n\t *\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t */\n\taddAfter(labelFunc, label, func) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow Error('Cannot find existing function.');\n\t\t}\n\t\tthis._addFunction(label, func, pos + 1);\n\t}\n\n\t/**\n\t * Removes a function from the queue.\n\t * @param {string|function} labelFunc - an existing label or function\n\t */\n\tremove(labelFunc) {\n\t\tlet pos = this._getPosition(labelFunc);\n\t\tif (pos === -1) {\n\t\t\tthrow Error('Cannot find existing function.');\n\t\t}\n\t\tthis._queue.splice(pos, 1);\n\t}\n\n\t/**\n\t * Resets the splitter and tokenize queue to default.\n\t */\n\treset() {\n\t\tthis._splitter = defaultSplitter;\n\t\tthis._queue = [];\n\t}\n\n\t/**\n\t * Tokenizes a string into tokens.\n\t * @param {string} str - the string\n\t * @return {string[]} the tokens\n\t * @protected\n\t */\n\ttokenize(str) {\n\t\tlet tokens = this._splitter(str);\n\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\ttokens = this._queue[i](tokens);\n\t\t}\n\t\treturn tokens;\n\t}\n\n\t/**\n\t * Serializes the tokenizer by returning the labels of the used functions.\n\t * @returns {{splitter: string?, tokenizers: string[]}} - the serialization\n\t * @protected\n\t */\n\ttoJSON() {\n\t\tlet serialized = {tokenizers: []};\n\t\tif (this._splitter !== defaultSplitter) {\n\t\t\tserialized.splitter = this._splitter[this._symbol];\n\t\t}\n\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\tserialized.tokenizers.push(this._queue[i][this._symbol]);\n\t\t}\n\t\treturn serialized;\n\t}\n\n\t/**\n\t * Deserializes the tokenizer by reassign the correct function to each label.\n\t * @param {{splitter: string, tokenizers: string[]}} serialized - the serialized labels\n\t * @param {Object.<string, function>} functions - the depending functions with labels\n\t */\n\tloadJSON(serialized, functions) {\n\t\tthis.reset();\n\t\tif (serialized.hasOwnProperty(\"splitter\")) {\n\t\t\tif (!functions.splitters.hasOwnProperty(serialized.splitter)) {\n\t\t\t\tthrow Error(\"Splitter function not found.\");\n\t\t\t}\n\t\t\tthis.setSplitter(serialized.splitter, functions.splitters[serialized.splitter]);\n\t\t}\n\t\tfor (let i = 0; i < serialized.tokenizers.length; i++) {\n\t\t\tif (!functions.tokenizers.hasOwnProperty(serialized.tokenizers[i])) {\n\t\t\t\tthrow Error(\"Tokenizer function not found.\");\n\t\t\t}\n\t\t\tthis.add(serialized.tokenizers[i], functions.tokenizers[serialized.tokenizers[i]]);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the position of a function inside the queue.\n\t * @param {string|function} labelFunc - an existing label or function\n\t * @return {number} the position\n\t * @private\n\t */\n\t_getPosition(labelFunc) {\n\t\tif (Utils.isFunction(labelFunc)) {\n\t\t\treturn this._queue.indexOf(labelFunc);\n\t\t} else if (Utils.isConvertibleToString(labelFunc)) {\n\t\t\tlabelFunc = String(labelFunc);\n\t\t\tfor (let i = 0; i < this._queue.length; i++) {\n\t\t\t\tif (this._queue[i][this._symbol] === labelFunc) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow TypeError(\"Type of labelFunc must be string or function.\");\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Adds a function with defined label at a specific position to the queue.\n\t * @param {string} label - the label\n\t * @param {function} func - the function\n\t * @param {number} pos - the position\n\t * @private\n\t */\n\t_addFunction(label, func, pos) {\n\t\tlabel = Utils.asString(label);\n\t\tif (!Utils.isFunction(func)) {\n\t\t\tthrow TypeError(\"Type of func must be function.\");\n\t\t}\n\t\tif (label === \"\") {\n\t\t\tthrow Error(\"Label cannot be empty.\");\n\t\t}\n\t\tfunc[this._symbol] = label;\n\t\tthis._queue.splice(pos, 0, func);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/tokenizer.js","/**\n * Checks if the variable is a function.\n * @param {*} x - the variable\n * @return {boolean} true if function, otherwise false\n * @protected\n */\nexport function isFunction(x) {\n\treturn Object.prototype.toString.call(x) === \"[object Function]\";\n}\n\n/**\n * Checks if the variable is an object.\n * @param {*} x - the variable\n * @return {boolean} true if object, otherwise false\n * @protected\n */\nexport function isObject(x) {\n\treturn Object.prototype.toString.call(x) === \"[object Object]\";\n}\n\n/**\n * Checks if the variable is a number.\n * @param {*} x - the variable\n * @return {boolean} true if number, otherwise false\n * @protected\n */\nexport function isNumber(x) {\n\treturn Object.prototype.toString.call(x) === \"[object Number]\";\n}\n\n/**\n * Checks if the variable is a boolean.\n * @param {*} x - the variable\n * @return {boolean} true if boolean, otherwise false\n * @protected\n */\nexport function isBoolean(x) {\n\treturn Object.prototype.toString.call(x) === \"[object Boolean]\";\n}\n\n/**\n * Checks if the variable is a string.\n * @param {*} x - the variable\n * @return {boolean} true if string, otherwise false\n * @protected\n */\nexport function isString(x) {\n\treturn Object.prototype.toString.call(x) === \"[object String]\";\n}\n\n/**\n * Checks if the variable is convertible to a string.\n * @param {*} x - the variable\n * @return {boolean} true if convertible, otherwise false\n */\nexport function isConvertibleToString(x) {\n\treturn isString(x) || isNumber(x) || isObject(x) && Object.prototype.toString !== x.toString && isString(x.toString());\n}\n\n/**\n * Converts a variable to a boolean (from boolean or number).\n * Throws an error if not possible.\n * @param {*} x - the variable\n * @param {error} [error=TypeError] - the error to throw\n * @return {boolean} the converted boolean\n * @protected\n */\nexport function asBoolean(x, error = TypeError(\"Value is not convertible to boolean\")) {\n\tif (isBoolean(x) || isNumber(x)) {\n\t\treturn Boolean(x);\n\t}\n\tthrow error;\n}\n\n/**\n * Converts a variable to a string (from string, number or obj.toString).\n * Throws an error if not possible.\n * @param {*} x - the variable\n * @param {error} [error=TypeError] - the error to throw\n * @return {string} the converted string\n * @protected\n */\nexport function asString(x, error = TypeError(\"Value is not convertible to string.\")) {\n\tif (isConvertibleToString(x)) {\n\t\treturn String(x);\n\t}\n\tthrow error;\n}\n\n/**\n * Converts a variable to a array of string (from an array of string, number or obj.toString).\n * Throws an error if not possible.\n * @param {*} x - the variable\n * @param {error} [error=TypeError] - the error to throw\n * @return {string[]} the converted array of string\n * @protected\n */\nexport function asArrayOfString(x, error = TypeError(\"Value is not convertible to an array of strings.\")) {\n\tif (!Array.isArray(x)) {\n\t\tthrow error;\n\t}\n\tlet array = [];\n\tfor (let i = 0; i < x.length; i++) {\n\t\tif (!isConvertibleToString(x[i])) {\n\t\t\tthrow error;\n\t\t}\n\t\tarray.push(String(x[i]));\n\t}\n\treturn array;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/utils.js","import {Scorer} from './scorer';\nimport {InvertedIndex} from './inverted_index';\nimport {QueryBuilder} from './queries';\n\nexport class IndexSearcher {\n\t/**\n\t *\n\t * @param {object} invIdxs\n\t */\n\tconstructor(invIdxs, docs) {\n\t\tthis._invIdxs = invIdxs;\n\t\tthis._docs = docs;\n\t\tthis._scorer = new Scorer(this._invIdxs);\n\t}\n\n\tsearch(query) {\n\t\tlet docResults = this._recursive(query.query, true);\n\n\t\t// Final scoring.\n\t\tlet finalScoring = query.hasOwnProperty(\"final_scoring\") ? query.final_scoring : true;\n\t\tif (finalScoring) {\n\t\t\treturn this._scorer.finalScore(query, docResults);\n\t\t}\n\t\treturn docResults;\n\t}\n\n\tsetDirty() {\n\t\tthis._scorer.setDirty();\n\t}\n\n\t_recursive(query, doScoring) {\n\t\tlet docResults = {};\n\t\tlet boost = query.hasOwnProperty('boost') ? query.boost : 1;\n\t\tlet fieldName = query.hasOwnProperty(\"field\") ? query.field : null;\n\n\t\tlet root = null;\n\t\tlet tokenizer = null;\n\t\tif (this._invIdxs.hasOwnProperty(fieldName)) {\n\t\t\troot = this._invIdxs[fieldName].root;\n\t\t\ttokenizer = this._invIdxs[fieldName].tokenizer;\n\t\t}\n\n\t\tswitch (query.type) {\n\t\t\tcase \"bool\": {\n\t\t\t\tdocResults = null;\n\t\t\t\tif (query.hasOwnProperty(\"must\")) {\n\t\t\t\t\tdocResults = this._getUnique(query.must.values, doScoring, docResults);\n\t\t\t\t}\n\t\t\t\tif (query.hasOwnProperty(\"filter\")) {\n\t\t\t\t\tdocResults = this._getUnique(query.filter.values, false, docResults);\n\t\t\t\t}\n\n\t\t\t\tif (query.hasOwnProperty(\"should\")) {\n\t\t\t\t\tlet shouldDocs = this._getAll(query.should.values, doScoring);\n\n\t\t\t\t\tlet empty = false;\n\t\t\t\t\tif (docResults === null) {\n\t\t\t\t\t\tdocResults = {};\n\t\t\t\t\t\tempty = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet msm = query.hasOwnProperty(\"minimum_should_match\") ? query.minimum_should_match : 1;\n\t\t\t\t\t// Remove all docs with fewer matches.\n\t\t\t\t\t// TODO: Enable percent, negative values and ranges.\n\t\t\t\t\tlet docs = Object.keys(shouldDocs);\n\t\t\t\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\t\t\t\tif (shouldDocs[docId].length >= msm) {\n\t\t\t\t\t\t\tif (docResults.hasOwnProperty(docId)) {\n\t\t\t\t\t\t\t\tdocResults[docId].push(...shouldDocs[docId]);\n\t\t\t\t\t\t\t} else if (empty) {\n\t\t\t\t\t\t\t\tdocResults[docId] = shouldDocs[docId];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (query.hasOwnProperty(\"not\")) {\n\t\t\t\t\tlet notDocs = this._getAll(query.not.values, false);\n\t\t\t\t\t// Remove all docs.\n\t\t\t\t\tlet docs = Object.keys(notDocs);\n\t\t\t\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\t\t\t\tif (docResults.hasOwnProperty(docId)) {\n\t\t\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"term\": {\n\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.value, root);\n\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx, doScoring, docResults, query.value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"terms\": {\n\t\t\t\tfor (let i = 0; i < query.value.length; i++) {\n\t\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.value[i], root);\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx, doScoring, docResults, query.value[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"fuzzy\": {\n\t\t\t\tlet f = new FuzzySearch(query);\n\t\t\t\tlet b = f.search(root);\n\t\t\t\tfor (let i = 0; i < b.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost * b[i].boost, b[i].index, doScoring, docResults, b[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"wildcard\": {\n\t\t\t\tlet w = new WildcardSearch(query);\n\t\t\t\tlet a = w.search(root);\n\t\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, a[i].index, doScoring, docResults, a[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"match_all\": {\n\t\t\t\tfor (let docId of this._docs) {\n\t\t\t\t\tthis._scorer.scoreConstant(boost, docId, docResults);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"constant_score\": {\n\t\t\t\tdocResults = this._getAll(query.filter.values, false);\n\t\t\t\tlet docs = Object.keys(docResults);\n\t\t\t\t// Add to each document a constant score.\n\t\t\t\tfor (let i = 0; i < docs.length; i++) {\n\t\t\t\t\tthis._scorer.scoreConstant(boost, docs[i], docResults);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"prefix\": {\n\t\t\t\tlet termIdx = InvertedIndex.getTermIndex(query.value, root);\n\t\t\t\tif (termIdx != null) {\n\t\t\t\t\ttermIdx = InvertedIndex.extendTermIndex(termIdx);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < termIdx.length; i++) {\n\t\t\t\t\tthis._scorer.prepare(fieldName, boost, termIdx[i].index, doScoring, docResults, query.value + termIdx[i].term);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"exists\": {\n\t\t\t\tif (root != null) {\n\t\t\t\t\tlet docs = Object.keys(this._invIdxs[fieldName].documentStore);\n\t\t\t\t\tfor (let i = 0; i < docs.length; i++) {\n\t\t\t\t\t\tthis._scorer.scoreConstant(boost, docs[i], docResults);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"match\": {\n\t\t\t\tlet terms = tokenizer.tokenize(query.value);\n\t\t\t\tlet operator = query.hasOwnProperty(\"operator\") ? query.operator : \"or\";\n\n\t\t\t\tlet tmpQuery = new QueryBuilder().bool();\n\t\t\t\tif (operator === \"or\") {\n\t\t\t\t\tif (query.hasOwnProperty(\"minimum_should_match\")) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.minimumShouldMatch(query.minimum_should_match);\n\t\t\t\t\t}\n\t\t\t\t\t// Build a should query.\n\t\t\t\t\ttmpQuery = tmpQuery.startShould();\n\t\t\t\t} else {\n\t\t\t\t\t// Build a must query.\n\t\t\t\t\ttmpQuery = tmpQuery.startMust();\n\t\t\t\t}\n\t\t\t\ttmpQuery = tmpQuery.boost(boost);\n\n\t\t\t\tif (query.hasOwnProperty(\"fuzziness\")) {\n\t\t\t\t\tlet prefixLength = query.hasOwnProperty(\"prefix_length\") ? query.prefix_length : 2;\n\t\t\t\t\t// Add each fuzzy.\n\t\t\t\t\tfor (let i = 0; i < terms.length; i++) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.fuzzy(fieldName, terms[i]).fuzziness(query.fuzziness).prefixLength(prefixLength);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Add each term.\n\t\t\t\t\tfor (let i = 0; i < terms.length; i++) {\n\t\t\t\t\t\ttmpQuery = tmpQuery.term(fieldName, terms[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operator === \"or\") {\n\t\t\t\t\ttmpQuery = tmpQuery.endShould();\n\t\t\t\t} else {\n\t\t\t\t\ttmpQuery = tmpQuery.endMust();\n\t\t\t\t}\n\n\t\t\t\tdocResults = this._recursive(tmpQuery.build(), doScoring);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn docResults;\n\t}\n\n\t_getUnique(values, doScoring, docResults) {\n\t\tif (values.length === 0) {\n\t\t\treturn docResults;\n\t\t}\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tlet currDocs = this._recursive(values[i], doScoring);\n\t\t\tif (docResults === null) {\n\t\t\t\tdocResults = this._recursive(values[0], doScoring);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet docs = Object.keys(docResults);\n\t\t\tfor (let j = 0, docId; j < docs.length, docId = docs[j]; j++) {\n\t\t\t\tif (!currDocs.hasOwnProperty(docId)) {\n\t\t\t\t\tdelete docResults[docId];\n\t\t\t\t} else {\n\t\t\t\t\tdocResults[docId].push(...currDocs[docId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn docResults;\n\t}\n\n\t_getAll(values, doScoring) {\n\t\tlet docResults = {};\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tlet currDocs = this._recursive(values[i], doScoring);\n\t\t\tlet docs = Object.keys(currDocs);\n\t\t\tfor (let j = 0, docId; j < docs.length, docId = docs[j]; j++) {\n\t\t\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\t\t\tdocResults[docId] = currDocs[docId];\n\t\t\t\t} else {\n\t\t\t\t\tdocResults[docId].push(...currDocs[docId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn docResults;\n\t}\n}\n\n\nclass FuzzySearch {\n\tconstructor(query) {\n\t\tthis._fuzzy = query.value;\n\t\tthis._fuzziness = query.hasOwnProperty('fuzziness') ? query.fuzziness : 2;\n\t\tthis._prefixLength = query.hasOwnProperty('prefix_length') ? query.prefix_length : 2;\n\t}\n\n\t/**\n\t * Copyright Kigiri: https://github.com/kigiri\n\t *                     Milot Mirdita: https://github.com/milot-mirdita\n\t *                     Toni Neubert:  https://github.com/Viatorus/\n\t */\n\tlevenshtein_distance(a, b) {\n\t\tif (a.length === 0) return b.length;\n\t\tif (b.length === 0) return a.length;\n\t\tlet tmp, i, j, prev, val;\n\t\t// swap to save some memory O(min(a,b)) instead of O(a)\n\t\tif (a.length > b.length) {\n\t\t\ttmp = a;\n\t\t\ta = b;\n\t\t\tb = tmp;\n\t\t}\n\n\t\tvar row = Array(a.length + 1);\n\t\t// init the row\n\t\tfor (i = 0; i <= a.length; i++) {\n\t\t\trow[i] = i;\n\t\t}\n\n\t\t// fill in the rest\n\t\tfor (i = 1; i <= b.length; i++) {\n\t\t\tprev = i;\n\t\t\tfor (j = 1; j <= a.length; j++) {\n\t\t\t\tif (b[i - 1] === a[j - 1]) {\t// match\n\t\t\t\t\tval = row[j - 1];\n\t\t\t\t} else {\n\t\t\t\t\tval = Math.min(row[j - 1] + 1, // substitution\n\t\t\t\t\t\tMath.min(prev + 1,         // insertion\n\t\t\t\t\t\t\trow[j] + 1));          // deletion\n\n\t\t\t\t\t// transposition.\n\t\t\t\t\tif (i > 1 && j > 1 && b[i - 2] === a[j - 1] && a[j - 2] === b[i - 1]) {\n\t\t\t\t\t\tval = Math.min(val, row[j - 1] - (a[j - 1] === b[i - 1] ? 1 : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trow[j - 1] = prev;\n\t\t\t\tprev = val;\n\t\t\t}\n\t\t\trow[a.length] = prev;\n\t\t}\n\t\treturn row[a.length];\n\t}\n\n\t/**\n\t * Performs a fuzzy search for a given term.\n\t * @param {string} query - a fuzzy term to match.\n\t * @param {number} [maxDistance=2] - maximal edit distance between terms\n\t * @returns {Array} - array with all matching term indices.\n\t */\n\tsearch(root) {\n\t\t// Todo: Include levenshtein to reduce similar iterations.\n\t\t// Tree tokens at same depth share same row until depth (should works if recursive).\n\t\t// Pregenerate tree token ?\n\t\t//var treeToken = Array(token.length + maxDistance);\n\n\t\tlet start = root;\n\t\tlet pre = this._fuzzy.slice(0, this._prefixLength);\n\t\tlet fuzzy = this._fuzzy;\n\t\tif (this._prefixLength != 0) {\n\t\t\tstart = InvertedIndex.getTermIndex(pre, start);\n\t\t\tfuzzy = fuzzy.slice(this._prefixLength);\n\t\t}\n\t\tif (start === null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet similarTokens = [];\n\n\t\tlet stack = [start];\n\t\tlet treeStack = [''];\n\t\tdo {\n\t\t\tlet root = stack.pop();\n\t\t\tlet treeTerms = treeStack.pop();\n\n\t\t\t// Compare tokens if they are in near distance.\n\t\t\tif (root.hasOwnProperty('df') && Math.abs(fuzzy.length - treeTerms.length) <= this._fuzziness) {\n\t\t\t\tconst distance = this.levenshtein_distance(fuzzy, treeTerms);\n\t\t\t\tif (distance <= this._fuzziness) {\n\t\t\t\t\t// Calculate boost.\n\t\t\t\t\tlet boost = 1 - distance / (pre.length + treeTerms.length);\n\t\t\t\t\tsimilarTokens.push({term: pre + treeTerms, index: root, boost: boost});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Iterate over all subtrees.\n\t\t\t// If token from tree is not longer than maximal distance.\n\t\t\tif (treeTerms.length - fuzzy.length <= this._fuzziness) {\n\t\t\t\t// Iterate over all subtrees.\n\t\t\t\tlet keys = Object.keys(root);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tif (keys[i] !== 'docs' && keys[i] !== 'df') {\n\t\t\t\t\t\tstack.push(root[keys[i]]);\n\t\t\t\t\t\ttreeStack.push(treeTerms + keys[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} while (stack.length !== 0);\n\n\t\treturn similarTokens;\n\t}\n}\n\nclass WildcardSearch {\n\n\tconstructor(query) {\n\t\tthis._wildcard = query.value;\n\t\tthis._result = [];\n\t}\n\n\t/**\n\t * Performs a wild card search for a given query term.\n\t * @param {string} query - a wild card query to match.\n\t * @returns {Array} - array with all matching term indices.\n\t */\n\tsearch(root) {\n\t\t// Todo: Need an implementation for star operator in the middle.\n\t\tthis._result = [];\n\t\tthis._recursive(root);\n\t\treturn this._result;\n\t}\n\n\t/**\n\t *\n\t * @param root\n\t * @param idx\n\t * @param term\n\t * @param escaped\n\t * @private\n\t */\n\t_recursive(root, idx = 0, term = '', escaped = false) {\n\t\tif (root === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (idx === this._wildcard.length) {\n\t\t\tif (root.hasOwnProperty('df')) {\n\t\t\t\tthis._result.push({index: root, term: term});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!escaped && this._wildcard[idx] === '\\\\') {\n\t\t\tthis._recursive(root, idx + 1, term, true);\n\t\t} else if (!escaped && this._wildcard[idx] === '?') {\n\t\t\tlet others = InvertedIndex.getNextTermIndex(root);\n\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\tthis._recursive(others[i].index, idx + 1, term + others[i].term);\n\t\t\t}\n\t\t} else if (!escaped && this._wildcard[idx] === '*') {\n\t\t\tlet all = InvertedIndex.extendTermIndex(root);\n\t\t\tfor (let i = 0; i < all.length; i++) {\n\t\t\t\tthis._recursive(all[i].index, idx + 1, term + all[i].term);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._recursive(InvertedIndex.getTermIndex(this._wildcard[idx], root), idx + 1, term + this._wildcard[idx]);\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/index_searcher.js","export class Scorer {\n\tconstructor(invIdxs) {\n\t\tthis._invIdxs = invIdxs;\n\t\tthis._cache = {};\n\t}\n\n\tsetDirty() {\n\t\tthis._cache = {};\n\t}\n\n\tprepare(fieldName, boost, termIdx, doScoring, docResults = {}, term = null) {\n\t\tif (termIdx == null || !termIdx.hasOwnProperty('docs')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet idf = this._idf(fieldName, termIdx.df);\n\t\tlet docIds = Object.keys(termIdx.docs);\n\t\tfor (let j = 0; j < docIds.length; j++) {\n\t\t\tlet docId = docIds[j];\n\t\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\t\tdocResults[docId] = [];\n\t\t\t}\n\n\t\t\tif (doScoring) {\n\t\t\t\tlet tf = termIdx.docs[docId];\n\t\t\t\tdocResults[docId].push({\n\t\t\t\t\ttype: 'BM25',\n\t\t\t\t\ttf: tf,\n\t\t\t\t\tidf: idf,\n\t\t\t\t\tboost: boost,\n\t\t\t\t\tfieldName: fieldName,\n\t\t\t\t\tterm: term\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// TODO: Maybe only 1 constant store per document\n\t\t\t\tdocResults[docId].push({\n\t\t\t\t\ttype: \"constant\", value: 1, boost: boost, fieldName: fieldName,\n\t\t\t\t\tterm: term\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn docResults;\n\t}\n\n\tscoreConstant(boost, docId, docResults = {}) {\n\t\tif (!docResults.hasOwnProperty(docId)) {\n\t\t\tdocResults[docId] = [];\n\t\t}\n\t\tdocResults[docId].push({type: \"constant\", value: 1, boost: boost});\n\t\treturn docResults;\n\t}\n\n\tfinalScore(query, docResults = {}) {\n\n\t\tlet result = {};\n\t\tlet k1 = query.scoring.k1;\n\t\tlet b = query.scoring.b;\n\n\t\tlet docs = Object.keys(docResults);\n\t\tfor (let i = 0, docId; i < docs.length, docId = docs[i]; i++) {\n\t\t\tlet docScore = 0;\n\t\t\tfor (let j = 0; j < docResults[docId].length; j++) {\n\t\t\t\tlet docResult = docResults[docId][j];\n\n\t\t\t\tlet res = 0;\n\t\t\t\tswitch (docResult.type) {\n\t\t\t\t\tcase 'BM25': {\n\t\t\t\t\t\tlet fieldLength = this._invIdxs[docResult.fieldName].documentStore[docId].fieldLength /\n\t\t\t\t\t\t\tMath.pow(this._invIdxs[docResult.fieldName].documentStore[docId].boost, 2);\n\t\t\t\t\t\tlet avgFieldLength = this._avgFieldLength(docResult.fieldName);\n\t\t\t\t\t\tlet tfNorm = ((k1 + 1) * docResult.tf) / (k1 * ((1 - b)\n\t\t\t\t\t\t\t+ b * (fieldLength / avgFieldLength)) + docResult.tf);\n\t\t\t\t\t\tres = docResult.idf * tfNorm * docResult.boost;\n\t\t\t\t\t\t/*console.log(\n\t\t\t\t\t\t\tdocId + \":\" + docResult.fieldName + \":\" + docResult.term + \" = \" + res,\n\t\t\t\t\t\t\t\"\\n\\ttype: BM25\",\n\t\t\t\t\t\t\t\"\\n\\tboost: \" + docResult.boost,\n\t\t\t\t\t\t\t\"\\n\\tidf : \" + docResult.idf,\n\t\t\t\t\t\t\t\"\\n\\ttfNorm : \" + tfNorm,\n\t\t\t\t\t\t\t\"\\n\\ttf : \" + docResult.tf,\n\t\t\t\t\t\t\t\"\\n\\tavg : \" + avgFieldLength,\n\t\t\t\t\t\t\t\"\\n\\tfl : \" + fieldLength);*/\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\t\tres = docResult.value * docResult.boost;\n\t\t\t\t\t\t/*console.log(\n\t\t\t\t\t\t\t\"Constant: \" + res,\n\t\t\t\t\t\t\t\"\\n\\tboost: \" + docResult.boost,\n\t\t\t\t\t\t\t\"\\n\\tvalue : \" + docResult.value);*/\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdocScore += res;\n\t\t\t}\n\t\t\t//console.log(docId, \" === \", docScore);\n\t\t\tresult[docId] = docScore;\n\t\t}\n\t\treturn result;\n\t}\n\n\t_getCache(fieldName) {\n\t\tif (!this._cache.hasOwnProperty(fieldName)) {\n\t\t\tlet avgFieldLength = this._invIdxs[fieldName].totalFieldLength / this._invIdxs[fieldName].documentCount;\n\t\t\tthis._cache[fieldName] = {idfs: {}, avgFieldLength: avgFieldLength};\n\t\t}\n\t\treturn this._cache[fieldName];\n\t}\n\n\t/**\n\t * Returns the idf by either calculate it or use a cached one.\n\t * @param {number} docFreq - the doc frequency of the term\n\t * @returns {number} the idf\n\t * @private\n\t */\n\t_idf(fieldName, docFreq) {\n\t\tlet cache = this._getCache(fieldName);\n\t\tif (cache.idfs.hasOwnProperty(String(docFreq))) {\n\t\t\treturn cache.idfs[docFreq];\n\t\t}\n\t\treturn cache.idfs[docFreq] = Math.log(1 + (this._invIdxs[fieldName].documentCount - docFreq + 0.5) / (docFreq + 0.5));\n\t}\n\n\t_avgFieldLength(fieldName) {\n\t\treturn this._getCache(fieldName).avgFieldLength;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/scorer.js","/**\n * Query builder\n * todo: Document scoring.\n * todo: Align description.\n */\nimport * as Utils from './utils.js';\n\n/**\n * The base query class to enable boost to a query type.\n *\n * @param {string} type - the type name of the query\n */\nexport class BaseQuery {\n\tconstructor(type, data = {}) {\n\t\tthis._data = data;\n\t\tthis._data.type = Utils.asString(type);\n\t}\n\n\t/**\n\t * Boosts the query result.\n\t *\n\t * See also [Lucene#BoostQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/BoostQuery.html}\n\t * and [Elasticsearch#boost]{@link https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-boost.html}.\n\t *\n\t * @param {number} value - the positive boost\n\t * @return {BaseQuery} object itself for cascading\n\t */\n\tboost(value) {\n\t\tif (!Utils.isNumber(value) || value < 0) {\n\t\t\tthrow TypeError(\"Boost must be a positive number.\");\n\t\t}\n\t\tthis._data.boost = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Build the final query.\n\t * @return {Object} - the final query\n\t */\n\tbuild() {\n\t\treturn this._data;\n\t}\n}\n\n/**\n * A query which finds documents where a document field contains a term.\n *\n * See also [Lucene#TermQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/TermQuery.html}\n * and [Elasticsearch#TermQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .term(\"name\", \"infinity\"])\n * .build();\n * // The resulting documents:\n * // contains the term infinity\n *\n * @param {string} field - the field name of the document\n * @param {string} term - the term\n * @extends BaseQuery\n */\nexport class TermQuery extends BaseQuery {\n\tconstructor(field, term, data = {}) {\n\t\tsuper(\"term\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asString(term);\n\t}\n}\n\n/**\n * A query which finds documents where a document field contains any of the terms.\n *\n * See also [Lucene#TermRangeQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/TermRangeQuery.html}\n * and [Elasticsearch#TermsQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .terms(\"quotes\", [\"infinity\", \"atom\", \"energy\"])\n * .build();\n * // The resulting documents:\n * // contains the terms infinity, atom or energy\n *\n * @param {string} field - the field name of the document\n * @param {string[]} terms - the terms\n * @extends BaseQuery\n */\nexport class TermsQuery extends BaseQuery {\n\tconstructor(field, terms, data = {}) {\n\t\tsuper(\"terms\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asArrayOfString(terms);\n\t}\n}\n\n/**\n * A query which finds documents where the wildcard term can be applied at an existing document field term.\n *\n * Wildcard | Description\n * -------- | ------------\n * ? (question mark) | Skips a single character.\n *\n * To escape a wildcard character, use _\\_ (backslash), e.g. \\?.\n *\n * See also [Lucene#WildcardQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/WildcardQuery.html}\n * and [Elasticsearch#WildcardQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html}.\n *\n * _TODO: Implement wildcard * (asterisk) to skip zero or more characters._\n * @todo Implement wildcard * (asterisk) to skip zero or more characters.\n *\n * @example\n * new QueryBuilder()\n *   .wildcard(\"question\", \"e?nste?n\\?\")\n * .build();\n * // The resulting documents:\n * // contains the wildcard surname e?nste?n\\? (like Einstein? or Eynsteyn? but not Einsteine or Ensten?)\n *\n * @param {string} field - the field name of the document\n * @param {string} wildcard - the wildcard term\n * @extends BaseQuery\n */\nexport class WildcardQuery extends BaseQuery {\n\tconstructor(field, wildcard, data = {}) {\n\t\tsuper(\"wildcard\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asString(wildcard);\n\t}\n}\n\n/**\n * A query which finds documents where the fuzzy term can be transformed into an existing document field term within a\n * given edit distance\n * ([Damerau–Levenshtein distance]{@link https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance}).\n *\n * The edit distance is the minimum number of an insertion, deletion or substitution of a single character\n * or a transposition of two adjacent characters.\n *\n * * To set the maximal allowed edit distance, use {@link FuzzyQuery#fuzziness} (default is 2).\n * * To set the initial word length, which should ignored for fuzziness, use {@link FuzzyQuery#prefixLength}.\n *\n * See also [Lucene#FuzzyQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/FuzzyQuery.html}\n * and [Elasticsearch#FuzzyQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .fuzzy(\"surname\", \"einsten\")\n *     .fuzziness(3)\n *     .prefixLength(3)\n * .build();\n * // The resulting documents:\n * // contains the fuzzy surname einstn (like Einstein or Einst but not Eisstein or Insten)\n *\n * @param {string} field - the field name of the document\n * @param {string} fuzzy - the fuzzy term\n * @extends BaseQuery\n */\nexport class FuzzyQuery extends BaseQuery {\n\tconstructor(field, fuzzy, data = {}) {\n\t\tsuper(\"fuzzy\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asString(fuzzy);\n\t}\n\n\t/**\n\t * Sets the maximal allowed fuzziness.\n\t * @param {number} fuzziness - the fuzziness\n\t * @return {FuzzyQuery} - object itself for cascading\n\t */\n\tfuzziness(fuzziness) {\n\t\tif (!Utils.isNumber(fuzziness) || fuzziness < 0) {\n\t\t\tthrow TypeError(\"Fuzziness must be a positive number.\");\n\t\t}\n\t\tthis._data.fuzziness = fuzziness;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the initial word length.\n\t * @param {number} prefixLength - the positive prefix length\n\t * @return {FuzzyQuery}  object itself for cascading\n\t */\n\tprefixLength(prefixLength) {\n\t\tif (!Utils.isNumber(prefixLength) || prefixLength < 0) {\n\t\t\tthrow TypeError(\"Prefix length must be a positive number.\");\n\t\t}\n\t\tthis._data.prefix_length = prefixLength;\n\t\treturn this;\n\t}\n}\n\n/**\n * A query which matches documents containing the prefix of a term inside a field.\n *\n * See also [Lucene#PrefixQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/PrefixQuery.html}\n * and [Elasticsearch#MatchQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html}\n *\n * @example\n * new QueryBuilder()\n *   .prefix(\"surname\", \"alb\")\n * .build()\n * // The resulting documents:\n * // contains the term prefix alb as surname\n *\n * @param {string} field - the field name of the document\n * @param {string} prefix - the prefix of a term\n * @extends BaseQuery\n */\nexport class PrefixQuery extends BaseQuery {\n\tconstructor(field, prefix, data = {}) {\n\t\tsuper(\"prefix\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asString(prefix);\n\t}\n}\n\n/**\n * A query which matches all documents with a given field.\n *\n * See also [Elasticsearch#ExistsQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .exists(\"name\")\n * .build()\n * // The resulting documents:\n * // has the field \"name\"\n *\n * @param {string} field - the field name of the document\n * @extends BaseQuery\n */\nexport class ExistsQuery extends BaseQuery {\n\tconstructor(field, data = {}) {\n\t\tsuper(\"exists\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t}\n}\n\n/**\n * A query which tokenizes the given query text, performs a query foreach token and combines the results using a boolean\n * operator.\n *\n * Operator      | Description\n * ------------- | -------------\n * or (default) | Finds documents which matches some tokens. The minimum amount of matches can be controlled with [minimumShouldMatch]{@link MatchQuery#minimumShouldMatch} (default is 1).\n * and | Finds documents which matches all tokens.\n *\n * To enable a [fuzzy query]{@link FuzzyQuery} for the tokens, use {@link MatchQuery#fuzziness} and {@link MatchQuery#prefixLength}.\n *\n * See also [Lucene#?]{@link ?}\n * and [Elasticsearch#MatchQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .match(\"name\", \"albrt einsten\")\n *     .boost(2.5)\n *     .operator(\"and\")\n *     .fuzziness(2)\n *     .prefixLength(3)\n * .build();\n * // The resulting documents:\n * // contains the fuzzy name albrt einsten (like Albert Einstein) with a boost of 2.5\n *\n * @param {string} field - the field name of the document\n * @param {string} query - the query text\n * @extends BaseQuery\n */\nexport class MatchQuery extends BaseQuery {\n\tconstructor(field, query, data = {}) {\n\t\tsuper(\"match\", data);\n\t\tthis._data.field = Utils.asString(field);\n\t\tthis._data.value = Utils.asString(query);\n\t}\n\n\t/**\n\t * Controls the amount of minimum matching token queries before a document will be considered.\n\t * @param {number} minShouldMatch - number of minimum matching sub queries\n\t * @return {MatchQuery} object itself for cascading\n\t */\n\tminimumShouldMatch(minShouldMatch) {\n\t\tif (!Utils.isNumber(minShouldMatch) || minShouldMatch < 0) {\n\t\t\tthrow TypeError(\"Value for minimum should match must be a positive number.\");\n\t\t}\n\t\tif (this._data.hasOwnProperty(\"operator\") && this._data.operator == \"and\") {\n\t\t\tthrow SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n\t\t}\n\t\tthis._data.minimum_should_match = minShouldMatch;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the boolean operator.\n\t * @param {string} op - the operator (_or_/_and_)\n\t * @return {MatchQuery} object itself for cascading\n\t */\n\toperator(op) {\n\t\top = Utils.asString(op);\n\t\tif (op != 'and' && op != 'or') {\n\t\t\tthrow SyntaxError(\"Unknown operator.\");\n\t\t}\n\t\tthis._data.operator = op;\n\t\tif (this._data.hasOwnProperty(\"minimum_should_match\") && this._data.operator == \"and\") {\n\t\t\tthrow SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximal allowed fuzziness.\n\t * @param {number} fuzziness - the fuzziness\n\t * @return {MatchQuery} object itself for cascading\n\t */\n\tfuzziness(fuzziness) {\n\t\tif (!Utils.isNumber(fuzziness) || fuzziness < 0) {\n\t\t\tthrow TypeError(\"Fuzziness must be a positive number.\");\n\t\t}\n\t\tthis._data.fuzziness = fuzziness;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the starting word length which should not be considered for fuzziness.\n\t * @param {number} prefixLength - the positive prefix length\n\t * @return {MatchQuery} - object itself for cascading\n\t */\n\tprefixLength(prefixLength) {\n\t\tif (!Utils.isNumber(prefixLength) || prefixLength < 0) {\n\t\t\tthrow TypeError(\"Prefix length must be a positive number.\");\n\t\t}\n\t\tthis._data.prefix_length = prefixLength;\n\t\treturn this;\n\t}\n}\n\n/**\n * A query that matches all documents and giving them a constant score equal to the query boost.\n *\n * Typically used inside a must clause of a {@link BoolQuery} to subsequently reject non matching documents with the not\n * clause.\n *\n * See also [Lucene#MatchAllDocsQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/MatchAllDocsQuery.html}\n * and [Elasticsearch#MatchAllQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-all-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .matchAll()\n *     .boost(2.5)\n * .build()\n * // The resulting documents:\n * // all documents and giving a score of 2.5\n *\n * @extends BaseQuery\n */\nexport class MatchAllQuery extends BaseQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"match_all\", data);\n\t}\n}\n\n/**\n * A query which holds all sub queries like an array.\n * @private\n */\nclass ArrayQuery extends BaseQuery {\n\tconstructor(callbackName, callback, data = {}) {\n\t\tsuper(\"array\", data);\n\t\tthis._data.values = [];\n\t\tthis._callbackName = callbackName;\n\t\tthis[callbackName] = callback;\n\n\t\tthis._prepare = (queryType, ...args) => {\n\t\t\tlet data = {};\n\t\t\tlet query = new queryType(...args, data);\n\t\t\tthis._data.values.push(data);\n\t\t\tquery.bool = this.bool;\n\t\t\tquery.constantScore = this.constantScore;\n\t\t\tquery.term = this.term;\n\t\t\tquery.terms = this.terms;\n\t\t\tquery.wildcard = this.wildcard;\n\t\t\tquery.fuzzy = this.fuzzy;\n\t\t\tquery.match = this.match;\n\t\t\tquery.matchAll = this.matchAll;\n\t\t\tquery.prefix = this.prefix;\n\t\t\tquery.exists = this.exists;\n\t\t\tquery._prepare = this._prepare;\n\t\t\tquery[this._callbackName] = this[this._callbackName];\n\t\t\treturn query;\n\t\t};\n\t}\n\n\tbool() {\n\t\treturn this._prepare(BoolQuery);\n\t}\n\n\tconstantScore() {\n\t\treturn this._prepare(ConstantScoreQuery);\n\t}\n\n\tterm(field, term) {\n\t\treturn this._prepare(TermQuery, field, term);\n\t}\n\n\tterms(field, terms) {\n\t\treturn this._prepare(TermsQuery, field, terms);\n\t}\n\n\twildcard(field, wildcard) {\n\t\treturn this._prepare(WildcardQuery, field, wildcard);\n\t}\n\n\tfuzzy(field, fuzzy) {\n\t\treturn this._prepare(FuzzyQuery, field, fuzzy);\n\t}\n\n\tmatch(field, query) {\n\t\treturn this._prepare(MatchQuery, field, query);\n\t}\n\n\tmatchAll() {\n\t\treturn this._prepare(MatchAllQuery);\n\t}\n\n\tprefix(field, prefix) {\n\t\treturn this._prepare(PrefixQuery, field, prefix);\n\t}\n\n\texists(field) {\n\t\treturn this._prepare(ExistsQuery, field);\n\t}\n}\n\n/**\n * A query that wraps sub queries and returns a constant score equal to the query boost for every document in the filter.\n *\n * See also [Lucene#BooleanQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/ConstantScoreQuery.html}\n * and [Elasticsearch#ConstantScoreQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-constant-score-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .constantScore()\n *     .boost(1.5)\n *     .startFilter()\n *       .term(\"first_name\", \"albert\")\n *       .term(\"surname\", \"einstein\")\n *     .endFilter()\n * .build()\n * // The resulting documents:\n * // * contains albert as first name, einstein as surname and the document score is 42.\n *\n * @extends BaseQuery\n */\nexport class ConstantScoreQuery extends BaseQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"constant_score\", data);\n\t}\n\n\t/**\n\t * Starts an array of queries. Use endFilter() to finish the array.\n\t * @return {ArrayQuery} array query for holding sub queries\n\t */\n\tstartFilter() {\n\t\tthis._data.filter = {};\n\t\treturn new ArrayQuery(\"endFilter\", () => {\n\t\t\treturn this;\n\t\t}, this._data.filter);\n\t}\n}\n\n/**\n * A query that matches documents matching boolean combinations of sub queries.\n *\n * This query consists of one or more boolean clauses with different behavior but interrelated to each other.\n *\n * Occur         | Description\n * ------------- | -------------\n * must  | Finds documents which matches all sub queries.\n * filter  | Finds documents which matches all sub queries but these documents do not contribute to the score.\n * should  | Finds documents which matches some sub queries. The minimum amount of matches can be controlled with [minimumShouldMatch]{@link BoolQuery#minimumShouldMatch} (default is 1).\n * not  | Documents which match any sub query will be ignored.\n *\n * A sub query can be any other query type and also the bool query itself.\n *\n * See also [Lucene#BooleanQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/BooleanQuery.html}\n * and [Elasticsearch#BoolQuery]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .bool()\n *     .startMust().boost(2)\n *       .term(\"first_name\", \"albert\")\n *     .endMust()\n *     .startFilter()\n *       .term(\"birthplace\", \"ulm\")\n *     .endFilter()\n *     .startShould().minimumShouldMatch(2)\n *       .fuzzy(\"surname\", \"einstin\")\n *       .wildcard(\"name\", \"geni?s\")\n *       .term(\"quotes\", \"infinity\")\n *     .endShould()\n *     .startNot()\n *       .terms(\"research_field\", [\"biology\", \"geography\"])\n *     .endNot()\n * .build();\n * // The resulting documents:\n * // contains the name albert (must: contribute to the score with a boost of 2)\n * // contains the birthplace ulm (filter: not contribute to the score)\n * // contains a minimum of two matches from the fuzzy, wildcard and/or term query (should: contribute to the score)\n * // do not contains biology or geography as research field (not: not contribute to the score)\n *\n * @extends BaseQuery\n */\nexport class BoolQuery extends BaseQuery {\n\tconstructor(data = {}) {\n\t\tsuper(\"bool\", data);\n\t}\n\n\t/**\n\t * Starts an array of queries for must clause. Use endMust() to finish the array.\n\t * @return {ArrayQuery} array query for holding sub queries\n\t */\n\tstartMust() {\n\t\tthis._data.must = {};\n\t\treturn new ArrayQuery(\"endMust\", () => {\n\t\t\treturn this;\n\t\t}, this._data.must);\n\t}\n\n\t/**\n\t * Starts an array of queries for filter clause. Use endFilter() to finish the array.\n\t * @return {ArrayQuery} array query for holding sub queries\n\t */\n\tstartFilter() {\n\t\tthis._data.filter = {};\n\t\treturn new ArrayQuery(\"endFilter\", () => {\n\t\t\treturn this;\n\t\t}, this._data.filter);\n\t}\n\n\t/**\n\t * Starts an array of queries for should clause. Use endShould() to finish the array.\n\t * @return {ArrayQuery} array query for holding sub queries\n\t */\n\tstartShould() {\n\t\tthis._data.should = {};\n\t\treturn new ArrayQuery(\"endShould\", () => {\n\t\t\treturn this;\n\t\t}, this._data.should);\n\t}\n\n\t/**\n\t * Starts an array of queries for not clause. Use endNot() to finish the array.\n\t * @return {ArrayQuery} array query for holding sub queries\n\t */\n\tstartNot() {\n\t\tthis._data.not = {};\n\t\treturn new ArrayQuery(\"endNot\", () => {\n\t\t\treturn this;\n\t\t}, this._data.not);\n\t}\n\n\t/**\n\t * Controls the amount of minimum matching sub queries before a document will be considered.\n\t * @param {number} minShouldMatch - number of minimum matching sub queries\n\t * @return {BoolQuery} object itself for cascading\n\t */\n\tminimumShouldMatch(minShouldMatch) {\n\t\tif (typeof(minShouldMatch) !== \"number\" || minShouldMatch < 0) {\n\t\t\tthrow TypeError(\"Minimum should match must be a number greater than zero.\");\n\t\t}\n\t\tthis._data.minimum_should_match = minShouldMatch;\n\t\treturn this;\n\t}\n}\n\n/**\n * This query builder is the root of each query search.\n * The query contains a sub query and parameters for setup scoring and search options.\n *\n * Possible sub query types are:\n * {@link TermQuery}, {@link TermsQuery}, {@link FuzzyQuery}, {@link WildcardQuery},\n * {@link MatchQuery}, {@link MatchAllQuery}, {@link PrefixQuery},  {@link BoolQuery},\n * {@link ConstantScoreQuery}, {@link ExistsQuery}\n *\n * @example\n * new QueryBuilder()\n *   .finalScoring(true)\n *   .useBM25(1.5, 0.5)\n *   .term(\"first_name\", \"albert\")\n * .build();\n * // The resulting documents:\n * // contains the first name albert\n * // are scored and ranked using BM25 with k1=1.5 and b=0.5\n */\nexport class QueryBuilder {\n\tconstructor() {\n\t\tthis._data = {query: {}};\n\t\tthis.useBM25();\n\t}\n\n\t/**\n\t * The query performs a final scoring over all scored sub queries and rank documents by there relevant.\n\t * @param {boolean} enabled - flag to enable or disable final scoring\n\t * @return {QueryBuilder}\n\t */\n\tenableFinalScoring(enabled) {\n\t\tthis._data.final_scoring = Utils.asBoolean(enabled);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Use [Okapi BM25]{@link https://en.wikipedia.org/wiki/Okapi_BM25} as scoring model (default).\n\t *\n\t * See also [Lucene#MatchAllDocsQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/similarities/BM25Similarity.html}\n\t * and [Elasticsearch#BM25]{@link https://www.elastic.co/guide/en/elasticsearch/guide/current/pluggable-similarites.html#bm25}.\n\t *\n\t * @param {number} [k1=1.2] - controls how quickly an increase in term frequency results in term-frequency saturation.\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tLower values result in quicker saturation, and higher values in slower saturation.\n\t * @param {number} [b=0.75] - controls how much effect field-length normalization should have.\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tA value of 0.0 disables normalization completely, and a value of 1.0 normalizes fully.\n\t * @return {QueryBuilder}\n\t */\n\tuseBM25(k1 = 1.2, b = 0.75) {\n\t\tif (!Utils.isNumber(k1) || k1 < 0) {\n\t\t\tthrow TypeError(\"BM25s k1 must be a positive number.\");\n\t\t}\n\t\tif (!Utils.isNumber(b) || b < 0 || b > 1) {\n\t\t\tthrow TypeError(\"BM25s b must be a number between 0 and 1 inclusive.\");\n\t\t}\n\n\t\tthis._data.scoring = {\n\t\t\ttype: \"BM25\",\n\t\t\tk1: k1,\n\t\t\tb: b\n\t\t};\n\t\treturn this;\n\t}\n\n\tbool() {\n\t\treturn this._prepare(BoolQuery);\n\t}\n\n\tconstantScore() {\n\t\treturn this._prepare(ConstantScoreQuery);\n\t}\n\n\tterm(field, term) {\n\t\treturn this._prepare(TermQuery, field, term);\n\t}\n\n\tterms(field, terms) {\n\t\treturn this._prepare(TermsQuery, field, terms);\n\t}\n\n\twildcard(field, wildcard) {\n\t\treturn this._prepare(WildcardQuery, field, wildcard);\n\t}\n\n\tfuzzy(field, fuzzy) {\n\t\treturn this._prepare(FuzzyQuery, field, fuzzy);\n\t}\n\n\tmatch(field, query) {\n\t\treturn this._prepare(MatchQuery, field, query);\n\t}\n\n\tmatchAll() {\n\t\treturn this._prepare(MatchAllQuery);\n\t}\n\n\tprefix(field, prefix) {\n\t\treturn this._prepare(PrefixQuery, field, prefix);\n\t}\n\n\texists(field) {\n\t\treturn this._prepare(ExistsQuery, field);\n\t}\n\n\t_prepare(queryType, ...args) {\n\t\tthis._child = new queryType(...args, this._data.query);\n\t\tthis._child.build = () => {\n\t\t\treturn this._data;\n\t\t};\n\t\treturn this._child;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/inverted_index/queries.js","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Loki\"\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}